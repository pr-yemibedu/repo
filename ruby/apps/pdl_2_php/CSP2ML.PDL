##########################################################################################################
#FILE: GENERIC.BGA3CSP.PDL  VERSION: 1.56  DATE: 09/12/06  TIME: 20:56:25

#COPYRIGHT (C) 1994-2006 BY KULICKE AND SOFFA INDUSTRIES, INC.
#This software is the property of Kulicke and Soffa Industries, Inc.
#Any reproduction or distribution to a third party is
#strictly forbidden unless written permission is given by an
#authorized agent of Kulicke and Soffa.

#FILE: csp2ml.pdl     PDL For Second Bond of the Most Wires in Program.

set   USG_Mode_1            =   2        no_units   VAR_E         BOND1_USG_PRM   FULL         0        3        2           0        3  
set   USG_Power_1           =   400.0    mWatts     USG_POWER     BOND1_USG_PRM   FULL       0.0  4000.0   400.0       0.0  4000.0   
set   USG_Volts_1           =   3500.0   mVolts     USG_VOLTAGE   BOND1_USG_PRM   FULL       0.0 16000.0  3500.0       0.0  16000.0   
set   USG_Current_1         =   80.0     mAmps      USG_CURRENT   BOND1_USG_PRM   FULL       0.0 250.0    80.0       0.0  250.0   

set   C/V_2                 =   1.0      mils/msec  Z_VEL         BOND2_PRM  FULL    0.05      3.0      1.0         0.05    3.0  
set   Tip_2                 =   3.0      mils       Z_CV_DIST     BOND2_PRM  FULL         0.0      25.0     3.0         0.0      25.0  
  
set   Z_ContactDetectMode2     =   0        no_units   CONTACT_DETECT       BOND2_PRM  FULL         0        2        0           0        2  

set   USG_Mode_2            =   2        no_units   VAR_E         BOND2_USG_PRM  FULL         0        3        1           0        3  
set   USG_Power_2           =   400.0    mWatts     USG_POWER     BOND2_USG_PRM  FULL       0.0  4000.0   400.0       0.0  4000.0   
set   USG_Volts_2           =   7000.0   mVolts     USG_VOLTAGE   BOND2_USG_PRM  FULL       0.0 16000.0  7000.0       0.0  16000.0   
set   USG_Current_2         =   100.0    mAmps      USG_CURRENT   BOND2_USG_PRM  FULL       0.0 250.0   100.0       0.0  250.0   
set   USG_Bond_Time_2       =   7.0      ms         USGTIME       BOND2_USG_PRM  FULL 0.0  3980.0  7.0      0.0   3980.0   
  
set   USG_Freq_2            =   1        no_units   USG_FREQ      BOND2_USG_PRM  FULL         0        1        1           0        1  
  
set   Force_2               =   85.0     grams      BFORCE        BOND2_FORCE_PRM  FULL   0.0     700.0      85.0       0.0        700.0   
set   Minimum_Force_2       =   5.0      grams      BFORCE        BOND2_FORCE_PRM  FULL_HIDDEN 0.0    20.0        5.0     0.0   20.0  
  
set   USG_Init_Time_2       =   0        %          PERCENT       BOND2_USG_PRM  FULL         0        100      0           0        100  
set   USG_Init_Level_2      =   100      %          PERCENT       BOND2_USG_PRM  FULL         0        500      100         0        500  

set   Sec_Equ_PF            =   100      %          PERCENT       BOND2_USG_PRM    FULL         0        200      100         0        200  
set   Sec_Equ_FF            =   100      %          PERCENT       BOND2_FORCE_PRM  FULL         0        200      100         0        200  
set   PreBleed_2            =   0        %          PERCENT       BOND2_USG_PRM    FULL         0        100      0           0        100  
set   PreBleed_Curr2        =   0        mAmps      USG_CURRENT   BOND2_USG_PRM    FULL         0        250      0           0        250  

set   Z_Tear_State          =   0        no_units   VAR_E         BOND2_MISC_PRM  FULL         0        1        0           0        1  
set   Z_Tear_USG            =   0        mAmps      USG_CURRENT   BOND2_MISC_PRM  FULL         0        250      0           0        250  
set   Z_Tear_Speed          =   100      %          PERCENT       BOND2_MISC_PRM  FULL         10       100      100        10        100  
  
set   Tail_XY_Mode          =   0        no_units   VAR_E         BOND2_MISC_PRM  FULL         0         2        0          0        2  
set   Tail_XY_Dist          =   0.0      mils       VAR_E         BOND2_MISC_PRM  FULL        -10.0     10.0     0.0        -10.0     10.0  

set   USG_Profile_2a        =   0        no_units   VAR_E         BOND2_USG_PRM  FULL         0        2        0           0        2  
set   Ramp_Up_Time_2a       =   10       %          PERCENT       BOND2_USG_PRM  FULL         0        75       10          0        75  
set   Ramp_Down_Time_2a     =   0        %          PERCENT       BOND2_USG_PRM  FULL         0        25       0           0        25  
set   Burst_Time_2a         =   1.5      ms         VAR_E         BOND2_USG_PRM  FULL         1.5      3.0      1.5         1.5      3.0  
set   Burst_Level_2a        =   125      %          PERCENT       BOND2_USG_PRM  FULL         100      200      125         100      200  
set   USG_Pre-Delay_2a      =   0.0      ms         TIME          BOND2_USG_PRM  FULL         0.0      100.0    0.0         0.0      100.0  
  
set   FsThreshold_2         =   10       grams      SENSOR_FORCE  BOND2_FORCE_PRM  FULL         5        50       5           5        50  
  
set   Contact_Threshold_2a   =   70      %          CONTACT_THR   BOND2_PRM  FULL         10       90       70          10       90  
  
set   Force_Profiling_2     =   0        no_units   BOOLEAN       BOND2_FORCE_PRM  FULL         0        1        0           0        1  
set   Initial_Force_2       =   115.0    grams      BFORCE        BOND2_FORCE_PRM  FULL   0.0     700.0     115.0       0.0      700.0   
set   Initial_Force_Time_2    =   33     %          PERCENT       BOND2_FORCE_PRM  FULL         5        100      33          5        100  
set   Force_Ramp_Time_2     =   10       %          PERCENT       BOND2_FORCE_PRM  FULL         0        100      10          0        100  

set   Force_Ramp_Down_2     =   0.0      ms         VAR_E         BOND2_FORCE_PRM  FULL_HIDDEN  0.0      100.0    0.0         0.0      100.0  
set   Extra_Rmp_Dwn_2       =   0.0      ms         TIME          BOND2_FORCE_PRM  FULL_HIDDEN  0.0      100.0    0.0         0.0      100.0  
set   USG_RingDown_2        =   0.0      ms         VAR_E         BOND2_USG_PRM    FULL_HIDDEN  0.0      100.0    0.0         0.0      100.0  
set   Damp_Time_2           =   100      %          PERCENT       BOND2_FORCE_PRM  FULL_HIDDEN  0        100      100         0        100  
set   Damp_Gain_2           =   100      %          PERCENT       BOND2_FORCE_PRM  FULL_HIDDEN  0        200      100         0        200  
set   Post_Damp_Gain_2      =   100      %          PERCENT       BOND2_FORCE_PRM  FULL_HIDDEN  0        200      100         0        200  
set   Cap_Offset_2          =   0.0      mils       VAR_E         BOND2_MISC_PRM   FULL        -20.0     20.0     0.0        -20.0     20.0  
set   ReworkUSGRatio_2      =   100      %          PERCENT       BOND2_MISC_PRM   FULL_HIDDEN  100      200      100         100        200  
set   ReworkForceRatio_2    =   100      %          PERCENT       BOND2_MISC_PRM   FULL_HIDDEN  100      200      100         100        200  
 
set   Repair_Offset_2       =   0.0      mils       VAR_E         BOND2_MISC_PRM  FULL        -10.0     10.0     0.0        -10.0     10.0  

set   Bleed_Power_2         =   2.0      mWatts     USG_POWER     BOND2_USG_PRM  FULL       0.0  4000.0     2.0       0.0  4000.0   
set   Bleed_Current_2       =   10.0     mAmps      USG_CURRENT   BOND2_USG_PRM  FULL       0.0 250.0    10.0       0.0  250.0   
set   Bleed_Voltage_2       =   250.0    mVolts     USG_VOLTAGE   BOND2_USG_PRM  FULL       0.0 16000.0   250.0       0.0  16000.0   

set   Tail_Scrub_Mode       =   1        no_units   VAR_E         BOND2_SCRUB_PRM  FULL         0        2        1           0       2  
set   Tail_Scrub_Amp        =   0        microns    XY_DIST       BOND2_SCRUB_PRM  FULL         0        20       0           0       20  
set   Tail_Scrub_Phase      =   0        no_units   VAR_E         BOND2_SCRUB_PRM  FULL         0        2        0           0       2  
set   Tail_Scrub_Cycles     =   1        no_units   VAR_E         BOND2_SCRUB_PRM  FULL         1        10       1           1       10  
set   Tail_Scrub_Freq       =   100      no_units   VAR_E         BOND2_SCRUB_PRM  FULL         10      150     100          10       150  
set   Tail_Step_USG         =   0.0      mAmps      USG_CURRENT   BOND2_SCRUB_PRM  FULL        0.0  250.0   0.0       0.0  250.0   
set   Tail_Scrub_USG        =   0        %          PERCENT       BOND2_SCRUB_PRM  FULL         0        200      0           0        200  
set   Tail_Scrub_Force      =   20.0     grams      BFORCE        BOND2_SCRUB_PRM  FULL     0.0     350.0     20.0       0.0      350.0  
set   Scrub_Force_Ramp_Down_2   =   0.0  ms         VAR_E         BOND2_SCRUB_PRM  FULL_HIDDEN  0.0      100.0    0.0         0.0      100.0  
set   Tail_Scrub_Ht         =   0        microns    Z_DIST        BOND2_SCRUB_PRM  FULL         0        250       0          0      250  

set   Tail_Scrub_Offset     =   0        microns    XY_DIST       BOND2_SCRUB_PRM  FULL        -50       50       0          -50      50  
  
set   Tail_ScrubTime_Offset   =   0.0    ms         VAR_E         BOND2_SCRUB_PRM  FULL       -50.0      50.0     0.0       -50.0    50.0  
set   Tail_ScrubOffset_Mode   =   0      no_units   VAR_E         BOND2_SCRUB_PRM  FULL         0        2        0           0       2  

set   Tail_Step_Offset      =   0        microns    XY_DIST       BOND2_SCRUB_PRM  FULL        -50        50      0         -50      50  
set   Tail_Scrub_Steps      =   1        no_units   VAR_E         BOND2_SCRUB_PRM  FULL         1       10        1           1       10  
set   Tail_Step_Speed       =   100      %          PERCENT       BOND2_SCRUB_PRM  FULL        10       100      100         10       100  
set   Tail_PostStep_Force   =   0.0      grams      BFORCE        BOND2_SCRUB_PRM  FULL   0.0     700.0      0.0       0.0        700.0   
set   Tail_PostStep_Ramp    =   0.0      ms         VAR_E         BOND2_SCRUB_PRM  FULL_HIDDEN  0.0      100.0    0.0         0.0      100.0  
set   Tail_PostStep_USG     =   0.0      mAmps      USG_CURRENT   BOND2_SCRUB_PRM  FULL       0.0 250.0   0.0       0.0  250.0   
set   Tail_PostStep_Time    =   0.0      ms         TIME          BOND2_SCRUB_PRM  FULL  0.0      100.0    0.0         0.0      100.0  
  
set   Scrub_Phase_Mode2      =   0       no_units   VAR_E         BOND2_SCRUB_PRM  FULL         0        2        0            0       2  
set   Sec_Scrub_Delay_Mode   =   0       no_units   BOOLEAN       BOND2_SCRUB_PRM  FULL         0        1        0            0       1  
set   Sec_Scrub2_Amp         =   0.0     microns    VAR_E         BOND2_SCRUB_PRM  FULL         0.0      10.0     0.0          0.0    10.0         
set   Sec_Scrub_Cycles2      =   0       no_units   VAR_E         BOND2_SCRUB_PRM  FULL         0        10       0            0      10  
set   Sec_Scrub_Phase2       =   0       deg        VAR_E         BOND2_SCRUB_PRM  FULL         0        180      0            0      180  
  
set   S_C/V_2               =   1.0      mils/msec  Z_VEL         BOND2_SSB_SEC_PRM  FULL    0.05      3.0      1.0         0.05    3.0  
  
set   S_USG_Factor_2        =   100      %          PERCENT       BOND2_SSB_SEC_PRM  FULL         0        200      100         0        200  
set   S_USG_Time_2          =   7.0      ms         USGTIME       BOND2_SSB_SEC_PRM  FULL 0.0  3980.0  7.0         0.0   3980.0   
set   S_Force_2             =   85.0     grams      BFORCE        BOND2_SSB_SEC_PRM  FULL   0.0     700.0      85.0       0.0     700.0   
set   S_Init_Force_2        =   115.0    grams      BFORCE        BOND2_SSB_SEC_PRM  FULL   0.0     700.0     115.0       0.0     700.0   
 
set   Loop_Height           =   10.0     mils       Z_DIST        REDUCED_LOOP_PRM   REDUCED      4.0      100.0    10.0        4.0      100.0  
  
set   X_C/V                 =   0.0      mps        VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   X_pos_new             =   0.0      mils       VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   Y_C/V                 =   0.0      mps        VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   Y_pos_new             =   0.0      mils       VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   x_rev1                =   0.0      mils       VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   y_rev1                =   0.0      mils       VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   z_rev                 =   0.0      mils       Z_DIST        NO_SAVE      UNKNOWN      0.0      0.0      0.0  
set   x_rev1a               =   0.0      mils       VAR_N         NO_SAVE      UNKNOWN      0.0      0.0      0.0  
set   y_rev1a               =   0.0      mils       VAR_N         NO_SAVE      UNKNOWN      0.0      0.0      0.0  
set   z_rev1a               =   0.0      mils       Z_DIST        NO_SAVE      UNKNOWN      0.0      0.0      0.0  
set   x_rev1b               =   0.0      mils       VAR_N         NO_SAVE      UNKNOWN      0.0      0.0      0.0  
set   y_rev1b               =   0.0      mils       VAR_N         NO_SAVE      UNKNOWN      0.0      0.0      0.0  
set   z_rev1b               =   0.0      mils       Z_DIST        NO_SAVE      UNKNOWN      0.0      0.0      0.0  
set   x_rev2                =   0.0      mils       VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0   
set   y_rev2                =   0.0      mils       VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   rx_rev2               =   0.0      mils       VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0   
set   ry_rev2               =   0.0      mils       VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   rz_rev2               =   0.0      mils       VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   x_rev3                =   0.0      mils       VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0   
set   y_rev3                =   0.0      mils       VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
    
set   rx_rev3               =   0.0      mils       VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   ry_rev3               =   0.0      mils       VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   rz_rev3               =   0.0      mils       VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   x_rev4                =   0.0      mils       VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   y_rev4                =   0.0      mils       VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   x_lat1                =   0.0      mils       VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   y_lat1                =   0.0      mils       VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   x_arc                 =   0.0      mils       VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   y_arc                 =   0.0      mils       VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   overbend_angle        =   0.0      rad        VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   x_pos_before_loop_2nd   =   0.0    mils       VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   y_pos_before_loop_2nd   =   0.0    mils       VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   x_top_of_loop         =   0.0      mils       VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   y_top_of_loop         =   0.0      mils       VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
    
set   rtheta                =   0.0      rad        VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   rtheta_limit          =   1.57     rad        VAR_N         NO_SAVE        UNKNOWN     1.57     1.57     1.57  
set   r2                    =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      10.0     0.0  
set   r3                    =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      10.0     0.0  
set   r4                    =   0.0      no_units   NO_TYPE       NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   kink_ht               =   0.0      no_units   NO_TYPE       NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   loop_bal_adder        =   0.0      no_units   NO_TYPE       NO_SAVE      UNKNOWN      0.0      0.0      0.0  
set   shape_mode            =   0        no_units   NO_TYPE       NO_SAVE      UNKNOWN      0        0        0  
set   new_smooth            =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   new_smooth_2          =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   new_span_1            =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   new_sf_1              =   0.0      deg        ANGLE         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   new_span_2            =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
    
set   seg_height            =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   seg_sharpness         =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   seg_extraangle        =   0.0      deg        ANGLE         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   seg_sf                =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   last_sf               =   0.0      deg        ANGLE         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   seg_sf_extra          =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   previous_moves        =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   seg_arc               =   0        no_units   NO_TYPE       NO_SAVE        UNKNOWN      0        0        0  
set   seg_arc_scale         =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   seg_arc_angle         =   0.0      deg        ANGLE         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   new_sf_2              =   0.0      deg        ANGLE         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
    
set   new_span_3            =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   new_sf_3              =   0.0      deg        ANGLE         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   new_sf1_extra         =   0.0      deg        ANGLE         NO_SAVE      UNKNOWN      0.0      0.0      0.0  
set   new_sf2_extra         =   0.0      deg        ANGLE         NO_SAVE      UNKNOWN      0.0      0.0      0.0  
set   new_sf3_extra         =   0.0      deg        ANGLE         NO_SAVE      UNKNOWN      0.0      0.0      0.0  
set   zprime1               =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0   
set   zprime2               =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0   
set   new_adj_loop          =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   arc_corr0             =   0.0      mils       VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   arc_z0                =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   bhr                   =   3943     mils       VAR_N         NO_SAVE        UNKNOWN     3943     3943     3943  
set   bhr^2                 =   15547249 mils       VAR_N         NO_SAVE        UNKNOWN 15547249 15547249 15547249  
    
set   t1arc                 =   0.0      mils       VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   t2arc                 =   0.0      mils       VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   t3arc                 =   0.0      mils       VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
    
set   arc_corr1             =   0.0      mils       VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   arc_corr2             =   0.0      mils       VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   arc_corr3             =   0.0      mils       VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   arc_corr3a            =   0.0      mils       VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   arc_corr4             =   0.0      mils       VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   arc_corr4a            =   0.0      mils       VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
    
set   arc_corr5             =   0.0      mils       VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   arc_corr5a            =   0.0      mils       VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   arc_corr6             =   0.0      mils       VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   arc_corr6a            =   0.0      mils       VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   arc_corr7             =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   arc_corr8             =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   arc_corr_zero         =   0.0      no_units   VAR_N         NO_SAVE      UNKNOWN      0.0      0.0      0.0  
set   z_ht_sum              =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
    
set   ymove_temp            =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   ymove_total           =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   zonly_correct         =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   arc1_correct          =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   arc3_correct          =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   arc5_correct          =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
    
set   arc8_correct          =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   tol_correction        =   0.0      mils       VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   arc_correction        =   0.0      mils       VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
    
set   shape_flag            =   0.0      no_units   VAR_N         NO_SAVE      UNKNOWN      0.0      0.0      0.0  
set   new_c_o               =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   z_pos_diff            =   0.0      mils       VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   Adjusted_Loop         =   0        no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
    
set   cap_xpos              =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   cap_ypos              =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   neg_bond_dist         =   0.0      mils       Z_DIST        NO_SAVE      UNKNOWN      0.0      0.0      0.0  
set   x_scalar              =   0.0      no_units   VAR_N         NO_SAVE      UNKNOWN      0.0      0.0      0.0  
set   y_scalar              =   0.0      no_units   VAR_N         NO_SAVE      UNKNOWN      0.0      0.0      0.0  
set   XY_C/V                =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   X_C/V2                =   0.0      mps        VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   Y_C/V2                =   0.0      mps        VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
       
set   lf2_scale             =   0.30    no_units    NO_TYPE       NO_SAVE      UNKNOWN     0.30     0.30     0.30  
set   lf4_scale             =   -5.7    no_units    NO_TYPE       NO_SAVE      UNKNOWN     -5.7     -5.7     -5.7  
    
set   adjusted_tip2         =   0.0     no_units    NO_TYPE       NO_SAVE      UNKNOWN      0.0      0.0      0.0  
set   news_scalar           =   0.0     no_units    NO_TYPE       NO_SAVE      UNKNOWN      0.0      0.0      0.0   
 
set   bond_ramp_up_2        =   0.0      ms         USGTIME       NO_SAVE      UNKNOWN      0.0      0.0      0.0  
set   bond_ramp_dn_2        =   0.0      ms         USGTIME       NO_SAVE      UNKNOWN      0.0      0.0      0.0  
set   burst_time_2          =   0.0      ms         USGTIME       NO_SAVE      UNKNOWN      0.0      0.0      0.0  
set   USGbondtime2          =   0.0      no_units   VAR_N         NO_SAVE      UNKNOWN      0.0      0.0      0.0   
set   USG_inittime2         =   0.0      ms         USGTIME       NO_SAVE      UNKNOWN      0.0      0.0      0.0   
set   burst_level_2         =   0.0      no_units   VAR_N         NO_SAVE      UNKNOWN      0.0      0.0      0.0  
set   Adj_USG_Power_2       =   0.0      no_units   NO_TYPE       NO_SAVE      UNKNOWN      0.0      0.0      0.0  
set   Adj_USG_Volts_2       =   0.0      no_units   NO_TYPE       NO_SAVE      UNKNOWN      0.0      0.0      0.0  
set   Adj_USG_Current_2     =   0.0      no_units   NO_TYPE       NO_SAVE      UNKNOWN      0.0      0.0      0.0   
 
set   Adj_Force_2           =   0.0      no_units   NO_TYPE       NO_SAVE      UNKNOWN      0.0      0.0      0.0   
set   Adj_Initial_Force_2   =   0.0      no_units   NO_TYPE       NO_SAVE      UNKNOWN      0.0      0.0      0.0   
set   Post_Gain_2           =   1.0      no_units   NO_TYPE       NO_SAVE      UNKNOWN      1.0      1.0      1.0  
    
set   FDC_timeoff           =   0.0      ms         VAR_N         NO_SAVE      UNKNOWN      0.0      0.0      0.0  
    
set   minXY_ATX1P           =   2.6      ms         VAR_E         NO_SAVE      UNKNOWN      2.6      2.6      2.6  
    
set   fdcIBFlimit           =   0.0      no_units   NO_TYPE       NO_SAVE      UNKNOWN      0.0      0.0      0.0  
set   forceTimeAdder        =   0.0      no_units   NO_TYPE       NO_SAVE      UNKNOWN      0.0      0.0      0.0  

set   DACperGram            =   0.0      no_units   VAR_N         NO_SAVE      UNKNOWN      0.0      0.0      0.0  
set   IBFtime               =   0.0      no_units   VAR_N         NO_SAVE      UNKNOWN      0.0      0.0      0.0  
set   FBFtime               =   0.0      no_units   VAR_N         NO_SAVE      UNKNOWN      0.0      0.0      0.0  
set   hifrcflag             =   0        no_units   VAR_N         NO_SAVE      UNKNOWN      0        0        0  
set   0.0grams              =   0.0      grams      BFORCE        NO_SAVE      UNKNOWN      0.0      0.0      0.0  
set   100.0grams            =   100.0    grams      BFORCE        NO_SAVE      UNKNOWN    100.0    100.0    100.0  
set   hifrclimit            =   350.0    no_units   VAR_N         NO_SAVE      UNKNOWN    350.0    350.0    350.0  
set   hifrc_fctr            =   0.0      no_units   VAR_N         NO_SAVE      UNKNOWN      0.0      0.0      0.0  
set   hifrc_threshold       =   0.0      no_units   VAR_N         NO_SAVE      UNKNOWN      0.0      0.0      0.0  
set   hifrc_timebase        =   0.0      no_units   VAR_N         NO_SAVE      UNKNOWN      0.0      0.0      0.0  
set   IBFpctTime            =   0.0      no_units   VAR_N         NO_SAVE      UNKNOWN      0.0      0.0      0.0  

set   tail_step_dist        =   0.0      no_units   VAR_N         NO_SAVE      UNKNOWN      0.0      0.0      0.0  
set   tail_dist_total       =   0.0      no_units   VAR_N         NO_SAVE      UNKNOWN      0.0      0.0      0.0  
set   tail_step_cnt         =   0        no_units   VAR_N         NO_SAVE      UNKNOWN      0         0        0  
set   tail_step_delay       =   0.25     no_units   VAR_N         NO_SAVE      UNKNOWN      0.25    0.25     0.25  
 
set   z_infl_pt             =   0.0      mils        Z_POS        NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   x_infl_pt             =   0.0      mils        X_POS        NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   y_infl_pt             =   0.0      mils        Y_POS        NO_SAVE        UNKNOWN      0.0      0.0      0.0  
    
set   x_csp_rkink           =   0.0      no_units    VAR_N        NO_SAVE        UNKNOWN      0.0      0.0      0.0   
set   y_csp_rkink           =   0.0      no_units    VAR_N        NO_SAVE        UNKNOWN      0.0      0.0      0.0   
set   z_csp_rkink           =   0.0      no_units    VAR_N        NO_SAVE        UNKNOWN      0.0      0.0      0.0   
set   csp_adj_loop          =   0.0      no_units    VAR_N        NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   csp_span_loc          =   0.0      no_units    VAR_N        NO_SAVE        UNKNOWN      0.0      0.0      0.0  
    
set   tail_kink_height      =   0.0      no_units    VAR_N        NO_SAVE        UNKNOWN      0.0      0.0      0.0  
      
set   tail_kink_radius      =   0.0      no_units    VAR_N        NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   x_tail_kink           =   0.0      no_units    VAR_N        NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   y_tail_kink           =   0.0      no_units    VAR_N        NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   z_tail_kink           =   0.0      no_units    VAR_N        NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   x_tail_rkink          =   0.0      no_units    VAR_N        NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   y_tail_rkink          =   0.0      no_units    VAR_N        NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   z_tail_rkink          =   0.0      no_units    VAR_N        NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   xy_tail_kink          =   0.0      no_units    VAR_N        NO_SAVE        UNKNOWN      0.0      0.0      0.0  
      
set   tk_angle              =   0.0      no_units    VAR_N        NO_SAVE        UNKNOWN      0.0      0.0      0.0  
      
set   tk_length             =   0.0      no_units    VAR_N        NO_SAVE        UNKNOWN      0.0      0.0      0.0  
      
set   cont_thresh_2         =   0.0      no_units    VAR_N        NO_SAVE        UNKNOWN      0.0      0.0      0.0      
  
set   Kink_Height           =   8.0      mils       Z_DIST        LOOP_PRM         FULL         0.0      100.0    8.0         0.0      100.0  
set   Reverse_Motion        =   8.0      mils       XY_DIST       LOOP_PRM         FULL        -10.0     150.0    8.0        -10.0     150.0  
set   Rmot_Angle            =   90       deg        ANGLE         LOOP_SHAPING_PRM         FULL        0        180      90          0        180  
      
set   Rev_Motion_2          =   0.0      mils       XY_DIST       LOOP_SHAPING_PRM         FULL        0.0      50.0     0.0         0.0      50.0  
set   Rmot_Angle_2          =   90       deg        ANGLE         LOOP_SHAPING_PRM         FULL        0        180      90          0        180  
  
set   Rmot_Speed            =   100      %          PERCENT       LOOP_MISC_PRM         FULL_HIDDEN  1        100      100         1        100  

set   Loop_Factor           =   -5.0     mils       Z_DIST        LOOP_PRM         FULL        -25.0     75.0    -5.0        -25.0     75.0  
  
set   2nd_Approach          =   0        no_units   BOOLEAN       LOOP_2ND_APPROACH_PRM         FULL         0        1        0           0        1  
  
set   Contact_Angle         =   0.0      no_units   VAR_E         LOOP_2ND_APPROACH_PRM         FULL         -1        10       0          -1        10  
set   Contact_Offset        =   0.0      mils       VAR_E         LOOP_2ND_APPROACH_PRM         FULL         0.0      5.0      0.0         0.0      5.0  
  
set   Step_Clamp            =   1        no_units   VAR_E         LOOP_2ND_APPROACH_PRM         FULL         1        2        1           1        2   
set   XY_Step               =   0.0      mils       XY_DIST       LOOP_2ND_APPROACH_PRM         FULL        0.0     20.0     0.0        0.0      20.0  
set   Z_Step                =   0.0      mils       Z_DIST        LOOP_2ND_APPROACH_PRM         FULL        0.0     25.0     0.0        0.0     25.0  
  
set   Step_Speed            =   100      %          PERCENT       LOOP_2ND_APPROACH_PRM         FULL_HIDDEN 1        100      100         1        100  
  
set   LF4                   =   100      %          PERCENT       LOOP_MISC_PRM         FULL        1        100      100         1        100  
    
set   Loop_Factor_2         =   20.0     no_units   LF2_CALC      LOOP_2ND_APPROACH_PRM         FULL       -20.0      20.0     20.0     -20.0        20.0  
  
set   Loop_Balance1         =   100.0    %          PERCENT       LOOP_BALANCE_PRM         FULL        0.0      200.0    100.0       0.0      200.0  
    
set   Ref_Wire_Length       =   0.0      mils       XY_DIST       LOOP_BALANCE_PRM         FULL        0.0      300.0    0.0         0.0      300.0  
    
set   Bal_Control           =   0        no_units   BOOLEAN       LOOP_BALANCE_PRM         FULL        0        1        0           0        1  
set   X_Balance             =   100.0    %          PERCENT       LOOP_BALANCE_PRM         FULL        80.0     120.0    100.0       80.0     120.0  
set   Y_Balance             =   100.0    %          PERCENT       LOOP_BALANCE_PRM         FULL        80.0     120.0    100.0       80.0     120.0  
set   Back_Balance          =   100.0    %          PERCENT       LOOP_BALANCE_PRM         FULL        80.0     120.0    100.0       80.0     120.0  
set   Front_Balance         =   100.0    %          PERCENT       LOOP_BALANCE_PRM         FULL        80.0     120.0    100.0       80.0     120.0  
set   Left_Balance          =   100.0    %          PERCENT       LOOP_BALANCE_PRM         FULL        80.0     120.0    100.0       80.0     120.0  
set   Right_Balance         =   100.0    %          PERCENT       LOOP_BALANCE_PRM         FULL        80.0     120.0    100.0       80.0     120.0  
  
set   Arc_Comp_Mode         =   0        no_units   VAR_E         LOOP_BALANCE_PRM         FULL         0         2        0          0         2    

set   Bleed_Voltage         =   1000.0   mVolts     USG_VOLTAGE   LOOP_SHAPING_PRM         FULL        0.0      5000.0   1000.0      0.0      5000.0  
set   Loop_Bleed_Current    =   15.0     mAmps      USG_CURRENT   LOOP_SHAPING_PRM         FULL       0.0 250.0    15.0      0.0  250.0   
    
set   Shape_Factor_1        =   0.0      deg        ANGLE         LOOP_SHAPING_PRM         FULL       -90.0     90.0     15.0       -90.0     90.0  
    
set   Span_Distance         =   0        no_units   BOOLEAN       LOOP_SHAPING_PRM         FULL        0        1        0           0        1  
    
set   Span_Length_1         =   40       %          PERCENT       LOOP_SHAPING_PRM         FULL        0        100      40          0        100  
    
set   Flat_Len_1            =   0.0      mils       VAR_E         LOOP_SHAPING_PRM         FULL        0.0      300.0    0.0    0.0        300.0   
    
set   Smoothness            =   25       %          PERCENT       LOOP_SHAPING_PRM         FULL        0        101      25          0        101  
      
set   Flat_Smooth           =   0.0      mils       VAR_E         LOOP_SHAPING_PRM         FULL       -1.0      300.0    0.0       -1.0       300.0   
      
set   Auto_Flat             =   0        no_units   BOOLEAN       LOOP_SHAPING_PRM         FULL         0        1        0           0        1  
        
set   Use_Die_Edge          =   0        no_units   BOOLEAN       LOOP_SHAPING_PRM         FULL         0        1        0           0        1  
set   Die_Edge_Clr          =   0.0      mils       XY_DIST       LOOP_SHAPING_PRM         FULL         0.0      150.0    0.0         0.0      150.0  
  
set   Overbend_Scale        =   100.0    %          PERCENT       LOOP_SHAPING_PRM         FULL_HIDDEN 0.0      200.0    100.0       0.0      200.0  
  
set   Shape_Control         =   0        no_units   BOOLEAN       LOOP_SHAPING_PRM         FULL_HIDDEN 0        1        0           0        1  
  
set   CSP_SF_2              =   10.0     deg        ANGLE         LOOP_SHAPING_PRM         FULL        0.0      90.0     10.0        0.0      90.0  
set   Auto_Shape            =   0        no_units   BOOLEAN       LOOP_SHAPING_PRM         FULL        0        1        0           0        1  
set   Flat_Len_2            =   0.0      mils       VAR_E         LOOP_SHAPING_PRM         FULL        0.0      300.0    0.0    0.0        300.0   
set   CSP_Kink_Angle        =   60       deg        ANGLE         LOOP_SHAPING_PRM         FULL        40       90       60         40        90  
set   CSP_Kink_Factor       =   100      %          PERCENT       LOOP_SHAPING_PRM         FULL        40       110      100        40        110  
set   CSP_Loop_Factor       =   0.0      mils       Z_DIST        LOOP_SHAPING_PRM         FULL       -25.0     25.0     0.0       -25.0      25.0  
set   CSP_Bump              =   20.0     %          PERCENT       LOOP_SHAPING_PRM         FULL        0.0      100.0    100.0      0.0       100.0  
set   CSP_Kink_Speed        =   100      %          PERCENT       LOOP_SHAPING_PRM         FULL_HIDDEN 1        100      100        1         100  
set   Kink_Bleed_Voltage    =   0.0      mVolts     USG_VOLTAGE   LOOP_SHAPING_PRM         FULL_HIDDEN 0.0      10000.0  0.0        0.0       10000.0  
 
set   Lift_USG_Ratio        =   0        %          PERCENT       BOND1_MISC_PRM   FULL        0        100      0           0      100  
set   Lift_Throttle         =   100      %          PERCENT       BOND1_MISC_PRM   FULL        1        100      100         1        100  
 
set   Z_Diff_Control        =   0        no_units   BOOLEAN       LOOP_MISC_PRM         FULL_HIDDEN 0        1        0           0        1  
set   Z_Diff_Target         =   0.0      mils       VAR_E         LOOP_MISC_PRM         FULL_HIDDEN 0.0      100.0    0.0         0.0      100.0  
set   Z_Diff_Scale          =   0.0      %          PERCENT       LOOP_MISC_PRM         FULL_HIDDEN 0.0      200.0    100.0       0.0      200.0  
set   Z_Diff_Ball           =   0.0      %          PERCENT       LOOP_MISC_PRM         FULL_HIDDEN 0.0      100.0    0.0         0.0      100.0  
  
set   Stitch_Option         =   0        no_units   VAR_E         LOOP_MISC_PRM         FULL         0        1        0           0        1  
  
set   Z_Rise_Dist           =   3.0      mils       Z_DIST        LOOP_MISC_PRM         FULL         1.0      10.0     3.0         1.0     10.0  
set   Tack_Dist             =   0.0      mils       VAR_E         LOOP_MISC_PRM         FULL        -5.0      5.0      0.0        -5.0      5.0  
 
set   First_Speed           =   100      %          PERCENT       LOOP_MISC_PRM         FULL_HIDDEN  1        100      100         1        100  
set   Loop_Speed            =   100      %          PERCENT       LOOP_MISC_PRM         FULL_HIDDEN  1        100      100         1        100  
  
set   Tail_Speed            =   100      %          PERCENT       LOOP_MISC_PRM         FULL_HIDDEN  1        100      100         1        100  
set   Reset_Speed           =   100      %          PERCENT       LOOP_MISC_PRM         FULL_HIDDEN  1        100      100         1        100  
 
set   ResFst_filter_ATX2    =   0        no_units   VAR_E         LOOP_MISC_PRM         FULL_HIDDEN  0        6        3           0        6  
set   SecNfr_filter_ATX2    =   4        no_units   VAR_E         LOOP_MISC_PRM         FULL_HIDDEN  0        6        4           0        6  
set   LopSec_filter_ATX2    =   4        no_units   VAR_E         LOOP_MISC_PRM         FULL_HIDDEN  0        6        4           0        6  
set   InflPt_filter         =   0        no_units   VAR_E         LOOP_MISC_PRM         FULL_HIDDEN  0        6        0           0        6  
set   TailXYZ_filter        =   0        no_units   VAR_E         LOOP_MISC_PRM         FULL_HIDDEN  0        6        0           0        6  
set   TailXY_filter         =   0        no_units   VAR_E         LOOP_MISC_PRM         FULL_HIDDEN  0        6        0           0        6  
set   TailZ_filter          =   0        no_units   VAR_E         LOOP_MISC_PRM         FULL_HIDDEN  0        6        0           0        6  
set   RiseRst_filter        =   0        no_units   VAR_E         LOOP_MISC_PRM         FULL_HIDDEN  0        6        3           0        6  
set   LoopZ_filter          =   0        no_units   VAR_E         LOOP_MISC_PRM         FULL_HIDDEN  0        6        6           0        6  
set   LoopXY_filter         =   0        no_units   VAR_E         LOOP_MISC_PRM         FULL_HIDDEN  0        6        6           0        6  
set   LoopXYZ_filter        =   0        no_units   VAR_E         LOOP_MISC_PRM         FULL_HIDDEN  0        6        6           0        6  
set   FDC_filter            =   0        no_units   VAR_E         LOOP_MISC_PRM         FULL_HIDDEN  0        6        0           0        6  
set   SSBSmth_filter        =   0        no_units   VAR_E         LOOP_MISC_PRM         FULL_HIDDEN  0        6        0           0        6  
set   StepXY_filter         =   0        no_units   VAR_E         LOOP_MISC_PRM         FULL_HIDDEN  0        6        0           0        6  
set   StitchZ_filter        =   0        no_units   VAR_E         LOOP_MISC_PRM         FULL_HIDDEN  0        6        0           0        6  
  
set   VBF_Switch            =   1        no_units   VAR_E         BOND2_MISC_PRM        FULL_HIDDEN  0        3        1           0        3  
 
set   Clamp_Open_Offset     =   0.0      ms         TIME          BITS_OTHER_MISC_PRM   FULL_HIDDEN  0.0      5.0      0.0         0.0      5.0  
  
set   Bond_Force_Osc_Mmt  =     0        no_units   VAR_E         BITS_OTHER_MISC_PRM   FULL         0        2        0           0        2  
 
set   approach_mode         =   0        no_units   NO_TYPE       NO_SAVE      UNKNOWN      0        0        0  
set   stitch_mode           =   0        no_units   NO_TYPE       NO_SAVE      UNKNOWN      0        0        0  
set   STNF_mode             =   0        no_units   NO_TYPE       NO_SAVE      UNKNOWN      0        0        0  
set   z_pos_update          =   0        no_units   NO_TYPE       NO_SAVE      UNKNOWN      0        0        0  
 
set   NewClampWindow        =   0        no_units   NO_TYPE       NO_SAVE      UNKNOWN      0        0        0  
    
set   NextFirstXYDist       =   0.0      no_units   NO_TYPE       NO_SAVE      UNKNOWN      0.0      0.0      0.0  
set   NextFirstXYTime       =   0.0      no_units   NO_TYPE       NO_SAVE      UNKNOWN      0.0      0.0      0.0  
set   NextFirstZTime        =   0.0      no_units   NO_TYPE       NO_SAVE      UNKNOWN      0.0      0.0      0.0  
    
set   lookahead_id          =   0        no_units   VAR_N         NO_SAVE      UNKNOWN      0        0        0  
set   perform_lookahead     =   0        no_units   VAR_N         NO_SAVE      UNKNOWN      0        0        0  
 
set   WC_Close_Delay        =   2.5      ms         TIME          NO_SAVE        UNKNOWN      2.5       2.5     2.5  
set   WC_Open_Delay         =   1.0      ms         TIME          NO_SAVE        UNKNOWN      1.0       1.0     1.0   
 
set   LopSec_Time          =   0.0      ms         VAR_N	     NO_SAVE      UNKNOWN      0.0      0.0      0.0  
set   maxDelay              =   512000   us         VAR_N         NO_SAVE      UNKNOWN   512000   512000   512000  
set   maxTime               =  200000    us         VAR_N         NO_SAVE      UNKNOWN   200000  200000   200000  
set   sync_with_xy          =   0.0      us         VAR_N         NO_SAVE      UNKNOWN      0.0      15000.0  0.0  
set   xy_speed              =   100      %          PERCENT       NO_SAVE      UNKNOWN      100      100      100  
set   ZmoDist               =   0        no_units   VAR_N         NO_SAVE      UNKNOWN        0        0        0  
 
set   motion_id             =   0        no_units   VAR_N         NO_SAVE      UNKNOWN      0        0        0  
set   aux_motion_id         =   0        no_units   VAR_N         NO_SAVE      UNKNOWN      0        0        0  
set   last_motion_id        =   0        no_units   VAR_N         NO_SAVE      UNKNOWN      0        0        0  
set   final_motion_id       =   0        no_units   VAR_N         NO_SAVE      UNKNOWN      0        0        0  
set   no_motion_id          =   0        no_units   VAR_N         NO_SAVE      UNKNOWN      0        0        0  
set   capture_id            =   0        no_units   VAR_N         NO_SAVE      UNKNOWN      0        0        0  
set   usg_mid               =   0        no_units   VAR_N         NO_SAVE      UNKNOWN      0        0         0  
set   motion_table_1        =   0        no_units   VAR_N         NO_SAVE      UNKNOWN      0        1         0  
set   poly_table_1_no_cv    =   12       no_units   VAR_N         NO_SAVE      UNKNOWN      12       12       12  
set   poly_table_1          =   11       no_units   VAR_N         NO_SAVE      UNKNOWN      11       11       11  
set   poly_table_5          =   16       no_units   VAR_N         NO_SAVE      UNKNOWN      16       16       16  
set   poly_table_6          =   17       no_units   VAR_N         NO_SAVE      UNKNOWN      17       17       17  
  
set   Loop_Speed_Boost      =   1        no_units   VAR_E         LOOP_MISC_PRM         FULL_HIDDEN  0        1        1        0        1  
    
set   overlap_pct           =   100.0    %          PERCENT       NO_SAVE      UNKNOWN      0.0      100.0    100.0    0.0      100.0  
set   no_overlap            =   100.0    %          PERCENT       NO_SAVE      UNKNOWN      100.0    100.0    100.0  
set   mot_wait              =   0        no_units   VAR_N         NO_SAVE      UNKNOWN      0        0        0  
      
set   Kink_Overlap          =   70      %          PERCENT       LOOP_MISC_PRM         FULL_HIDDEN  0.0      100.0    70      0.0      100.0  
set   Rmot_Overlap          =   70      %          PERCENT       LOOP_MISC_PRM         FULL_HIDDEN  0.0      100.0    70      0.0      100.0  
 
set   Rmot2_Overlap         =   70      %          PERCENT       LOOP_MISC_PRM         FULL_HIDDEN  0.0      100.0    70      0.0      100.0  

set   Smth_Spn_1_Overlap    =   70      %          PERCENT       LOOP_MISC_PRM         FULL_HIDDEN  0.0      100.0    70      0.0      100.0  
set   Shp_Fact_1_Overlap    =   70      %          PERCENT       LOOP_MISC_PRM         FULL_HIDDEN  0.0      100.0    70      0.0      100.0  
        
set   Smth_Spn_2_Overlap    =   70      %          PERCENT       LOOP_MISC_PRM         FULL_HIDDEN  0.0      100.0    70      0.0      100.0  
          
set   Shp_Fact_2_Overlap    =   70      %          PERCENT       LOOP_MISC_PRM         FULL_HIDDEN  0.0      100.0    70      0.0      100.0  
            
set   Shp_Ctl_F2_Overlap    =   70      %          PERCENT       LOOP_MISC_PRM         FULL_HIDDEN  0.0      100.0    70      0.0      100.0  
        
set   TK_Ht_Overlap         =   70      %          PERCENT       LOOP_MISC_PRM         FULL_HIDDEN  0.0      100.0    70      0.0      100.0  

set   Rise_Loop_Overlap     =   70      %          PERCENT       LOOP_MISC_PRM         FULL_HIDDEN  0.0      100.0    70      0.0      100.0  
        
set   TK_Overlap            =   70      %          PERCENT       LOOP_MISC_PRM         FULL_HIDDEN  0.0      100.0    70      0.0      100.0  
 
set   bsr                   =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   flame_pos             =   0.0      mils       VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   Reset_z               =   0.0      mils       Z_RESET       NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   tail_const            =   0.66667  no_units   NO_TYPE       NO_SAVE        UNKNOWN  0.66667  0.66667  0.66667  
set   efo_fire_ctrl         =   0        no_units   VAR_N         NO_SAVE        UNKNOWN      0        0        0  
set   Wire_Type             =   0        no_units   VAR_N         NO_SAVE        UNKNOWN      0        0        0  
set   efo_fire_time         =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   calc_efo_time         =   0        no_units   VAR_N         NO_SAVE        UNKNOWN      0        0        0  
set   fab_cu_constant       =   -1.19    no_units   VAR_N         NO_SAVE        UNKNOWN     -1.19    -1.19    -1.19  
set   fab_cu_diameter       =   8.79     no_units   VAR_N         NO_SAVE        UNKNOWN      8.79     8.79     8.79  
set   fab_cu_time           =   0.155    no_units   VAR_N         NO_SAVE        UNKNOWN      0.155    0.155    0.155  
set   fab_cu_current        =   -0.0745  no_units   VAR_N         NO_SAVE        UNKNOWN     -0.0745  -0.0745  -0.0745  
set   fab_au_constant       =   9.233    no_units   VAR_N         NO_SAVE        UNKNOWN      9.233    9.233    9.233  
set   fab_au_diameter       =   -3.153   no_units   VAR_N         NO_SAVE        UNKNOWN     -3.153   -3.153   -3.153  
set   fab_au_time           =   1.464    no_units   VAR_N         NO_SAVE        UNKNOWN      1.464    1.464    1.464  
set   fab_au_current        =   -0.00931 no_units   VAR_N         NO_SAVE        UNKNOWN     -0.00931 -0.00931 -0.00931  

set   Small_Coeff0          =   -1054.1  no_units   VAR_N         NO_SAVE        UNKNOWN  -1054.1  -1054.1  -1054.1  
set   Small_Coeff1          =   57.35    no_units   VAR_N         NO_SAVE        UNKNOWN  57.35    57.35    57.35    
set   Small_Coeff2          =   48.86    no_units   VAR_N         NO_SAVE        UNKNOWN  48.86    48.86    48.86   
set   Small_Coeff3          =   3.239    no_units   VAR_N         NO_SAVE        UNKNOWN  3.239    3.239    3.239   
set   Small_Coeff4          =   2.811    no_units   VAR_N         NO_SAVE        UNKNOWN  2.811    2.811    2.811  
set   Small_Coeff5          =   744.9    no_units   VAR_N         NO_SAVE        UNKNOWN  744.9    744.9    744.9   
set   Small_Coeff6          =   2836.1   no_units   VAR_N         NO_SAVE        UNKNOWN  2836.1   2836.1   2836.1  
set   Small_Coeff7          =   576.66   no_units   VAR_N         NO_SAVE        UNKNOWN  576.66   576.66   576.66  
set   Small_Coeff8          =   43.42    no_units   VAR_N         NO_SAVE        UNKNOWN  43.42    43.42    43.42  

set   Small_Coeff9          =   2.0      no_units   VAR_N         NO_SAVE        UNKNOWN      2.0      2.0      2.0  
set   Small_Length          =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   Small_Length_Offset   =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   Small_Velocity        =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   Small_Time            =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   s_1                   =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   sv_2                  =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   sv_3                  =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   Act_Cur               =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   temps_1               =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   temps_2               =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   Melt_Coeff1           =   2.0      no_units   VAR_N         NO_SAVE        UNKNOWN      2.0      2.0      2.0  
set   Melt_Coeff1_2         =   0.666667 no_units   VAR_N         NO_SAVE        UNKNOWN  0.666667 0.666667 0.666667  
set   Melt_Coeff3           =   -0.767481 no_units  VAR_N         NO_SAVE      UNKNOWN -0.767481 -0.767481 -0.767481  
set   Melt_Coeff4           =   346.932  no_units   VAR_N         NO_SAVE        UNKNOWN  346.932  346.932  346.932   
set   Melt_Coeff5           =   1.00146  no_units   VAR_N         NO_SAVE        UNKNOWN  1.00146  1.00146  1.00146  
set   Melt_Coeff6           =   656.366  no_units   VAR_N         NO_SAVE        UNKNOWN  656.366  656.366  656.366  
set   Melt_Coeff7           =   -2.58546 no_units   VAR_N         NO_SAVE        UNKNOWN  -2.58546 -2.58546 -2.58546  
set   Melt_Coeff8           =   0.16196  no_units   VAR_N         NO_SAVE        UNKNOWN  0.16196  0.16196  0.16196  
set   Melt_Coeff9           =   4.66712  no_units   VAR_N         NO_SAVE        UNKNOWN  4.66712  4.66712  4.66712  
set   Melt_Coeff10          =   0.363519 no_units   VAR_N         NO_SAVE        UNKNOWN  0.363519 0.363519 0.363519  
set   Melt_Length           =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   Melt_Length_Offset    =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   Melt_Velocity         =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   tempb1                =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   mlo_1                 =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   mlo_2                 =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   mv_1                  =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   mv_2                  =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   Large_Coeff0          =   1663.7   no_units   VAR_N         NO_SAVE        UNKNOWN   1663.7   1663.7   1663.7   
set   Large_Coeff1          =   1348.7   no_units   VAR_N         NO_SAVE        UNKNOWN   1348.7   1348.7   1348.7   
set   Large_Coeff2          =   107.04   no_units   VAR_N         NO_SAVE        UNKNOWN    107.4    107.4    107.4  
set   Large_Coeff3          =   143.13   no_units   VAR_N         NO_SAVE        UNKNOWN   143.13   143.13   143.13  
set   Large_Coeff4          =   3.251    no_units   VAR_N         NO_SAVE        UNKNOWN    3.251    3.251    3.251  
set   Large_Coeff5          =   1.952    no_units   VAR_N         NO_SAVE        UNKNOWN    1.952    1.952    1.952  
set   Large_Coeff6          =   .391     no_units   VAR_N         NO_SAVE        UNKNOWN     .391     .391     .391  
set   Large_Coeff7          =   3.535    no_units   VAR_N         NO_SAVE        UNKNOWN    3.535    3.535    3.535   
set   Large_Coeff9          =   1000.0   no_units   VAR_N         NO_SAVE        UNKNOWN   1000.0   1000.0   1000.0  
set   Large_Length          =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   Large_Length_Offset   =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   Large_Velocity        =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   Large_Time            =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   llo_2                 =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   l_1                   =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   l_2                   =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   lv_1                  =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   lv_2                  =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   templ_2               =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   Diam_Thresh_Small     =   0.9      no_units   VAR_N         NO_SAVE        UNKNOWN      0.9      0.9      0.9  
set   Diam_Thresh_Large     =   1.3      no_units   VAR_N         NO_SAVE        UNKNOWN      1.3      1.3      1.3  
set   efo_tic_fac           =   500.0    no_units   VAR_N         NO_SAVE        UNKNOWN     500.0    500.0    500.0  

set   Heavy_Wire_Limit      =   126      no_units   VAR_N         NO_SAVE      UNKNOWN     126      126      126       
set   efo_au_lg_const1      =   359.69   no_units   VAR_N         NO_SAVE      UNKNOWN     359.69   359.69   359.69    
set   efo_au_lg_const2      =   -1007.10 no_units   VAR_N         NO_SAVE      UNKNOWN   -1007.10 -1007.10 -1007.10    
set   efo_au_lg_const3      =   917.17   no_units   VAR_N         NO_SAVE      UNKNOWN     917.17   917.17   917.17    
set   efo_au_lg_const4      =   49.391   no_units   VAR_N         NO_SAVE      UNKNOWN      49.391   49.391   49.391   
set   efo_au_lg_const5      =   -138.30  no_units   VAR_N         NO_SAVE      UNKNOWN    -138.30  -138.30  -138.30    
set   efo_au_lg_const6      =   149.09   no_units   VAR_N         NO_SAVE      UNKNOWN     149.09   149.09   149.09    
set   efo_cu_const1         =   141.63   no_units   VAR_N         NO_SAVE      UNKNOWN     141.63   141.63   141.63    
set   efo_cu_const2         =   -85.99   no_units   VAR_N         NO_SAVE      UNKNOWN     -85.99   -85.99   -85.99    
set   efo_cu_const3         =   53.647   no_units   VAR_N         NO_SAVE      UNKNOWN      53.647   53.647   53.647   
set   efo_cu_const4         =   23.443   no_units   VAR_N         NO_SAVE      UNKNOWN      23.443   23.443   23.443   
set   efo_cu_const5         =   -16.753  no_units   VAR_N         NO_SAVE      UNKNOWN     -16.753  -16.753  -16.753   
set   efo_cu_const6         =   27.524   no_units   VAR_N         NO_SAVE      UNKNOWN      27.524   27.524   27.524   
set   efo_cu_lg_const1      =   537.70   no_units   VAR_N         NO_SAVE      UNKNOWN     537.70   537.70   537.70    
set   efo_cu_lg_const2      =   -1560.80 no_units   VAR_N         NO_SAVE      UNKNOWN   -1560.80 -1560.80 -1560.80    
set   efo_cu_lg_const3      =   1295.40  no_units   VAR_N         NO_SAVE      UNKNOWN    1295.40  1295.40  1295.40    
set   efo_cu_lg_const4      =   92.85    no_units   VAR_N         NO_SAVE      UNKNOWN      92.85    92.85    92.85    
set   efo_cu_lg_const5      =   -277.04  no_units   VAR_N         NO_SAVE      UNKNOWN    -277.04  -277.04  -277.04    
set   efo_cu_lg_const6      =   246.81   no_units   VAR_N         NO_SAVE      UNKNOWN     246.81   246.81   246.81    
set   efo_curr_exp          =   1.3      no_units   VAR_N         NO_SAVE      UNKNOWN       1.3      1.3      1.3     
 
set   0                     =   0        no_units   NO_TYPE       NO_SAVE        UNKNOWN      0        0        0  
set   0.0                   =   0.0      no_units   NO_TYPE       NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   0.5                   =   0.5      no_units   NO_TYPE       NO_SAVE        UNKNOWN      0.5      0.5      0.5  
set   0.55                  =   0.55     no_units   VAR_N         NO_SAVE      UNKNOWN      0.55     0.55     0.55  
set   0.60                  =   0.60     no_units   VAR_N         NO_SAVE      UNKNOWN      0.60     0.60     0.60  
set   0.70                  =   0.70     no_units   VAR_N         NO_SAVE      UNKNOWN      0.70     0.70     0.70  
set   0.7071                =   0.7071   no_units   NO_TYPE       NO_SAVE      UNKNOWN    0.7071   0.7071   0.7071  
set   0.80                  =   0.80     no_units   VAR_N         NO_SAVE      UNKNOWN      0.80     0.80     0.80  
set   0.90                  =   0.90     no_units   VAR_N         NO_SAVE      UNKNOWN      0.90     0.90     0.90  
set   0.95                  =   0.95     no_units   VAR_N         NO_SAVE      UNKNOWN      0.95     0.95     0.95  
set   1                     =   1        no_units   VAR_N         NO_SAVE      UNKNOWN      1        1        1  
set   -1                    =   -1       no_units   NO_TYPE       NO_SAVE      UNKNOWN     -1       -1       -1  
set   1.0                   =   1.0      no_units   NO_TYPE       NO_SAVE        UNKNOWN      1.0      1.0      1.0  
set   -1.0                  =   -1.0     no_units   NO_TYPE       NO_SAVE        UNKNOWN     -1.0     -1.0     -1.0  
set   1.5                   =   1.5      no_units   VAR_N         NO_SAVE      UNKNOWN      1.5      1.5      1.5  
set   2                     =   2        no_units   VAR_N         NO_SAVE      UNKNOWN      2        2        2  
set   2.0                   =   2.0      no_units   VAR_N         NO_SAVE      UNKNOWN      2.0      2.0      2.0  
set   3                     =   3        no_units   VAR_N         NO_SAVE      UNKNOWN      3        3        3  
set   4                     =   4        no_units   NO_TYPE       NO_SAVE      UNKNOWN      4        4        4  
set   4.0                   =   4.0      no_units   NO_TYPE       NO_SAVE      UNKNOWN      4.0      4.0      4.0  
set   5                     =   5        no_units   NO_TYPE       NO_SAVE      UNKNOWN      5        5        5  
set   5.0                   =   5.0      no_units   NO_TYPE       NO_SAVE      UNKNOWN      5.0      5.0      5.0  
set   6                     =   6        no_units   NO_TYPE       NO_SAVE      UNKNOWN      6        6        6  
set   7                     =   7        no_units   NO_TYPE       NO_SAVE      UNKNOWN      7        7        7  
set   8                     =   8        no_units   NO_TYPE       NO_SAVE      UNKNOWN      8        8        8  
set   9                     =   9        no_units   NO_TYPE       NO_SAVE      UNKNOWN      9        9        9  
set   10                    =   10       no_units   NO_TYPE       NO_SAVE      UNKNOWN      10       10       10  
set   10.0                  =   10.0     no_units   NO_TYPE       NO_SAVE      UNKNOWN      10.0     10.0     10.0  
set   10.23                 =   10.23    no_units   VAR_N         NO_SAVE      UNKNOWN       10.23    10.23 10.23  
set   12                    =   12       no_units   NO_TYPE       NO_SAVE      UNKNOWN      12       12       12  
set   15.0                  =   15.0     no_units   NO_TYPE       NO_SAVE      UNKNOWN      15.0     15.0     15.0  
set   25.4                  =   25.4     no_units   NO_TYPE       NO_SAVE      UNKNOWN      25.4     25.4     25.4  
set   16                    =   16       no_units   NO_TYPE       NO_SAVE      UNKNOWN      16       16       16  
set   16.667                =   16.667   no_units   VAR_N         NO_SAVE      UNKNOWN    16.667   16.667   16.667  
set   17                    =   17       no_units   NO_TYPE       NO_SAVE      UNKNOWN      17       17       17  
set   30                    =   30       no_units   VAR_N         NO_SAVE      UNKNOWN      30       30       30   
set   40.95                 =   40.95    no_units   VAR_N         NO_SAVE      UNKNOWN     40.95    40.95   40.95  
set   55.0                  =   55.0     no_units   NO_TYPE       NO_SAVE      UNKNOWN      55.0     55.0     55.0  
set   70                    =   70       no_units   VAR_N         NO_SAVE      UNKNOWN      70       70       70   
set   80                    =   80       no_units   VAR_N         NO_SAVE      UNKNOWN      80       80       80   
set   90                    =   90       no_units   VAR_N         NO_SAVE      UNKNOWN      90       90       90   
set   100.0                 =   100.0    no_units   VAR_N         NO_SAVE      UNKNOWN    100.0    100.0    100.0  
set   180.0                 =   180.0    no_units   NO_TYPE       NO_SAVE      UNKNOWN    180.0    180.0    180.0  
set   256                   =   256      no_units   VAR_N         NO_SAVE      UNKNOWN      256      256      256  
set   400.0                 =   400.0    no_units   VAR_N         NO_SAVE        UNKNOWN    400.0    400.0    400.0  
set   800.0                 =   800.0    no_units   VAR_N         NO_SAVE      UNKNOWN    800.0    800.0    800.0  
set   1000                  =   1000     no_units   VAR_N         NO_SAVE      UNKNOWN     1000     1000     1000  
set   4000                  =   4000     no_units   VAR_N         NO_SAVE      UNKNOWN     4000     4000     4000  
set   13000                 =   13000    no_units   VAR_N         NO_SAVE      UNKNOWN    13000    13000    13000  
set   65536                 =   65536    no_units   VAR_N         NO_SAVE      UNKNOWN    65536    65536    65536  
set   x_pos                 =   0.0      mils       X_POS         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   y_pos                 =   0.0      mils       Y_POS         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   x_pos1                =   0.0      mils       X_POS         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   y_pos1                =   0.0      mils       Y_POS         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   x_pos2                =   0.0      mils       X_POS         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   y_pos2                =   0.0      mils       Y_POS         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   upper_z_limit         =   400.0   mils       Z_POS         NO_SAVE        UNKNOWN  400.0   400.0   400.0   
  
set   z_pos                 =   0.0      mils       Z_POS         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   z_pos_1               =   0.0      mils       Z_POS         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   z_pos_2               =   0.0      mils       Z_POS         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   x_ratio               =   0.0      mils       VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   y_ratio               =   0.0      mils       VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   Full_Throttle         =   1.0      no_units   NO_TYPE       NO_SAVE        UNKNOWN      1.0      1.0      1.0  
set   Z_C/V                 =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
    
set   Tail_Pull_Enable      =   0        no_units   VAR_N         NO_SAVE        UNKNOWN      0        0        0  
set   tail                  =   0.0      no_units   NO_TYPE       NO_SAVE        UNKNOWN      0.0      0.0      0.0  
    
set   cpu2_clock_16         =   0.0625   no_units   VAR_N         NO_SAVE      UNKNOWN   0.0625   0.0625   0.0625  
    
set   zenc_res_32           =   32.1     no_units   VAR_N         NO_SAVE      UNKNOWN   32.1     32.1     32.1  
 
set   USG_clocks_DSP        =   20.0     no_units   VAR_E         NO_SAVE      UNKNOWN       20       20       20   

set   dpos_cap              =   0.0      mils       Z_TIP         NO_SAVE      UNKNOWN      0.0      0.0      0.0  
   
set   ctip1                 =   0.0      mils       Z_TIP         NO_SAVE      UNKNOWN      0.0      0.0      0.0  
set   ctip2                 =   0.0      mils       Z_TIP         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   new_ctip1             =   0.0      mils       Z_TIP         NO_SAVE      UNKNOWN      0.0      0.0      0.0  
set   new_ctip2             =   0.0      mils       Z_TIP         NO_SAVE      UNKNOWN      0.0      0.0      0.0  
set   bond_dist             =   0.0      mils       VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   x_delta               =   0.0      mils       VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   y_delta               =   0.0      mils       VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  

set   BleedLevCP            =   0.0      no_units   NO_TYPE       NO_SAVE      UNKNOWN      0.0      0.0      0.0  
set   BleedLevCC            =   0.0      no_units   NO_TYPE       NO_SAVE      UNKNOWN      0.0      0.0      0.0  
set   BleedLevCV            =   0.0      no_units   NO_TYPE       NO_SAVE      UNKNOWN      0.0      0.0      0.0  

set   Equ_Output            =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   tempr1                =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   tempr2                =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   tempr3                =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   tempr4                =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   tempr5                =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   tempr6                =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   tempr7                =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0   
set   tempr8                =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   tempr9                =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   tempr10               =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   tempr11               =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   tempr12               =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   tempr13               =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   tempr14               =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   tempr15               =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   tempr16               =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   tempr17               =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   tempr18               =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   tempr19               =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   tempr20               =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   tempr21               =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   tempr22               =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   tempr23               =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   tempr24               =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   tempr25               =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   tempr26               =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   tempr_WBMS            =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   tempr_Lrn_Mode        =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   tempr_Lrn_Enbl        =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   tempr_Polarity        =   0.0      no_units   VAR_N         NO_SAVE        UNKNOWN      0.0      0.0      0.0  
set   actual_tip_2          =   0.0      mils       Z_CV_DIST     NO_SAVE        UNKNOWN      0.0      0.0      0.0   
set   pi                    =   3.1416   no_units   VAR_N         NO_SAVE        UNKNOWN   3.1416   3.1416   3.1416  
set   pi/2                  =   1.571    no_units   VAR_N         NO_SAVE        UNKNOWN    1.571    1.571    1.571  
set   tail_length           =   0.0      mils       VAR_N         NO_SAVE        UNKNOWN      0        0        0  

set   que_ahead             =   0        no_units   BOOLEAN       NO_SAVE        UNKNOWN      0        1        0  
    
set   Ops_Mode              =   0        no_units   VAR_N         NO_SAVE      UNKNOWN      0        0       0  
set   iBPD_Active           =   0        no_units   VAR_N         NO_SAVE      UNKNOWN      0        0       0  
set   pbi_mode              =   0        no_units   VAR_N         NO_SAVE      UNKNOWN      0        0       0  
    
set   x_tail                =   0.0      no_units   VAR_N         NO_SAVE      UNKNOWN      0.0      0.0      0.0   
set   y_tail                =   0.0      no_units   VAR_N         NO_SAVE      UNKNOWN      0.0      0.0      0.0   
 
set   usg_dummy0            =   0     no_units   VAR_N     NO_SAVE        UNKNOWN      0        0        0  
set   usg_seg_count         =   0     no_units   VAR_N     NO_SAVE        UNKNOWN      0        0        0  
set   usg_seg1_time         =   0     no_units   VAR_N     NO_SAVE        UNKNOWN      0        0        0  
set   usg_seg1_end          =   0     no_units   VAR_N     NO_SAVE        UNKNOWN      0        0        0  
set   usg_seg2_time         =   0     no_units   VAR_N     NO_SAVE        UNKNOWN      0        0        0  
set   usg_seg2_end          =   0     no_units   VAR_N     NO_SAVE        UNKNOWN      0        0        0  
set   usg_seg3_time         =   0     no_units   VAR_N     NO_SAVE        UNKNOWN      0        0        0  
set   usg_seg3_end          =   0     no_units   VAR_N     NO_SAVE        UNKNOWN      0        0        0  
set   usg_seg4_time         =   0     no_units   VAR_N     NO_SAVE        UNKNOWN      0        0        0  
set   usg_seg4_end          =   0       no_units   VAR_N         NO_SAVE        UNKNOWN      0        0        0  
set   frcRmp1Slope          =   0.0      no_units   VAR_N         NO_SAVE      UNKNOWN      0.0      0.0      0.0  
set   frcRmp1Time           =   0        no_units   VAR_N         NO_SAVE      UNKNOWN      0        0        0    
set   frcRmp2Slope          =   0.0      no_units   VAR_N         NO_SAVE      UNKNOWN      0.0      0.0      0.0  
set   frcRmp2Time           =   0        no_units   VAR_N         NO_SAVE      UNKNOWN      0        0        0    
set   frcRmp3Slope          =   0.0      no_units   VAR_N         NO_SAVE      UNKNOWN      0.0      0.0      0.0  
set   frcRmp3Time           =   0        no_units   VAR_N         NO_SAVE      UNKNOWN      0        0        0    
set   frcRmp4Slope          =   0.0      no_units   VAR_N         NO_SAVE      UNKNOWN      0.0      0.0      0.0  
set   frcRmp4Time           =   0        no_units   VAR_N         NO_SAVE      UNKNOWN      0        0        0    
set   frcRmp5Slope          =   0.0      no_units   VAR_N         NO_SAVE      UNKNOWN      0.0      0.0      0.0  
set   frcRmp5Time           =   0        no_units   VAR_N         NO_SAVE      UNKNOWN      0        0        0  
set   frcRmp6Slope          =   0.0      no_units   VAR_N         NO_SAVE      UNKNOWN      0.0      0.0      0.0  
set   frcRmp6Time           =   0        no_units   VAR_N         NO_SAVE      UNKNOWN      0        0        0  
set   usgtime               =   0.0      no_units   VAR_N         NO_SAVE      UNKNOWN      0.0      0.0      0.0  
set   initialForceTime      =   0.0      no_units   VAR_N         NO_SAVE      UNKNOWN      0.0      0.0      0.0  
set   usgPreDelay           =   0.0      no_units   VAR_N         NO_SAVE      UNKNOWN      0.0      0.0      0.0  
set   frcRampLimit          =   0.0      no_units   VAR_N         NO_SAVE      UNKNOWN      0.0      0.0      0.0  
set   bondForceTime         =   0.0      no_units   VAR_N         NO_SAVE      UNKNOWN      0.0      0.0      0.0  
set   dampTime              =   0.0      no_units   VAR_N         NO_SAVE      UNKNOWN      0.0      0.0      0.0  
set   minimum_force         =   5.0      grams      BFORCE        NO_SAVE      UNKNOWN      5.0      5.0      5.0  
set   frcRmpDwnDly          =   0.0      no_units   VAR_N         NO_SAVE      UNKNOWN      0.0      0.0      0.0  
set   max_burst_time        =   0.0      no_units   VAR_N         NO_SAVE      UNKNOWN      0.0      0.0      0.0  
set   USGinitCPlev          =   0.0      no_units   NO_TYPE       NO_SAVE      UNKNOWN      0.0      0.0      0.0   
set   USGinitCVlev          =   0.0      no_units   NO_TYPE       NO_SAVE      UNKNOWN      0.0      0.0      0.0   
set   USGinitCClev          =   0.0      no_units   NO_TYPE       NO_SAVE      UNKNOWN      0.0      0.0      0.0   
set   frc_ramptime          =   0.0      no_units   VAR_N         NO_SAVE      UNKNOWN      0.0      0.0      0.0  
set   frc_inittime          =   0.0      no_units   VAR_N         NO_SAVE      UNKNOWN      0.0      0.0      0.0  
 
set   settlingVel           =   0.1      no_units   VAR_N         NO_SAVE      UNKNOWN      0.1      0.1      0.1  
set   settlingThresh        =   0.0      no_units   VAR_N         NO_SAVE      UNKNOWN      0.0      0.0      0.0  
set   settlingHoldTime      =   5        ms         CPU2_TICKS    NO_SAVE      UNKNOWN      5         5        5  
set   maxSettling           =   0        no_units   VAR_N         NO_SAVE      UNKNOWN      0      0      0  
 
set   Z_Tear_Mot_Tab        =   0        no_units   VAR_N         NO_SAVE      UNKNOWN      0        0        0  
set   z_throttle            =   0.0      no_units   VAR_N         NO_SAVE      UNKNOWN      0.0      0.0      0.0  
    
set   z_tear_ht             =   3.0      mils       Z_DIST        NO_SAVE      UNKNOWN      3.0      3.0      3.0   
 
set   y_scrub               =   0.0      no_units   VAR_N         NO_SAVE      UNKNOWN      0.0      0.0      0.0  
set   x_scrub               =   0.0      no_units   VAR_N         NO_SAVE      UNKNOWN      0.0      0.0      0.0  
set   scrub_test            =   0        no_units   VAR_N         NO_SAVE      UNKNOWN      0        0        0  
set   scrub_total           =   0.0      no_units   VAR_N         NO_SAVE      UNKNOWN      0.0      0.0      0.0  
set   y_scrub_cycles        =   0.0      no_units   VAR_N         NO_SAVE      UNKNOWN      0.0      0.0      0.0  
set   phase_convert         =   0.1112   no_units   VAR_N         NO_SAVE      UNKNOWN   0.1112   0.1112   0.1112  
set   scrub_phase           =   0        no_units   VAR_N         NO_SAVE      UNKNOWN      0        0        0  
set   scrub_usg_delay       =   0.0      no_units   VAR_N         NO_SAVE      UNKNOWN      0.0      0.0      0.0  
set   scrub_force_time      =   0.0      no_units   VAR_N         NO_SAVE      UNKNOWN      0.0      0.0      0.0  
set   cycles+phase          =   0        no_units   VAR_N         NO_SAVE      UNKNOWN      0        0        0  
set   tail_y_scrub          =   0.0      no_units   VAR_N         NO_SAVE      UNKNOWN      0.0      0.0      0.0  
set   tail_x_scrub          =   0.0      no_units   VAR_N         NO_SAVE      UNKNOWN      0.0      0.0      0.0  
set   tail_scrub            =   0        no_units   VAR_N         NO_SAVE      UNKNOWN      0        0        0  
set   tail_scrub_pwr        =   0.0      no_units   VAR_N         NO_SAVE      UNKNOWN      0.0      0.0      0.0  
set   tail_scrub_curr       =   0.0      no_units   VAR_N         NO_SAVE      UNKNOWN      0.0      0.0      0.0  
set   tail_scrub_volt       =   0.0      no_units   VAR_N         NO_SAVE      UNKNOWN      0.0      0.0      0.0  
set   usg_mode              =   0        no_units   VAR_N         NO_SAVE      UNKNOWN      0        0        0    
set   hifrcscrub            =   0        no_units   VAR_N         NO_SAVE      UNKNOWN      0        0        0  
set   scrub_time            =   0.0      no_units   VAR_N         NO_SAVE      UNKNOWN      0.0      0.0      0.0  
set   scrub_phase_delay     =   0.0      no_units   VAR_N         NO_SAVE      UNKNOWN      0.0      0.0      0.0  

set   Seg3_Force            =   0.0      no_units   VAR_N         NO_SAVE      UNKNOWN      5.0      5.0      5.0  
set   Seg4_Force            =   0.0      no_units   VAR_N         NO_SAVE      UNKNOWN      5.0      5.0      5.0  
set   Seg5_Force            =   0.0      no_units   VAR_N         NO_SAVE      UNKNOWN      5.0      5.0      5.0  
set   Seg3_ForceTime        =   0.0      no_units   VAR_N         NO_SAVE      UNKNOWN      0.0      0.0      0.0  
set   Seg4_ForceTime        =   0.0      no_units   VAR_N         NO_SAVE      UNKNOWN      0.0      0.0      0.0  
set   Seg5_ForceTime        =   0.0      no_units   VAR_N         NO_SAVE      UNKNOWN      0.0      0.0      0.0  
set   pad_length1           =   0.0      no_units   VAR_N         NO_SAVE      UNKNOWN      0.0      0.0      0.0   
set   pad_angle1            =   0.0      no_units   VAR_N         NO_SAVE      UNKNOWN      0.0      0.0      0.0   
set   pad_angle2            =   0.0      no_units   VAR_N         NO_SAVE      UNKNOWN      0.0      0.0      0.0   
    
set   forceSensorTime       =   0.0      no_units   VAR_N         NO_SAVE      UNKNOWN      0.0      0.0      0.0  
set   trans_time            =   0.0      no_units   VAR_N         NO_SAVE      UNKNOWN      0.0      0.0      0.0  
set   look_delay            =   0.0      no_units   VAR_N         NO_SAVE      UNKNOWN      0.0      0.0      0.0  
set   detect_delay          =   0.0      no_units   VAR_N         NO_SAVE      UNKNOWN      0.0      0.0      0.0  
set   fs_contact_detect     =   0.0      no_units   VAR_N         NO_SAVE      UNKNOWN      0.0      0.0      0.0  
set   fs_force_feedback     =   0.0      no_units   VAR_N         NO_SAVE      UNKNOWN      0.0      0.0      0.0  
set   cv_mode               =   0.0      no_units   VAR_N         NO_SAVE      UNKNOWN      0.0      0.0      0.0  
  
set   Wire_Diameter         =   1.0      mils       WIRE_DIAM     BALL_PRM         FULL         0.6      2.0      1.0         0.6      2.0  

set   CalcEfoTime           =   0        no_units   BOOLEAN       BALL_PRM         FULL         0        1        0          0         1  
  
set   Ball_Size             =   2.4      mils       BALL_DIAM     BALL_PRM         FULL         0.65     7.0      2.4         0.65     7.0  
  
set   FireTime              =   1000     us         VAR_E         BALL_PRM         FULL         2        32000    1000       2         32000  

set   EFO_Time              =   1.5      ms         EFOTIME       BALL_PRM         FULL         0.01     100.0    1.5         0.01     100.0  
  
set   EFO_Current           =   30.0     mAmps      EFO_CURRENT   BALL_PRM         FULL         10.0     500.0    30.0        10.0     500.0  
set   EFO_Gap               =   30.0     mils       Z_DIST        BALL_PRM         FULL         0.0      50.0     30.0        0.0      50.0  
set   Tail_Extension        =   10.0     mils       Z_DIST        BALL_PRM         FULL         0.0      100.0    0.0         0.0      100.0  
set   EFO_FireCtl           =   0   no_units   VAR_E         BALL_PRM         FULL         0        1        0      0        1  

set   WBMS_enable           =   1        no_units   BOOLEAN       BITS_OTHER_PRM        FULL         0        1        1           0        1  
  
set   WBMS_Learn_enable     =   0        no_units   VAR_N         NO_SAVE               UNKNOWN      0           0        0  
set   WBMS_Learn_Mode       =   0        no_units   VAR_N         NO_SAVE               UNKNOWN      0           0        0  
set   WBMS_Data_Smp_Ext     =   6.0      ms         TIME          NO_SAVE               UNKNOWN      6.0         6.0      6.0  
set   WBMS_Cal2_AC_Dly      =   1.0      ms         TIME          BITS_OTHER_MISC_PRM   FULL         0.0         5.0      1.0      0.0         5.0  
set   WBMS_Cal2_DC_Dly      =   1.0      ms         TIME          BITS_OTHER_MISC_PRM   FULL         0.0         5.0      1.0      0.0         5.0  
set   WBMS_Polarity_Auto    =   0        no_units   VAR_N         NO_SAVE               UNKNOWN      0           0        0  
set   WBMS_Thresh_Auto      =   0.0      %          PERCENT       NO_SAVE               UNKNOWN      0.0         0.0      0.0  
 
set   WBMS_Polarity         =   0        no_units   VAR_E         BITS_OTHER_PRM        FULL         0        2        0           0        2  
    
set   NSOP_percentage       =   75       %          PERCENT       BITS_OTHER_NSOP_PRM   FULL         0        100      75          0        100  
set   SHTL_percentage_ATX1   =   5       %          PERCENT       BITS_OTHER_SHTL_NSOL_PRM FULL         0        100      5           0        100  
set   NSOL_percentage_ATX1   =   50      %          PERCENT       BITS_OTHER_SHTL_NSOL_PRM FULL         0        100      50          0        100  
    
set   NSOPSamplingDelay_AC   =   1.0     ms         TIME          BITS_OTHER_NSOP_PRM   FULL         0.07    50.0      1.0         0.07    50.0  
set   NSOLSamplingDelay_AC   =   0.8     ms         TIME          BITS_OTHER_SHTL_NSOL_PRM FULL      0.07     5.0      0.8         0.07     5.0  
set   NSOPSamplingDelay_DC   =   2.3     ms         TIME          BITS_OTHER_NSOP_PRM   FULL         0.07    50.0      2.3         0.07    50.0  
set   NSOLSamplingDelay_DC   =   0.8     ms         TIME          BITS_OTHER_SHTL_NSOL_PRM FULL      0.07     5.0      0.8         0.07     5.0  
    
set   Tail_Close_Time       =   0.5      ms         TIME          BITS_OTHER_PRM        FULL_HIDDEN  0.0      0.5      0.5         0.0      0.5  
set   NSOL_height           =   2.0      mils       Z_DIST        BITS_OTHER_SHTL_NSOL_PRM FULL_HIDDEN -100.0    100.0    2.0        -100.0    100.0  
set   NSOP_height           =   0.0      mils       Z_DIST        BITS_OTHER_NSOP_PRM   FULL_HIDDEN -200.0    100.0    0.0        -200.0    100.0  
set   NSOP_NumSamples       =   48       no_units   WBMSNUM_SAMP  BITS_OTHER_NSOP_PRM   FULL_HIDDEN  0        500      48          0        500  
    
set   SHTL_NumSamples       =   20       no_units   WBMSNUM_SAMP  BITS_OTHER_SHTL_NSOL_PRM FULL_HIDDEN  0        50       20          0        50  
set   NSOL_NumSamples       =   12       no_units   WBMSNUM_SAMP  BITS_OTHER_SHTL_NSOL_PRM FULL_HIDDEN  0        50       12          0        50  
  
set   Bond2_Limit           =   100.0    mils       Z_DIST        BITS_OTHER_MISC_PRM   FULL_HIDDEN  25.0     100.0    100.0       25.0     100.0  
  
set   Tail_Pull_Test        =   0        no_units   BOOLEAN       BITS_OTHER_PRM        FULL         0        1        0           0        1  

input bond_xypos 1  x_pos2 y_pos2

##########################################################################################################
#FILE: GENERIC.Include_Contour.PDL  VERSION: 1.13  DATE: 10/03/06  TIME: 10:01:40

if 2nd_Approach = 0

  if Tip_2 >= 2.0
    math actual_tip_2 = Tip_2 - 2.0
  else
    math actual_tip_2 = 0.0
  endif
    
  math tempr4 = lf4_scale * LF4 + 1.0                        
  limits tempr4 lf4_scale 0.0
  math adjusted_tip2 = Loop_Factor_2 / lf2_scale * tempr4 + actual_tip_2   
    
  math tempr2 = 2.0 * -1.0
  limits adjusted_tip2 tempr2 100.0

  if Contact_Angle > 0.0
    limits Contact_Angle 1.0 Contact_Angle
  endif
  if Contact_Angle <= 0.0
    math tempr2 = 0.0              
    math new_c_o = 0.0             
  else
    math tempr1 = Contact_Angle * Contact_Angle / 100.0
    math new_c_o = Contact_Offset / tempr1
    math tempr2 = Contact_Angle
  endif

else
  math actual_tip_2 = Tip_2
  limits actual_tip_2 3 400.0                                    
  math adjusted_tip2 = actual_tip_2
  
  math tempr2 = 0.0
  math new_c_o = 0.0                                             
  
endif

if Ops_Mode = 5 
    math tempr2 = 0.0
    math new_c_o = 0.0                                           
endif

math XY_C/V = 5                                    

calc CALC_DESCENT_ABSOLUTE C/V_2 actual_tip_2 tempr2 X_C/V X_pos_new Y_C/V Y_pos_new new_c_o   XY_C/V X_C/V2 Y_C/V2
  
math Loop_Height = Loop_Height + 0.0   

#End of FILE: GENERIC.Include_Contour.PDL

##########################################################################################################
#FILE: GENERIC.Include_RevMot.PDL  VERSION: 1.13  DATE: 09/12/06  TIME: 20:56:52

calc BOND_DIST bond_dist x_delta y_delta 0.0 0.0                 

math x_ratio = x_delta / bond_dist                               
math y_ratio = y_delta / bond_dist                               

##########################################################################################################
#FILE: GENERIC.Include_CapOffset.PDL  VERSION: 1.12  DATE: 01/03/07  TIME: 09:11:42

math cap_xpos = Cap_Offset_2 * x_ratio 
math cap_ypos = Cap_Offset_2 * y_ratio 

  if Ops_Mode = 1 
    math cap_xpos = Repair_Offset_2 * x_ratio + cap_xpos
    math cap_ypos = Repair_Offset_2 * y_ratio + cap_ypos
  endif

  if Contact_Angle < 0.0
    math tempr3 = Contact_Offset * x_ratio 
    math tempr4 = Contact_Offset * y_ratio 
  else

    math tempr3 = 0.0
    math tempr4 = 0.0

  endif  

  math x_pos2 = x_pos2 + cap_xpos + tempr3
  math y_pos2 = y_pos2 + cap_ypos + tempr4

  math X_pos_new = X_pos_new + cap_xpos + tempr3
  math Y_pos_new = Y_pos_new + cap_ypos + tempr4

  math bond_dist = bond_dist - Cap_Offset_2                  

    if Ops_Mode = 1 
      math bond_dist = bond_dist - Repair_Offset_2             
    endif

if 2nd_Approach = 1
  math bond_dist = bond_dist - XY_Step                         
endif

#End of FILE: GENERIC.Include_CapOffset.PDL

math neg_bond_dist = bond_dist * -1.0                            
  
calc COSINE tempr1 Rmot_Angle                                    

calc ABS_VALUE tempr3 Reverse_Motion
math z_rev = tempr1 * tempr3                                     
    
    math tempr1 = Rmot_Angle

math z_rev = z_rev * -1.0                                        
limits z_rev neg_bond_dist Kink_Height                           
math z_rev = z_rev * -1.0                                        
    
calc SINE tempr2 tempr1                                          
math x_rev1 = x_ratio * Reverse_Motion * tempr2                  
math y_rev1 = y_ratio * Reverse_Motion * tempr2                  
    
calc COSINE tempr1 Rmot_Angle_2                                  

calc ABS_VALUE tempr3 Rev_Motion_2
math z_rev1a = tempr1 * tempr3                                   

math z_rev1a = z_rev1a * -1.0                                    
math tempr7 = Kink_Height + z_rev
limits z_rev1a neg_bond_dist tempr7                              
math z_rev1a = z_rev1a * -1.0                                    
      
calc SINE   tempr4 Rmot_Angle_2                                  
math x_rev1a = x_ratio * Rev_Motion_2 * tempr4                   
math y_rev1a = y_ratio * Rev_Motion_2 * tempr4                   

#End of FILE: GENERIC.Include_RevMot.PDL

##########################################################################################################
#FILE: GENERIC.Include_Balance.PDL  VERSION: 1.4  DATE: 10/21/03  TIME: 18:01:14

if Bal_Control = 0
   
  math y_scalar = Y_Balance - 1.0 * y_ratio + 1.0
  math x_scalar = X_Balance - 1.0 * x_ratio + 1.0

  math news_scalar = 1.0
else	
 
  calc ABS_VALUE tempr1 x_ratio
  calc ABS_VALUE tempr2 y_ratio
  if tempr1 >= tempr2	
    math tempr3 = tempr2 / tempr1	
  else	
    math tempr3 = tempr1 / tempr2	
  endif 	
  math tempr3 = 1.0 - tempr3	
                                                    	
  if x_ratio > 0.0                                       
    if y_ratio > 0.0                                     
      if tempr1 > tempr2                                 
        math news_scalar = Left_Balance - 1.0 * tempr3 + 1.0  
      else	
        math news_scalar = Back_Balance - 1.0 * tempr3 + 1.0  
      endif	
    else                                                 
      if tempr1 > tempr2                                 
        math news_scalar = Left_Balance - 1.0 * tempr3 + 1.0  
      else	
        math news_scalar = Front_Balance - 1.0 * tempr3 + 1.0 
      endif	
    endif	
  else                                                   
    if y_ratio > 0.0                                     
      if tempr1 > tempr2                                 
        math news_scalar = Right_Balance - 1.0 * tempr3 + 1.0 
      else	
        math news_scalar = Back_Balance - 1.0 * tempr3 + 1.0  
      endif	
    else                                                 
      if tempr1 > tempr2                                 
        math news_scalar = Right_Balance - 1.0 * tempr3 + 1.0 
      else	
        math news_scalar = Front_Balance - 1.0 * tempr3 + 1.0 
      endif	
    endif	
  endif 	
  math y_scalar = 1.0
  math x_scalar = 1.0
endif	

#End of FILE: GENERIC.Include_Balance.PDL

##########################################################################################################
#FILE: GENERIC.Include_PFequal2.PDL  VERSION: 1.11  DATE: 09/12/06  TIME: 20:56:50
 
calc BREAK_IN tempr7  tempr8  tempr9
 
calc EQUALIZATION tempr13 Sec_Equ_PF x_delta y_delta bond_dist

math Adj_USG_Power_2   = USG_Power_2    * tempr13 * tempr7 
math Adj_USG_Volts_2   = USG_Volts_2    * tempr13 * tempr7 
math Adj_USG_Current_2 = USG_Current_2  * tempr13 * tempr7 
 
calc EQUALIZATION tempr13 Sec_Equ_FF x_delta y_delta bond_dist

math Adj_Force_2 = Force_2  * tempr13 * tempr8   
math Adj_Initial_Force_2 = Initial_Force_2  * tempr13 * tempr8 

if Ops_Mode <= 1 
  math Adj_USG_Power_2   = Adj_USG_Power_2   * ReworkUSGRatio_2
  math Adj_USG_Volts_2   = Adj_USG_Volts_2   * ReworkUSGRatio_2
  math Adj_USG_Current_2 = Adj_USG_Current_2 * ReworkUSGRatio_2
  math Adj_Force_2 = Adj_Force_2 * ReworkForceRatio_2
endif  

#End of FILE: GENERIC.Include_PFequal2.PDL

update_await( Z_POSITION,  ctip2 )                               

input z_pos z_pos_2                                              

if Ops_Mode = 5 
  if z_pos_2 = 800.0
    math z_pos_2 = Reset_z
  endif
endif

if Z_Diff_Control = 1
 
  if z_pos_1 = 800.0
    math tempr1 = Ball_Size * Z_Diff_Ball
    math z_pos_2 = z_pos_2 - tempr1
  endif
endif

update_await(Z_KNOWN_POSITION,ctip1,z_pos_1)
math tempr1 = z_pos_1 + Bond2_Limit
limits z_pos_2 z_pos_2 tempr1                                    

math tempr13 = z_pos_1                                           

calc BOND_HEIGHT_DIFF z_pos_diff z_pos_1 z_pos_2                 
math z_pos_1 = tempr13                                           

math kink_ht = Kink_Height
 
math BleedLevCP = USG_Power_1 * Lift_USG_Ratio                   
math BleedLevCV = USG_Volts_1 * Lift_USG_Ratio                   
math BleedLevCC = USG_Current_1 * Lift_USG_Ratio                 

math overlap_pct = 1.0 
if Loop_Speed_Boost = 1
    
  math overlap_pct = Kink_Overlap
    
endif

move prp  Z motion_id 0  1  overlap_pct  0 NO_EVENT kink_ht poly_tab_1_no_cv  FF_NORMAL   Lift_Throttle LoopZ_filter  QUE_VEC                             

##########################################################################################################
#FILE: GENERIC.Include_Complete1st.PDL  VERSION: 1.1  DATE: 10/25/05  TIME: 18:00:42

if que_ahead = 1
  await(USG_PRO_COMPLETE, no_motion_id)             

  if (InverseSmartUsg  = 1)
    io(usg_off)
  endif
  
  if fs_contact_detect > 0
    io(verifyFsDetect)
  endif
  
  wait(frcRmpDwnDly)                                          

  if perform_lookahead
    await(CAPTURE_COMPLETE, lookahead_id)
  endif

endif

#End of FILE: GENERIC.Include_Complete1st.PDL

move_start(motion_id)
io(trigger_pt,2)                                              

io(usg_on,BleedLevCP,BleedLevCC,BleedLevCV,USG_Mode_1,3)

math mot_wait = motion_id        

break_point Intra_bond                                           

math tempr12 = z_pos_diff + kink_ht                              
calc DISTANCE Adjusted_Loop bond_dist 0.0 tempr12 0.0            

math Adjusted_Loop = Adjusted_Loop + Loop_Factor                 

if Ref_Wire_Length = 0.0
  math Adjusted_Loop = Adjusted_Loop * Loop_Balance1 * y_scalar * x_scalar * news_scalar    
else
  math loop_bal_adder = bond_dist - Ref_Wire_Length              
  math loop_bal_adder = Loop_Balance1 - 1.0 * loop_bal_adder
  math Adjusted_Loop = Adjusted_Loop + loop_bal_adder * y_scalar * x_scalar * news_scalar   
endif
 
calc GET_MDP_LOOP_HT_FACTORS tempr17 tempr18
 
calc APPLY_MDP_LOOP_HT_FACTORS Adjusted_Loop Adjusted_Loop tempr17 tempr18
                                                                 
if z_pos_2 > z_pos_1
  math tempr5 = z_pos_diff + adjusted_tip2 + 2.0 - kink_ht       
  math tempr5 = tempr5 - z_rev - z_rev1a
elseif z_pos_2 + adjusted_tip2 > z_pos_1
  math tempr5 = adjusted_tip2 - z_pos_diff + 2.0 - kink_ht       
  math tempr5 = tempr5 - z_rev - z_rev1a
else
  math tempr5 = z_pos_diff                                       
endif

limits tempr5 0.0 400.0                                          
limits Adjusted_Loop tempr5 400.0                                
 
math ymove_temp = 0.0
math ymove_total = 0.0
math zonly_correct = 0.0

math z_ht_sum = z_pos_1                                          
##########################################################################################################
#FILE: GENERIC.Include_ArcCalc.PDL  VERSION: 1.6  DATE: 07/28/05  TIME: 12:00:01

math t2arc = z_ht_sum * z_ht_sum                                 
math t3arc = bhr^2 - t2arc                                       
calc SQRT t2arc t3arc                                            
math t3arc = bhr - t2arc                                         

#End of FILE: GENERIC.Include_ArcCalc.PDL

math t1arc = z_pos_1 + kink_ht + z_rev + z_rev1a                 

math z_ht_sum = t1arc
##########################################################################################################
#FILE: GENERIC.Include_ArcCalc.PDL  VERSION: 1.6  DATE: 07/28/05  TIME: 12:00:01

math t2arc = z_ht_sum * z_ht_sum                                 
math t3arc = bhr^2 - t2arc                                       
calc SQRT t2arc t3arc                                            
math t3arc = bhr - t2arc                                         

#End of FILE: GENERIC.Include_ArcCalc.PDL

math arc_corr0 = t3arc                                           

calc SINE tempr3 CSP_Kink_Angle                                  
calc COSINE tempr4 CSP_Kink_Angle                                
math csp_adj_loop = tempr12 / tempr3 * tempr4                    

math new_adj_loop = Adjusted_Loop - csp_adj_loop                 
math tail_kink_radius = new_adj_loop * tempr4                    

math xy_tail_kink = new_adj_loop * tempr3                        

math Bleed_Voltage = Bleed_Voltage
 
event_ena(ABS_TIME_EVENT, -1, NO_LINK, 0, TRG_USG_ON, 0.0, 0.0, Bleed_Voltage, 1, 3)
                                                                 
calc MOTION_ID motion_id 1                                       
  
if Loop_Speed_Boost = 1
  math overlap_pct = Rmot_Overlap                                
endif
 
move prp  X motion_id 0  1  overlap_pct  mot_wait  NO_EVENT x_rev1 poly_tab_1_no_cv  FF_NORMAL   Rmot_Speed LoopXYZ_filter  LINK
 
move prp  Y motion_id 0  1  overlap_pct  mot_wait  NO_EVENT y_rev1 poly_tab_1_no_cv  FF_NORMAL   Rmot_Speed LoopXYZ_filter  LINK
 
move prp  Z motion_id 0  1  overlap_pct  mot_wait  NO_EVENT z_rev  poly_tab_1_no_cv  FF_NORMAL   Rmot_Speed LoopXYZ_filter  GO_VEC

math mot_wait = motion_id                            

break_point Intra_bond                               
                                                     
calc MOTION_ID motion_id 1                           
  
if Loop_Speed_Boost = 1
  math overlap_pct = Rmot2_Overlap                   
endif
 
move prp  X motion_id 0  1  overlap_pct  mot_wait  NO_EVENT x_rev1a poly_tab_1_no_cv  FF_NORMAL   Rmot_Speed LoopXYZ_filter  LINK
 
move prp  Y motion_id 0  1  overlap_pct  mot_wait  NO_EVENT y_rev1a poly_tab_1_no_cv  FF_NORMAL   Rmot_Speed LoopXYZ_filter  LINK
 
move prp  Z motion_id 0  1  overlap_pct  mot_wait  NO_EVENT z_rev1a poly_tab_1_no_cv  FF_NORMAL   Rmot_Speed LoopXYZ_filter  GO_VEC

math mot_wait = motion_id                           

break_point Second_bond                             
 
if Auto_Flat = 1
  if Use_Die_Edge = 1
    calc AUTO_FLAT_LENGTH new_span_1 Die_Edge_Clr   
    calc ABS_VALUE tempr1 x_ratio                   
    calc ABS_VALUE tempr2 y_ratio
    if tempr1 >= tempr2
      math new_smooth = Flat_Smooth / tempr1
    else
      math new_smooth = Flat_Smooth / tempr2
    endif
  else
    calc ABS_VALUE tempr1 x_ratio                   
    calc ABS_VALUE tempr2 y_ratio

    if tempr1 >= tempr2
      math new_span_1 = Flat_Len_1 / tempr1
      math new_smooth = Flat_Smooth / tempr1
    else
      math new_span_1 = Flat_Len_1 / tempr2
      math new_smooth = Flat_Smooth / tempr2
    endif
  endif
else
  math new_span_1 = Flat_Len_1
  math new_smooth = Flat_Smooth
endif

limits new_span_1 0.0 new_adj_loop
limits new_smooth 0.0 new_span_1

if Shape_Factor_1 > 0.0
  math tempr2 = bond_dist - new_span_1
  math tempr3 = kink_ht + z_pos_diff / tempr2             
  calc ARCTAN tempr4 tempr3                               
  math tempr4 = tempr4 * Overbend_Scale                   
  math new_sf_1 = Shape_Factor_1 + tempr4                 
  limits new_sf_1 0.0 rtheta_limit                        
else
  math new_sf_1 = Shape_Factor_1
endif

calc SINE tempr5 new_sf_1                                  
math r2 = new_span_1 * tempr5                              

if new_sf_1 != 0.0
  math x_rev2 = r2 * x_ratio - x_rev1                      
  math y_rev2 = r2 * y_ratio - y_rev1                      
                                                           
else
  math x_rev2 = 0.0                                        
  math y_rev2 = 0.0
endif

math tempr14 = new_smooth

calc COSINE tempr15 new_sf_1                               
math tempr15 = new_span_1 * tempr15 - tempr14              

math z_ht_sum = t1arc + tempr14
##########################################################################################################
#FILE: GENERIC.Include_ArcCalc.PDL  VERSION: 1.6  DATE: 07/28/05  TIME: 12:00:01

math t2arc = z_ht_sum * z_ht_sum                                 
math t3arc = bhr^2 - t2arc                                       
calc SQRT t2arc t3arc                                            
math t3arc = bhr - t2arc                                         

#End of FILE: GENERIC.Include_ArcCalc.PDL

math arc_corr1 = t3arc - arc_corr0                         

math z_ht_sum = t1arc + tempr14 + tempr15
##########################################################################################################
#FILE: GENERIC.Include_ArcCalc.PDL  VERSION: 1.6  DATE: 07/28/05  TIME: 12:00:01

math t2arc = z_ht_sum * z_ht_sum                                 
math t3arc = bhr^2 - t2arc                                       
calc SQRT t2arc t3arc                                            
math t3arc = bhr - t2arc                                         

#End of FILE: GENERIC.Include_ArcCalc.PDL

math arc_corr2 = t3arc                                     

math tempr1 = tempr14 - z_rev - z_rev1a                    
math tempr2 = y_rev2 + arc_corr2 - arc_corr1               
                                                           
calc MOTION_ID motion_id 1                                 

if Loop_Speed_Boost = 1
  math overlap_pct = Smth_Spn_1_Overlap                       
endif

move prp  Z motion_id 0  1  overlap_pct  mot_wait  NO_EVENT tempr1 poly_tab_1_no_cv  FF_NORMAL   Loop_Speed LoopXYZ_filter  LINK                       
move prp  Y motion_id 0  1  overlap_pct  mot_wait  NO_EVENT arc_corr1 poly_tab_1_no_cv  FF_NORMAL   Loop_Speed LoopXYZ_filter  GO_VEC

if Loop_Speed_Boost = 1
  
  math overlap_pct = Shp_Fact_1_Overlap                
  
endif
math mot_wait = motion_id                              

break_point Intra_bond                                 
                                                       
calc MOTION_ID motion_id 1                             

move prp  Z motion_id 0  1  overlap_pct  mot_wait  NO_EVENT tempr15 poly_tab_1_no_cv  FF_NORMAL   Loop_Speed LoopXYZ_filter  LINK                      
move prp  X motion_id 0  1  overlap_pct  mot_wait  NO_EVENT x_rev2 poly_tab_1_no_cv  FF_NORMAL   Loop_Speed LoopXYZ_filter  LINK                      
move prp  Y motion_id 0  1  overlap_pct  mot_wait  NO_EVENT tempr2 poly_tab_1_no_cv  FF_NORMAL   Loop_Speed LoopXYZ_filter  GO_VEC                    

math mot_wait = motion_id                              

break_point Intra_bond                                 
 
limits Flat_Len_2 Flat_Len_1 new_adj_loop

if CSP_SF_2 > 0.0
  if Auto_Flat = 1
    calc ABS_VALUE tempr1 x_ratio                      
    calc ABS_VALUE tempr2 y_ratio

    if tempr1 >= tempr2
      math new_span_2 = Flat_Len_2 / tempr1
    else
      math new_span_2 = Flat_Len_2 / tempr2
    endif
  else
    math new_span_2 = Flat_Len_2
  endif

  limits new_span_2 new_span_1 new_adj_loop                    

  math tempr2 = bond_dist - new_span_2
  math tempr3 = kink_ht + z_pos_diff / tempr2                  
  calc ARCTAN tempr4 tempr3                                    
  math tempr4 = tempr4 * Overbend_Scale                        
  math new_sf_2 = tempr4 * Auto_Shape + CSP_SF_2               
  limits new_sf_2 0.0 rtheta_limit                             
else
  math new_span_2 = Flat_Len_2
  math new_sf_2 = 0.0
endif

if Flat_Len_2 = Flat_Len_1                                       
  math new_sf_2 = 0.0                                            
  math new_span_2 = new_adj_loop                                 
endif

math tempr2 = r2 * r2                                            
math tempr2 = new_span_2 * new_span_2 - tempr2
calc SQRT tempr10 tempr2

calc COSINE tempr21 new_sf_2                                     
math tempr21 = new_span_2 * tempr21                              

math csp_span_loc = tempr21                                      
math tempr21 = tempr21 - new_span_2                              
math tempr22 = tempr10 - tempr14 - tempr15                       
math rz_rev2 = new_span_2 - tempr10                              

math z_ht_sum = t1arc + tempr10
##########################################################################################################
#FILE: GENERIC.Include_ArcCalc.PDL  VERSION: 1.6  DATE: 07/28/05  TIME: 12:00:01

math t2arc = z_ht_sum * z_ht_sum                                 
math t3arc = bhr^2 - t2arc                                       
calc SQRT t2arc t3arc                                            
math t3arc = bhr - t2arc                                         

#End of FILE: GENERIC.Include_ArcCalc.PDL

math arc_corr3 = t3arc                                           

math z_ht_sum = t1arc + new_span_2
##########################################################################################################
#FILE: GENERIC.Include_ArcCalc.PDL  VERSION: 1.6  DATE: 07/28/05  TIME: 12:00:01

math t2arc = z_ht_sum * z_ht_sum                                 
math t3arc = bhr^2 - t2arc                                       
calc SQRT t2arc t3arc                                            
math t3arc = bhr - t2arc                                         

#End of FILE: GENERIC.Include_ArcCalc.PDL

math arc_corr3a = t3arc                                          

math z_ht_sum = t1arc + csp_span_loc
##########################################################################################################
#FILE: GENERIC.Include_ArcCalc.PDL  VERSION: 1.6  DATE: 07/28/05  TIME: 12:00:01

math t2arc = z_ht_sum * z_ht_sum                                 
math t3arc = bhr^2 - t2arc                                       
calc SQRT t2arc t3arc                                            
math t3arc = bhr - t2arc                                         

#End of FILE: GENERIC.Include_ArcCalc.PDL

math arc_corr4 = t3arc                                           

calc SINE tempr5 new_sf_2                                        
math r3 = new_span_2 * tempr5                                    

math x_rev3 = x_ratio * r3
math y_rev3 = y_ratio * r3

if new_sf_2 = 0.0
  if new_sf_1 > 0.0
     math r3 = r2                                                
  else
     math r3 = Reverse_Motion
  endif
else
  if new_sf_1 > 0.0
    math x_rev3 = x_rev3 - x_rev2 - x_rev1
    math y_rev3 = y_rev3 - y_rev2 - y_rev1
  else
    math x_rev3 = x_rev3 - x_rev1
    math y_rev3 = y_rev3 - y_rev1
  endif
endif

math tempr2 = r3 * r3
math tempr1 = new_adj_loop * new_adj_loop - tempr2
calc SQRT zprime1 tempr1
math tempr10 = zprime1

if new_sf_1 >= 0.0
  if new_sf_2 = 0.0
    math tempr10 = zprime1 + rz_rev2
  endif
  if new_sf_2 > 0.0
    math tempr21 = tempr21 + rz_rev2                             
  endif
  math rx_rev2 = 0.0                                             
  math ry_rev2 = 0.0
  math rz_rev2 = 0.0
else
  math rx_rev2 = x_rev2 * -1.0                                   
  math ry_rev2 = y_rev2 * -1.0                                   
  math ry_rev2 = ry_rev2 + arc_corr3a - arc_corr3
endif

math tempr2 = arc_corr3 - arc_corr2
math tempr3 = y_rev3 + arc_corr4 - arc_corr3a
                                                                 
calc MOTION_ID motion_id 1                                       

if Loop_Speed_Boost = 1
  math overlap_pct = Smth_Spn_2_Overlap                                
endif
 
move prp  Z motion_id 0  1  overlap_pct  mot_wait  NO_EVENT tempr22 poly_tab_1_no_cv  FF_NORMAL   Loop_Speed LoopXYZ_filter  LINK
move prp  Y motion_id 0  1  overlap_pct  mot_wait  NO_EVENT tempr2 poly_tab_1_no_cv  FF_NORMAL   Loop_Speed LoopXYZ_filter  GO_VEC

if Loop_Speed_Boost = 1
  
  math overlap_pct = Shp_Ctl_F2_Overlap         
  
endif
math mot_wait = motion_id                       
                                                
calc MOTION_ID motion_id 1                      

move prp  X motion_id 0  1  overlap_pct  mot_wait  NO_EVENT rx_rev2 poly_tab_1_no_cv  FF_NORMAL   Loop_Speed LoopXYZ_filter  LINK
move prp  Y motion_id 0  1  overlap_pct  mot_wait  NO_EVENT ry_rev2 poly_tab_1_no_cv  FF_NORMAL   Loop_Speed LoopXYZ_filter  LINK
move prp  Z motion_id 0  1  overlap_pct  mot_wait  NO_EVENT rz_rev2 poly_tab_1_no_cv  FF_NORMAL   Loop_Speed LoopXYZ_filter  GO_VEC

math mot_wait = motion_id                       
                                                
calc MOTION_ID motion_id 1                      
  
if Loop_Speed_Boost = 1
  math overlap_pct = Shp_Fact_2_Overlap         
endif

move prp  Z motion_id 0  1  overlap_pct  mot_wait  NO_EVENT tempr21 poly_tab_1_no_cv  FF_NORMAL   Loop_Speed LoopXYZ_filter  LINK               
move prp  X motion_id 0  1  overlap_pct  mot_wait  NO_EVENT x_rev3 poly_tab_1_no_cv  FF_NORMAL   Loop_Speed LoopXYZ_filter  LINK               
move prp  Y motion_id 0  1  overlap_pct  mot_wait  NO_EVENT tempr3 poly_tab_1_no_cv  FF_NORMAL   Loop_Speed LoopXYZ_filter  GO_VEC             

math mot_wait = motion_id                       

break_point Intra_bond                                           
 
math tail_kink_height = tempr10 - csp_span_loc

math z_ht_sum = t1arc + zprime1
##########################################################################################################
#FILE: GENERIC.Include_ArcCalc.PDL  VERSION: 1.6  DATE: 07/28/05  TIME: 12:00:01

math t2arc = z_ht_sum * z_ht_sum                                 
math t3arc = bhr^2 - t2arc                                       
calc SQRT t2arc t3arc                                            
math t3arc = bhr - t2arc                                         

#End of FILE: GENERIC.Include_ArcCalc.PDL

math arc_corr5 = t3arc                                           

math z_tail_kink = tail_kink_radius - zprime1   
math x_tail_kink = xy_tail_kink * CSP_Kink_Factor - r3 * x_ratio
math y_tail_kink = xy_tail_kink * CSP_Kink_Factor - r3 * y_ratio

math z_ht_sum = t1arc + tail_kink_radius
##########################################################################################################
#FILE: GENERIC.Include_ArcCalc.PDL  VERSION: 1.6  DATE: 07/28/05  TIME: 12:00:01

math t2arc = z_ht_sum * z_ht_sum                                 
math t3arc = bhr^2 - t2arc                                       
calc SQRT t2arc t3arc                                            
math t3arc = bhr - t2arc                                         

#End of FILE: GENERIC.Include_ArcCalc.PDL

math arc_corr6 = t3arc                                           

math tempr1 = 1.0 - CSP_Bump
math tempr1 = xy_tail_kink - r3 * tempr1 + r3
math tempr1 = tempr1 * tempr1
math tempr2 = Adjusted_Loop * Adjusted_Loop
math tempr2 = tempr2 - tempr1
calc SQRT tempr1 tempr2
math z_csp_rkink = tempr1 - tail_kink_radius + CSP_Loop_Factor
math x_csp_rkink = x_tail_kink * CSP_Bump * -1.0                 
math y_csp_rkink = y_tail_kink * CSP_Bump * -1.0

math tempr2 = Adjusted_Loop - tail_kink_radius - 10.0
limits z_csp_rkink 0.0 tempr2

math z_ht_sum = t1arc + tail_kink_radius + z_csp_rkink
##########################################################################################################
#FILE: GENERIC.Include_ArcCalc.PDL  VERSION: 1.6  DATE: 07/28/05  TIME: 12:00:01

math t2arc = z_ht_sum * z_ht_sum                                 
math t3arc = bhr^2 - t2arc                                       
calc SQRT t2arc t3arc                                            
math t3arc = bhr - t2arc                                         

#End of FILE: GENERIC.Include_ArcCalc.PDL

math arc_corr6a = t3arc                                          

math x_arc = x_rev1 + x_rev1a + x_rev2 + rx_rev2 + x_rev3
math y_arc = y_rev1 + y_rev1a + y_rev2 + ry_rev2 + y_rev3        

math x_tail_rkink = x_tail_kink * -1.0 - x_csp_rkink - x_arc
math y_tail_rkink = y_tail_kink * -1.0 - y_csp_rkink - y_arc
math z_tail_rkink = new_adj_loop - tail_kink_radius - z_csp_rkink + csp_adj_loop

math tempr9 = 0.0
math tempr16 = 0.0
##########################################################################################################
#FILE: GENERIC.Include_TOLcalc.PDL  VERSION: 1.7  DATE: 05/17/06  TIME: 11:46:34
                                                 
math z_ht_sum = t1arc + Adjusted_Loop - tempr9 + tempr16        
##########################################################################################################
#FILE: GENERIC.Include_ArcCalc.PDL  VERSION: 1.6  DATE: 07/28/05  TIME: 12:00:01

math t2arc = z_ht_sum * z_ht_sum                                 
math t3arc = bhr^2 - t2arc                                       
calc SQRT t2arc t3arc                                            
math t3arc = bhr - t2arc                                         

#End of FILE: GENERIC.Include_ArcCalc.PDL

math arc_correction = t3arc                                   
math tol_correction = arc_correction - arc_corr0              

#End of FILE: GENERIC.Include_TOLcalc.PDL
 
math y_tail_kink = y_tail_kink + arc_corr6 - arc_corr5
math y_csp_rkink = y_csp_rkink + arc_corr6a - arc_corr6
math y_tail_rkink = y_tail_rkink - arc_correction - arc_corr6a

math tempr2 = arc_corr5 - arc_corr4
                                                                 
calc MOTION_ID motion_id 1                                       
  
if Loop_Speed_Boost = 1
  math overlap_pct = TK_Ht_Overlap                               
endif
 
move prp  Z motion_id 0  1  overlap_pct  mot_wait  NO_EVENT tail_kink_height poly_tab_1_no_cv    FF_NORMAL Loop_Speed LoopXYZ_filter  LINK
move prp  Y motion_id 0  1  overlap_pct  mot_wait  NO_EVENT tempr2 poly_tab_1_no_cv  FF_NORMAL   Loop_Speed LoopXYZ_filter  GO_VEC

math mot_wait = motion_id                                   

break_point Intra_bond                                      
                                                            
calc MOTION_ID motion_id 1                                  
  
if Loop_Speed_Boost = 1
  math overlap_pct = TK_Overlap                             
endif

move prp  X motion_id 0  1  overlap_pct  mot_wait  NO_EVENT x_tail_kink poly_tab_1_no_cv    FF_NORMAL Loop_Speed LoopXYZ_filter  LINK                 
move prp  Y motion_id 0  1  overlap_pct  mot_wait  NO_EVENT y_tail_kink poly_tab_1_no_cv    FF_NORMAL Loop_Speed LoopXYZ_filter  LINK                 
move prp  Z motion_id 0  1  overlap_pct  mot_wait  NO_EVENT z_tail_kink poly_tab_1_no_cv    FF_NORMAL Loop_Speed LoopXYZ_filter  GO_VEC               

math mot_wait = motion_id                                   

break_point Intra_bond                                      

math Kink_Bleed_Voltage = Kink_Bleed_Voltage
 
event_ena(ABS_TIME_EVENT, -1, NO_LINK, 0, TRG_USG_ON, 0.0, 0.0, Kink_Bleed_Voltage, 1, 3)
 
calc MOTION_ID motion_id 1                                  
 
event_ena(ABS_TIME_EVENT, motion_id, Z_END_LINK, 0, TRG_CLMP_CLOS)

move prp  X motion_id 0  1  1.0 mot_wait  NO_EVENT x_csp_rkink poly_tab_1_no_cv  FF_NORMAL   CSP_Kink_Speed LoopXYZ_filter  LINK                       
move prp  Y motion_id 0  1  1.0 mot_wait  NO_EVENT y_csp_rkink poly_tab_1_no_cv  FF_NORMAL   CSP_Kink_Speed LoopXYZ_filter  LINK
move prp  Z motion_id 0  1  1.0 mot_wait  NO_EVENT z_csp_rkink poly_tab_1_no_cv  FF_NORMAL   CSP_Kink_Speed LoopXYZ_filter  GO_VEC

input non_zero_motion_id final_motion_id                         
event_ena(ANY_AXIS_JAM, final_motion_id)                         
await(ANY_AXIS_JAM, final_motion_id)                             
 
calc MOTION_ID motion_id 1                        

move trp X motion_id 0  1  1.0 0 XYZ_JAM x_tail_rkink mot_tab_1 FF_NORMAL Loop_Speed   LoopXYZ_filter  LINK                            
move trp Y motion_id 0  1  1.0 0 XYZ_JAM y_tail_rkink mot_tab_1 FF_NORMAL Loop_Speed   LoopXYZ_filter  LINK
move trp Z motion_id 0  1  1.0 0 XYZ_JAM z_tail_rkink mot_tab_6 FF_NORMAL Loop_Speed   LoopXYZ_filter  GO_VEC

await(XYZ_JAM, motion_id)                         
break_point Intra_bond                            
                                                  
math new_ctip2  = z_pos_2  + adjusted_tip2        
 
math USGbondtime2 = USG_Bond_Time_2              
math z_pos_update = 1                             
math stitch_mode = 0                              

##########################################################################################################
#FILE: GENERIC.Include_Approach.PDL  VERSION: 1.48  DATE: 02/22/07  TIME: 08:10:19

calc MOTION_ID motion_id 1                         
  
if 2nd_Approach = 0

    event_ena(Z_SEEK, motion_id, FIRE_TRIGGER, 0.0, TRG_CLMP_OPEN)

else
  if Step_Clamp = 1
     
    event_ena(XYZ_JAM, motion_id, FIRE_TRIGGER, 0.0, TRG_CLMP_OPEN)
  else
    event_ena(XYZ_JAM, motion_id)
  endif
endif

math tempr5 = NSOP_NumSamples
math tempr6 = NSOP_percentage

input bits_learn_mode WBMS_Learn_Mode WBMS_Learn_enable WBMS_Polarity_Auto WBMS_Thresh_Auto
  
if WBMS_Polarity_Auto = 2                                     
  math tempr7  = NSOPSamplingDelay_AC 
  math tempr20 = NSOLSamplingDelay_AC 
else

  math tempr7  = NSOPSamplingDelay_DC 
  math tempr20 = NSOLSamplingDelay_DC 
  
endif

##########################################################################################################
#FILE: GENERIC.Include_NSOP.PDL  VERSION: 1.14  DATE: 02/01/07  TIME: 01:30:55

input pbi_info pbi_mode
                                                                                
  calc XY_MOTION_TIME_COORD LopSec_Time 0.0 0.0 0.0 maxTime LF4 poly_table_1_no_cv  SecNfr_filter_ATX2    
  math tempr1 = tempr5 * 2 - 1.0 * cpu2_clock_16  * 1000                         
  math tempr8 = LopSec_Time - tempr1                                              
  limits tempr8 0.0 LopSec_Time                                                   
  limits tempr7 0.0 tempr8                                                        

input bits_learn_mode WBMS_Learn_Mode WBMS_Learn_enable WBMS_Polarity_Auto WBMS_Thresh_Auto
if WBMS_Learn_Mode != 0                              
  if pbi_mode < 3 
    if WBMS_Learn_Mode = 2 
      if WBMS_Learn_enable = 1 
        input wbms_data_smp_ext WBMS_Data_Smp_Ext
        math tempr2 = WBMS_Data_Smp_Ext / 2.0
        math tempr1 = 15.0  
        io(wbms_set, tempr1, WBMS_Current, 2 )
        if NSOPSamplingDelay_AC  > tempr7
          io(wbms_test, 1 , tempr7, tempr5, tempr6, NSOP_height, 0, 0)
        else
          io(wbms_test, 1 , NSOPSamplingDelay_AC , tempr5, tempr6, NSOP_height, 0, 0)
        endif
        await(WBMS_SAMPLE, no_motion_id)
        io(wbms_off)
      
        math tempr1 = 55.0 
        io(wbms_set, tempr1, WBMS_Current, 1 )
        wait(tempr2)
        if NSOPSamplingDelay_DC  > tempr7
          io(wbms_test, 1 , tempr7, tempr5, tempr6, NSOP_height, 0, 0)
        else
          io(wbms_test, 1 , NSOPSamplingDelay_DC , tempr5, tempr6, NSOP_height, 0, 0)
        endif
        await(WBMS_SAMPLE, no_motion_id)
        io(wbms_off)

        io(wbms_set, tempr1, WBMS_Current, 0 )
        wait(tempr2)
        if NSOPSamplingDelay_DC  > tempr7
          io(wbms_test, 1 , tempr7, tempr5, tempr6, NSOP_height, 0, 0)
        else
          io(wbms_test, 1 , NSOPSamplingDelay_DC , tempr5, tempr6, NSOP_height, 0, 0)
        endif
        io(wbms_test, 6 , NSOLSamplingDelay_AC , SHTL_NumSamples, SHTL_percentage_ATX1 , NSOL_height,            NSOL_NumSamples, NSOL_percentage_ATX1 )
      else
        io(wbms_test, 1 , tempr7, tempr5, tempr6, NSOP_height, 0, 0)      
        io(wbms_test, 6 , tempr20, SHTL_NumSamples, SHTL_percentage_ATX1 , NSOL_height,            NSOL_NumSamples, NSOL_percentage_ATX1 )
      endif
    else
      io(wbms_test, 1 , tempr7, tempr5, tempr6, NSOP_height, 0, 0)
      io(wbms_test, 6 , tempr20, SHTL_NumSamples, SHTL_percentage_ATX1 , NSOL_height,          NSOL_NumSamples, NSOL_percentage_ATX1 )
    endif
  else
    io(wbms_test, 1 , tempr7, 0, 0, NSOP_height, 0, 0)  
    io(wbms_test, 6 , tempr20, SHTL_NumSamples, SHTL_percentage_ATX1 , NSOL_height,        0, 0)
  endif
endif

#End of FILE: GENERIC.Include_NSOP.PDL

if tempr4  = 0
 
 io(usg_off)                                                   
endif

io(trigger_pt,3)                                              

math Z_C/V = C/V_2 / cpu2_clock_16  / zenc_res_32 

##########################################################################################################
#FILE: GENERIC.Include_ForceTime2.PDL  VERSION: 1.14  DATE: 01/05/07  TIME: 08:40:44

math frc_inittime = Initial_Force_Time_2  * Force_Profiling_2 
math frc_ramptime = Force_Ramp_Time_2 * Force_Profiling_2 

math usgPreDelay = USG_Pre-Delay_2a

if stitch_mode <= 1                                      
  if Contact_Angle * Contact_Offset < 0.0                
    math usgPreDelay = minXY_ATX1P  * 1000 + usgPreDelay    
  endif
  
endif
 
math DACperGram  = 100.0grams - 0.0grams / 100.0                       

math hifrc_fctr  = 0.0
math hifrc_timebase = 4.0 * 10.0                                       

math hifrc_threshold = DACperGram * hifrclimit + 0.0grams              

math hifrcflag = 0                                                     
math hifrcscrub = 1                                                    

math usgPreDelay = usgPreDelay / 1000 / cpu2_clock_16                 
math usgtime = USGbondtime2 / USG_clocks_DSP                        

math initialForceTime = frc_inittime * usgtime / cpu2_clock_16       

if Force_Profiling_2  = 1                                                   
  if Adj_Initial_Force_2 > hifrc_threshold                             
    math IBFtime = hifrc_fctr * Adj_Initial_Force_2 + hifrc_timebase / cpu2_clock_16 
    limits initialForceTime 0 IBFtime                                  
    math IBFpctTime = initialForceTime / IBFtime                       
    math hifrcflag = 1
    math hifrcscrub = 0                                                
  else
    math IBFpctTime = 0.0
  endif
else
  math Adj_Initial_Force_2 = Adj_Force_2                          
  math IBFpctTime = 0.0
endif
                                                                       
  math bondForceTime = usgtime / cpu2_clock_16  - initialForceTime + usgPreDelay
  limits bondForceTime 0 bondForceTime

if Adj_Force_2 > hifrc_threshold                                       
  math FBFtime = hifrc_fctr * Adj_Force_2 + hifrc_timebase - USG_RingDown_2 / cpu2_clock_16 
  math FBFtime = 1.0 - IBFpctTime * FBFtime                            
  limits bondForceTime 0 FBFtime                    
  math hifrcflag = 2
  math hifrcscrub = 0                                                  
endif
  
math forceSensorTime = bondForceTime                                   
  
if Stitch_Option = 0

  math tail_scrub = 1
  
elseif stitch_mode >= 3
  math tail_scrub = 1
else
  math tail_scrub = 0
endif

  if Tail_Scrub_Mode * tail_scrub = 2

    math forceTimeAdder = minXY_ATX1P  / cpu2_clock_16                
    math forceTimeAdder = forceTimeAdder - bondForceTime            

    math fdcIBFlimit = initialForceTime * cpu2_clock_16  * -1.0    
    math FDC_timeoff = Tail_ScrubTime_Offset 
    limits FDC_timeoff fdcIBFlimit 100.0
 
    if FDC_timeoff < 0.0
       
      math forceTimeAdder = FDC_timeoff / cpu2_clock_16  + forceTimeAdder
    endif

    if forceTimeAdder > 0.0                                         
 
      if hifrcflag <= 1
        math bondForceTime = bondForceTime + forceTimeAdder         
        math forceTimeAdder = forceTimeAdder * -1.0                 
        limits forceTimeAdder 0 1000
      else

        if FBFtime - bondForceTime >= forceTimeAdder
          math bondForceTime = bondForceTime + forceTimeAdder       
          math forceTimeAdder = forceTimeAdder * -1.0               
          limits forceTimeAdder 0 1000
        else

          if FDC_timeoff < 0.0
            math forceTimeAdder = FDC_timeoff / cpu2_clock_16  - forceTimeAdder    
          else
            math forceTimeAdder = forceTimeAdder * -1.0
          endif

          if forceTimeAdder < fdcIBFlimit
            math Tail_ScrubOffset_Mode  = 0                                       
          endif

        endif
      endif
    else
      math forceTimeAdder = forceTimeAdder * -1.0                   
      limits forceTimeAdder 0 1000
    endif

    math forceTimeAdder = forceTimeAdder * cpu2_clock_16           

    limits FDC_timeoff fdcIBFlimit forceTimeAdder                   
  endif

if hifrcflag > 0                                      
  math usgtime = initialForceTime + bondForceTime - usgPreDelay * cpu2_clock_16   
endif

math frcRampLimit = initialForceTime + bondForceTime
math frcRampLimit = initialForceTime / frcRampLimit
math frcRampLimit = 1.0 - frcRampLimit                                  
math bondForceTime = USG_RingDown_2 / cpu2_clock_16  + bondForceTime   

limits frc_ramptime 0.0 frcRampLimit                                  

math frcRmp2Time = frc_ramptime * usgtime / cpu2_clock_16            
if frcRmp2Time = 0.0
  math frcRmp2Slope = 0.0                                             
else
  math frcRmp2Slope = Adj_Force_2 - Adj_Initial_Force_2 / frcRmp2Time   
endif

math frcRmp3Time  = 0.0
math frcRmp3Slope = 0.0
math Seg3_Force = Adj_Force_2                                         
math Seg3_ForceTime = 0.0                                             

math Post_Gain_2 = Post_Damp_Gain_2
  
  math Post_Gain_2  = 1.0
  
math tail_scrub_pwr  = 0.0                                       
math tail_scrub_curr = 0.0
math tail_scrub_volt = 0.0
   
if Tail_Step_USG > 0.0
  math tail_scrub_curr = Tail_Step_USG                           
  math usg_mode = 2
else
  math tail_scrub_pwr  = USG_Power_2 * Tail_Scrub_USG            
  math tail_scrub_curr = USG_Current_2 * Tail_Scrub_USG
  math tail_scrub_volt = USG_Volts_2 * Tail_Scrub_USG
  math usg_mode = USG_Mode_2
endif

if Tail_Scrub_Mode * tail_scrub = 2
   
  math bondForceTime = USG_RingDown_2 / cpu2_clock_16  * -1.0 + bondForceTime
  math frcRmp3Time = Scrub_Force_Ramp_Down_2 + 4 / cpu2_clock_16        
  math frcRmp3Slope = Tail_Scrub_Force - Adj_Force_2 / frcRmp3Time       
  math Seg3_Force = Tail_Scrub_Force
  math Seg3_ForceTime = minXY_ATX1P  * Tail_Scrub_Steps                     
  math tempr8 = 1.0 / Tail_Step_Speed - 1.0 * minXY_ATX1P                   
  math Seg3_ForceTime = Tail_Scrub_Steps - 1.0 * tempr8 + Seg3_ForceTime   
   
  math Seg3_ForceTime = Tail_Scrub_Steps - 1.0 * tail_step_delay + Seg3_ForceTime / cpu2_clock_16 

elseif Tail_Scrub_Amp * tail_scrub > 0
  
  if Tail_Scrub_Phase = 0
     
    math scrub_phase = 0                                      
    math tail_x_scrub = x_ratio * Tail_Scrub_Amp * -1.0       
    math tail_y_scrub = y_ratio * Tail_Scrub_Amp              
  elseif Tail_Scrub_Phase = 1
     
    math scrub_phase = 0                                      
    math tail_x_scrub = y_ratio * Tail_Scrub_Amp              
    math tail_y_scrub = x_ratio * Tail_Scrub_Amp              
  else
     
    math scrub_phase = 90                                     
    math tail_x_scrub = Tail_Scrub_Amp                        
    math tail_y_scrub = Tail_Scrub_Amp                        
  endif

  calc(XY_SCRUB_TIME, scrub_time, scrub_phase_delay, scrub_phase,       Tail_Scrub_Amp, Tail_Scrub_Freq, Tail_Scrub_Cycles)
     
  math tempr7 = 0.0

  if Tail_Scrub_Mode * Tail_Scrub_Offset != 0
    calc(XY_MOTION_TIME, tempr7, Tail_Scrub_Offset, 1.0, 0)
    math tempr7 = tempr7 / 1000
  endif

  if Tail_Scrub_Mode = 1
     
    math bondForceTime = USG_RingDown_2 / cpu2_clock_16  * -1.0 + bondForceTime
    math frcRmp3Time = Scrub_Force_Ramp_Down_2 + 4 / cpu2_clock_16       
    math frcRmp3Slope = Tail_Scrub_Force - Adj_Force_2 / frcRmp3Time      
    math Seg3_Force = Tail_Scrub_Force
    math Seg3_ForceTime = scrub_time + tempr7 / cpu2_clock_16            
    if tail_scrub_pwr + tail_scrub_curr + tail_scrub_volt > 0.0                                                
      math Seg3_ForceTime = USG_RingDown_2 / cpu2_clock_16  + Seg3_ForceTime
    endif
  endif
endif
 
if Tail_PostStep_Force > hifrc_threshold
  math tempr7 = hifrc_timebase - Tail_PostStep_Ramp - 4 * 1000
  if Tail_PostStep_USG > 0.0
    math tempr7 = USG_RingDown_2 * 1000 * -1.0 + tempr7
  endif
  limits Tail_PostStep_Time 0.0 tempr7
endif
  
if Tail_Scrub_Mode * tail_scrub = 2
  if Tail_PostStep_Force <= Minimum_Force_2 
       
      math frcRmp4Time  = 0.0
      math frcRmp4Slope = 0.0
      math frcRmp5Time  = 0.0
      math frcRmp5Slope = 0.0

      math frcRmp6Time = Force_Ramp_Down_2  / cpu2_clock_16                
      limits frcRmp6Time 1.0 frcRmp6Time                              
      math frcRmp6Slope = Minimum_Force_2  - Tail_Scrub_Force / frcRmp6Time  
       
      math Seg4_Force = Tail_Scrub_Force
      math Seg5_Force = Tail_Scrub_Force
     
    if tail_scrub_pwr + tail_scrub_curr + tail_scrub_volt > 0.0                                            
      math Seg3_ForceTime = USG_RingDown_2 / cpu2_clock_16  + Seg3_ForceTime
    endif

    math Seg4_ForceTime = 0                                             
    math Seg5_ForceTime = 0                                             
  else
       
      math frcRmp4Time = Tail_PostStep_Ramp + 4 / cpu2_clock_16      
       
      math frcRmp4Slope = Tail_PostStep_Force - Tail_Scrub_Force / frcRmp4Time

      math frcRmp5Time  = 0.0
      math frcRmp5Slope = 0.0

      math frcRmp6Time = Force_Ramp_Down_2  / cpu2_clock_16                
      limits frcRmp6Time 1.0 frcRmp6Time                              
       
      math frcRmp6Slope = Minimum_Force_2  - Tail_PostStep_Force / frcRmp6Time
       
      math Seg4_Force = Tail_PostStep_Force
      math Seg5_Force = Tail_PostStep_Force
     
    math Seg4_ForceTime = Tail_PostStep_Time / 1000 / cpu2_clock_16 
    if Tail_PostStep_USG > 0.0
      math Seg4_ForceTime = USG_RingDown_2 / cpu2_clock_16  + Seg4_ForceTime
    endif
    math Seg5_ForceTime = 0                                           
  endif
else  
     
    math frcRmp4Time  = 0.0
    math frcRmp4Slope = 0.0
    math frcRmp5Time  = 0.0
    math frcRmp5Slope = 0.0

    math frcRmp6Time = Force_Ramp_Down_2  / cpu2_clock_16                  
    limits frcRmp6Time 1.0 frcRmp6Time                                
    if Tail_Scrub_Amp * Tail_Scrub_Mode * tail_scrub > 0
      math frcRmp6Slope = Minimum_Force_2  - Tail_Scrub_Force / frcRmp6Time  
       
      math Seg4_Force = Tail_Scrub_Force
      math Seg5_Force = Tail_Scrub_Force
    else
      math frcRmp6Slope = Minimum_Force_2  - Adj_Force_2 / frcRmp6Time       
       
      math Seg4_Force = Adj_Force_2
      math Seg5_Force = Adj_Force_2
    endif
   
  math Seg4_ForceTime = 0                                           
  math Seg5_ForceTime = 0                                           
  
endif

math frcRmpDwnDly = Force_Ramp_Down_2  * 1000 + Extra_Rmp_Dwn_2               

math bondForceTime = bondForceTime - frcRmp2Time                       
limits bondForceTime 0 bondForceTime                                   

math dampTime = usgtime / cpu2_clock_16  * Damp_Time_2  + usgPreDelay    

if stitch_mode != 3
  if Scrub_Phase_Mode2 = 0
    math scrub_phase = Sec_Scrub_Phase2 + 30 * phase_convert   
    math x_scrub = y_ratio * Sec_Scrub2_Amp * 16.667           
    math y_scrub = x_ratio * Sec_Scrub2_Amp * 16.667           
  elseif Scrub_Phase_Mode2 = 1
    math scrub_phase = 90 + 30 * phase_convert                 
    math x_scrub = Sec_Scrub2_Amp * 16.667                     
    math y_scrub = Sec_Scrub2_Amp * 16.667                     
  else
    math scrub_phase = 30 * phase_convert                      
    math x_scrub = x_ratio * Sec_Scrub2_Amp * 16.667 * -1.0    
    math y_scrub = y_ratio * Sec_Scrub2_Amp * 16.667           
  endif

  math y_scrub = y_scrub * 0.55                               
   
  math y_scrub_cycles = Sec_Scrub_Cycles2 * 256               
  math scrub_phase = scrub_phase * 65536                      
   
  math cycles+phase = Sec_Scrub_Cycles2 + y_scrub_cycles + scrub_phase * Force_Profiling_2 
  math scrub_total = Sec_Scrub2_Amp * Sec_Scrub_Delay_Mode    

  calc FIRST_BOND_EQU scrub_test scrub_total 0                
  math tempr11  = 1000 / 2 + 1000 + 1000 + 1000
  math scrub_usg_delay = 4000 + 4000 * scrub_test             
                                                              
  math scrub_usg_delay = Sec_Scrub_Cycles2 - 1 * tempr11  + scrub_usg_delay
   
  math scrub_usg_delay = scrub_usg_delay * scrub_test * hifrcscrub * Force_Profiling_2 
  math scrub_force_time = scrub_usg_delay / 1000 / cpu2_clock_16   
  math dampTime = dampTime + scrub_force_time                 
   
  math initialForceTime = initialForceTime + scrub_force_time * Force_Profiling_2 
else

  math x_scrub = 0.0                                          
  math y_scrub = 0.0
  math cycles+phase = 0.0
  math scrub_usg_delay = 0.0

endif

#End of FILE: GENERIC.Include_ForceTime2.PDL

if Ops_Mode != 5 	
  calc BOND_FORCE_DATA_ACQ Bond_Force_Osc_Mmt
  if Bond_Force_Osc_Mmt = 2 
      math tempr3  = z_pos_2 + 10
      math tempr4  = z_pos_2 - 30
      io (trigger_data_acq, SERVO_ACQ_NORMAL_FILLBUF,1,SERVO_ACQ_Z,SERVO_ACQ_A_POS,tempr3 ,SERVO_ACQ_TRG_LT,0,SERVO_ACQ_Z,SERVO_ACQ_A_POS,tempr4 ,SERVO_ACQ_TRG_LT,0,SERVO_ACQ_Z,SERVO_ACQ_FS_FILT_FEEDBACK,SERVO_ACQ_Z,SERVO_ACQ_DONOTCOLLECT,SERVO_ACQ_Z,SERVO_ACQ_DONOTCOLLECT,SERVO_ACQ_Z,SERVO_ACQ_DONOTCOLLECT)
  endif
endif

math tempr1 = 2nd_Approach

if tempr1 = 0

  math tempr1 = Loop_Factor_2 / 2.0                              
 
math cont_thresh_2  = Contact_Threshold_2a
if Z_ContactDetectMode2 = 2 
   math fs_contact_detect = 1   
else
   math fs_contact_detect = 0   
endif
math fs_force_feedback = 0
calc(FORCE_SENSOR_USAGE,fs_contact_detect,fs_force_feedback,C/V_2,forceSensorTime,Force_Profiling_2,   Adj_Initial_Force_2,Force_2,Sec_Equ_FF,cont_thresh_2 ,max_fs_force)
calc(MIN_TIP_TIMES,C/V_2,0 ,fs_contact_detect,fs_force_feedback,trans_time,look_delay,detect_delay,1 )
math tempr3  = trans_time + look_delay + detect_delay * C/V_2 / zenc_res_32 
math tempr3  = tempr3  + z_pos_2 
limits new_ctip2  tempr3  new_ctip2 
io(forceSensor, fs_contact_detect, FsThreshold_2, fs_force_feedback, C/V_2, 1 )
  
  io(contact_detect_mode, 0 )                    
  
  event_ena(Z_CONTACT_ANGLE, no_motion_id)
    
    move tal X motion_id  0  1  1.0 0 NO_EVENT X_pos_new mot_tab_1 BONDSITE x_pos2  X_C/V       0.0 tempr1 X_C/V2 FF_NORMAL LF4 LopSec_filter_ATX2  LINK
    move tal Y motion_id  0  1  1.0 0 NO_EVENT Y_pos_new mot_tab_1 BONDSITE y_pos2  Y_C/V       0.0 tempr1 Y_C/V2 FF_NORMAL LF4 LopSec_filter_ATX2  LINK
    move tal Z motion_id  0  1  1.0 0 NO_EVENT new_ctip2  mot_tab_5 ESTOP    z_pos_2  C/V_2       0.0 tempr1 0.0 FF_NORMAL LF4 LopSec_filter_ATX2  GO_VEC

else   
     
    math x_infl_pt = XY_Step * x_ratio + x_pos2 
    math y_infl_pt = XY_Step * y_ratio + y_pos2 

    if XY_Step = 0.0
      math z_infl_pt = new_ctip2 
    else
      math z_infl_pt = Z_Step + new_ctip2 
    endif
  
    move tap X motion_id 0  1  1.0 0 NO_EVENT x_infl_pt mot_tab_1 FF_NORMAL LF4       InflPt_filter  LINK
    move tap Y motion_id 0  1  1.0 0 NO_EVENT y_infl_pt mot_tab_1 FF_NORMAL LF4       InflPt_filter  LINK
    move tap Z motion_id 0  1  1.0 0 NO_EVENT z_infl_pt mot_tab_5 FF_NORMAL LF4       InflPt_filter  GO_VEC

  if WBMS_enable
    await(WBMS_SAMPLE, no_motion_id)                       
  endif

  await(XYZ_JAM, motion_id)                                

  if Step_Clamp = 1
    wait(WC_Open_Delay)                                    
  endif
  
  if XY_Step * Z_Step  > 0.0

    calc MOTION_ID motion_id 1                             
     
    math cont_thresh_2  = Contact_Threshold_2a
    if Z_ContactDetectMode2 = 2 
      math fs_contact_detect = 1   
    else
      math fs_contact_detect = 0   
    endif
    math fs_force_feedback = 0

    calc(FORCE_SENSOR_USAGE,fs_contact_detect,fs_force_feedback,C/V_2,forceSensorTime,Force_Profiling_2,       Adj_Initial_Force_2,Force_2,Sec_Equ_FF,cont_thresh_2 ,max_fs_force)
    calc(MIN_TIP_TIMES,C/V_2,0 ,fs_contact_detect,fs_force_feedback,trans_time,look_delay,detect_delay,1 )
    math tempr3  = trans_time + look_delay + detect_delay * C/V_2 / zenc_res_32 
    math tempr3  = tempr3  + z_pos_2 
    limits new_ctip2  tempr3  new_ctip2 
    io(forceSensor, fs_contact_detect, FsThreshold_2, fs_force_feedback, C/V_2, 1 )
                                                           
    if Step_Clamp > 1
      event_ena(Z_SEEK, motion_id, FIRE_TRIGGER, 0.0, TRG_CLMP_OPEN)
    else
      event_ena(Z_SEEK, motion_id)                         
    endif
  
    io(contact_detect_mode, 0 )                   
  
    event_ena(Z_CONTACT_ANGLE, no_motion_id)

    move tal X motion_id 0  1  1.0 0 NO_EVENT x_pos2  mot_tab_1 BONDSITE x_pos2  0.0       0.0 0.0 0.0 FF_NORMAL Step_Speed LINK
    move tal Y motion_id 0  1  1.0 0 NO_EVENT y_pos2  mot_tab_1 BONDSITE y_pos2  0.0       0.0 0.0 0.0 FF_NORMAL Step_Speed LINK
    move tal Z motion_id 0  1  1.0 0 NO_EVENT new_ctip2  mot_tab_1 ESTOP    z_pos_2  C/V_2       0.0 0.0 0.0 FF_NORMAL Step_Speed GO_VEC
 
  else  
    if XY_Step > 0.0
      calc MOTION_ID motion_id 1      
      move pap  X motion_id 0  1  1.0 0 XY_JAM x_pos2  poly_tab_1_no_cv  FF_NORMAL         Step_Speed StepXY_filter  LINK
      move pap  Y motion_id 0  1  1.0 0 XY_JAM y_pos2  poly_tab_1_no_cv  FF_NORMAL         Step_Speed StepXY_filter  GO_VEC
      await(XY_JAM, motion_id)                          
    endif  

    if Step_Clamp > 1
      io(open_w_clamp,0.0)                              
    endif  

    math new_ctip2  = new_ctip2  - 1.0                    

    math cont_thresh_2  = Contact_Threshold_2a
    if Z_ContactDetectMode2 = 2 
      math fs_contact_detect = 1   
    else
      math fs_contact_detect = 0   
    endif
    math fs_force_feedback = 0
     
    calc(FORCE_SENSOR_USAGE,fs_contact_detect,fs_force_feedback,C/V_2,forceSensorTime,Force_Profiling_2,       Adj_Initial_Force_2,Force_2,Sec_Equ_FF,cont_thresh_2 ,max_fs_force)
    calc(MIN_TIP_TIMES,C/V_2,0 ,fs_contact_detect,fs_force_feedback,trans_time,look_delay,detect_delay,1 )
    math tempr3  = trans_time + look_delay + detect_delay * C/V_2 / zenc_res_32 
    math tempr3  = tempr3  + z_pos_2 
    limits new_ctip2  tempr3  new_ctip2 
    io(forceSensor, fs_contact_detect, FsThreshold_2, fs_force_feedback, C/V_2, 1 )
  
    io(contact_detect_mode, 0 )                      

    calc MOTION_ID motion_id 1                          
    move tal Z motion_id 0  1  1.0 0 Z_SEEK new_ctip2  mot_tab_1 UNSPECIFIED C/V_2 0.0 0.0       0.0 FF_NORMAL Step_Speed GO
 endif  
endif

io(usg_freq,USG_Freq_2)

#End of FILE: GENERIC.Include_Approach.PDL

math approach_mode = 2nd_Approach                 

##########################################################################################################
#FILE: GENERIC.Include_2ndBond.PDL  VERSION: 1.64  DATE: 01/17/07  TIME: 14:35:38

##########################################################################################################
#FILE: GENERIC.Include_USGTime2.PDL  VERSION: 1.12  DATE: 09/12/06  TIME: 20:57:02

math frc_inittime = Initial_Force_Time_2  * Force_Profiling_2 
math frc_ramptime = Force_Ramp_Time_2 * Force_Profiling_2 

math usgPreDelay = USG_Pre-Delay_2a

if stitch_mode <= 1
  if Contact_Angle * Contact_Offset < 0.0
    math usgPreDelay = minXY_ATX1P  * 1000 + usgPreDelay                    
  endif
  
endif

math DACperGram  = 100.0grams - 0.0grams / 100.0                         

math hifrc_fctr  = 0.0
math hifrc_timebase = 4.0 * 10.0                                     
math hifrc_threshold = DACperGram * hifrclimit + 0.0grams            

math hifrcflag = 0                                                   
math hifrcscrub = 1                                                  

math usgPreDelay = usgPreDelay / 1000 / cpu2_clock_16                
math usgtime = USGbondtime2 / USG_clocks_DSP                       

math initialForceTime = frc_inittime * usgtime / cpu2_clock_16       

if Force_Profiling_2  = 1                                                  
  if Adj_Initial_Force_2 > hifrc_threshold                            
    math IBFtime = hifrc_fctr * Adj_Initial_Force_2 + hifrc_timebase / cpu2_clock_16 
    limits initialForceTime 0 IBFtime                                 
    math IBFpctTime = initialForceTime / IBFtime                      
    math hifrcflag = 1
    math hifrcscrub = 0                                               
  else
    math IBFpctTime = 0.0
  endif
else
  math IBFpctTime = 0.0
endif
 
math bondForceTime = usgtime / cpu2_clock_16  - initialForceTime + usgPreDelay
limits bondForceTime 0 bondForceTime

if Adj_Force_2 > hifrc_threshold                                      
  math FBFtime = hifrc_fctr * Adj_Force_2 + hifrc_timebase - USG_RingDown_2 / cpu2_clock_16 
  math FBFtime = 1.0 - IBFpctTime * FBFtime                           
  limits bondForceTime 0 FBFtime                    
  math hifrcflag = 2
  math hifrcscrub = 0                               
endif
  
if Stitch_Option = 0

  math tail_scrub = 1
  
elseif stitch_mode >= 3
  math tail_scrub = 1
else
  math tail_scrub = 0
endif

  if Tail_Scrub_Mode * tail_scrub = 2

    math forceTimeAdder = minXY_ATX1P  / cpu2_clock_16               
    math forceTimeAdder = forceTimeAdder - bondForceTime           

    math fdcIBFlimit = initialForceTime * cpu2_clock_16  * -1.0   
    math FDC_timeoff = Tail_ScrubTime_Offset 
    limits FDC_timeoff fdcIBFlimit 100.0
 
    if FDC_timeoff < 0.0
       
      math forceTimeAdder = FDC_timeoff / cpu2_clock_16  + forceTimeAdder
    endif

    if forceTimeAdder > 0.0                                        
 
      if hifrcflag <= 1
        math bondForceTime = bondForceTime + forceTimeAdder        
        math forceTimeAdder = forceTimeAdder * -1.0                
        limits forceTimeAdder 0 1000
      else

        if FBFtime - bondForceTime >= forceTimeAdder
          math bondForceTime = bondForceTime + forceTimeAdder      
          math forceTimeAdder = forceTimeAdder * -1.0              
          limits forceTimeAdder 0 1000
        else

          if FDC_timeoff < 0.0
            math forceTimeAdder = FDC_timeoff / cpu2_clock_16  - forceTimeAdder  
          else
            math forceTimeAdder = forceTimeAdder * -1.0
          endif

          if forceTimeAdder < fdcIBFlimit
            math Tail_ScrubOffset_Mode  = 0                                      
          endif

        endif
      endif
    else
      math forceTimeAdder = forceTimeAdder * -1.0                  
      limits forceTimeAdder 0 1000
    endif

    math forceTimeAdder = forceTimeAdder * cpu2_clock_16          

    limits FDC_timeoff fdcIBFlimit forceTimeAdder                  
  endif

if hifrcflag > 0                                      
  math usgtime = initialForceTime + bondForceTime - usgPreDelay * cpu2_clock_16   
  math USGbondtime2 = usgtime * USG_clocks_DSP                      
endif

math frcRampLimit = initialForceTime + bondForceTime
math frcRampLimit = initialForceTime / frcRampLimit
math frcRampLimit = 1.0 - frcRampLimit                                 
math bondForceTime = USG_RingDown_2 / cpu2_clock_16  + bondForceTime  

limits frc_ramptime 0.0 frcRampLimit                                   

math frcRmp2Time = frc_ramptime * usgtime / cpu2_clock_16             

math frcRmp3Time  = 0.0
math frcRmp3Slope = 0.0
math Seg3_Force = Adj_Force_2                                          
math Seg3_ForceTime = 0.0                                              
  
if Tail_Scrub_Mode * tail_scrub = 2
   
  math bondForceTime = USG_RingDown_2 / cpu2_clock_16  * -1.0 + bondForceTime
  math frcRmp3Time = Scrub_Force_Ramp_Down_2 + 4 / cpu2_clock_16      
  math frcRmp3Slope = Tail_Scrub_Force - Adj_Force_2 / frcRmp3Time     

  math Seg3_Force = Tail_Scrub_Force

  math Seg3_ForceTime = minXY_ATX1P  * Tail_Scrub_Steps                   
  math tempr8 = 1.0 / Tail_Step_Speed - 1.0 * minXY_ATX1P                 
  math Seg3_ForceTime = Tail_Scrub_Steps - 1.0 * tempr8 + Seg3_ForceTime  
   
  math Seg3_ForceTime = Tail_Scrub_Steps - 1.0 * tail_step_delay + Seg3_ForceTime / cpu2_clock_16 

elseif Tail_Scrub_Amp * tail_scrub > 0
  
  if Tail_Scrub_Phase = 0
     
    math scrub_phase = 0                                                  
    math tail_x_scrub = x_ratio * Tail_Scrub_Amp * -1.0                   
    math tail_y_scrub = y_ratio * Tail_Scrub_Amp                          
  elseif Tail_Scrub_Phase = 1
     
    math scrub_phase = 0                                                  
    math tail_x_scrub = y_ratio * Tail_Scrub_Amp                          
    math tail_y_scrub = x_ratio * Tail_Scrub_Amp                          
  else
     
    math scrub_phase = 90                                                 
    math tail_x_scrub = Tail_Scrub_Amp                                    
    math tail_y_scrub = Tail_Scrub_Amp                                    
  endif

  calc(XY_SCRUB_TIME, scrub_time, scrub_phase_delay, scrub_phase,       Tail_Scrub_Amp, Tail_Scrub_Freq, Tail_Scrub_Cycles)

  math tempr7 = 0.0

  if Tail_Scrub_Mode * Tail_Scrub_Offset != 0
    calc(XY_MOTION_TIME, tempr7, Tail_Scrub_Offset, 1.0, 0)
    math tempr7 = tempr7 / 1000
  endif

  if Tail_Scrub_Mode = 1
     
    math bondForceTime = USG_RingDown_2 / cpu2_clock_16  * -1.0 + bondForceTime
    math frcRmp3Time = Scrub_Force_Ramp_Down_2 + 4 / cpu2_clock_16       
    math frcRmp3Slope = Tail_Scrub_Force - Adj_Force_2 / frcRmp3Time      
    math Seg3_Force = Tail_Scrub_Force
    math Seg3_ForceTime = scrub_time + tempr7 / cpu2_clock_16            
    if tail_scrub_pwr + tail_scrub_curr + tail_scrub_volt > 0.0                                                
      math Seg3_ForceTime = USG_RingDown_2 / cpu2_clock_16  + Seg3_ForceTime
    endif
  endif
endif
 
if Tail_PostStep_Force > hifrc_threshold
  math tempr7 = hifrc_timebase - Tail_PostStep_Ramp - 4 * 1000
  if Tail_PostStep_USG > 0.0
    math tempr7 = USG_RingDown_2 * 1000 * -1.0 + tempr7
  endif
  limits Tail_PostStep_Time 0.0 tempr7
endif
  
if Tail_Scrub_Mode * tail_scrub = 2
  if Tail_PostStep_Force <= Minimum_Force_2 
       
      math frcRmp4Time  = 0.0
      math frcRmp4Slope = 0.0
      math frcRmp5Time  = 0.0
      math frcRmp5Slope = 0.0

      math frcRmp6Time = Force_Ramp_Down_2  / cpu2_clock_16                  
      limits frcRmp6Time 1.0 frcRmp6Time
      math frcRmp6Slope = Minimum_Force_2  - Tail_Scrub_Force / frcRmp6Time    
       
      math Seg4_Force = Tail_Scrub_Force
      math Seg5_Force = Tail_Scrub_Force
     
    if tail_scrub_pwr + tail_scrub_curr + tail_scrub_volt > 0.0                                            
      math Seg3_ForceTime = USG_RingDown_2 / cpu2_clock_16  + Seg3_ForceTime
    endif

    math Seg4_ForceTime = 0                                             
    math Seg5_ForceTime = 0                                             
  else
       
      math frcRmp4Time = Tail_PostStep_Ramp + 4 / cpu2_clock_16        
       
      math frcRmp4Slope = Tail_PostStep_Force - Tail_Scrub_Force / frcRmp4Time

      math frcRmp5Time  = 0.0
      math frcRmp5Slope = 0.0

      math frcRmp6Time = Force_Ramp_Down_2  / cpu2_clock_16                  
      limits frcRmp6Time 1.0 frcRmp6Time
       
      math frcRmp6Slope = Minimum_Force_2  - Tail_PostStep_Force / frcRmp6Time
       
      math Seg4_Force = Tail_PostStep_Force
      math Seg5_Force = Tail_PostStep_Force
     
    math Seg4_ForceTime = Tail_PostStep_Time / 1000 / cpu2_clock_16 
    if Tail_PostStep_USG > 0.0
      math Seg4_ForceTime = USG_RingDown_2 / cpu2_clock_16  + Seg4_ForceTime
    endif
    math Seg5_ForceTime = 0                                             
  endif
else  
     
    math frcRmp4Time  = 0.0
    math frcRmp4Slope = 0.0
    math frcRmp5Time  = 0.0
    math frcRmp5Slope = 0.0

    math frcRmp6Time = Force_Ramp_Down_2  / cpu2_clock_16                    
    limits frcRmp6Time 1.0 frcRmp6Time

    if Tail_Scrub_Amp * Tail_Scrub_Mode * tail_scrub > 0
      math frcRmp6Slope = Minimum_Force_2  - Tail_Scrub_Force / frcRmp6Time    
       
      math Seg4_Force = Tail_Scrub_Force
      math Seg5_Force = Tail_Scrub_Force
    else
      math frcRmp6Slope = Minimum_Force_2  - Adj_Force_2 / frcRmp6Time         
       
      math Seg4_Force = Adj_Force_2
      math Seg5_Force = Adj_Force_2
    endif
   
  math Seg4_ForceTime = 0                                               
  math Seg5_ForceTime = 0                                               
  
endif

math frcRmpDwnDly = Force_Ramp_Down_2  * 1000 + Extra_Rmp_Dwn_2                

math bondForceTime = bondForceTime - frcRmp2Time                        
limits bondForceTime 0 bondForceTime                                    
                                                                        
if USG_Init_Time_2 > 0.0

  if stitch_mode = 0
    if Tail_Scrub_Mode < 2

      math USGinitCPlev = Adj_USG_Power_2 * USG_Init_Level_2              
      math USGinitCVlev = Adj_USG_Volts_2 * USG_Init_Level_2              
      math USGinitCClev = Adj_USG_Current_2 * USG_Init_Level_2            
      math USG_inittime2 = USGbondtime2 * USG_Init_Time_2                
      math USGbondtime2 = USGbondtime2 - USG_inittime2                  
      math USG_Profile_2a = 0                                             

      math bond_ramp_up_2 = 0.0

    endif
  endif

else
  math bond_ramp_up_2 = Ramp_Up_Time_2a * USGbondtime2
endif
                                                                 
math bond_ramp_dn_2 = Ramp_Down_Time_2a * USGbondtime2
math max_burst_time = USGbondtime2 * 0.5                        
math burst_time_2 = Burst_Time_2a * USG_clocks_DSP             
limits burst_time_2 0.0 max_burst_time                           
math burst_level_2 = Burst_Level_2a * 10.0 * 10.0                

if USG_Profile_2a = 0
  math USGbondtime2 = USGbondtime2 - bond_ramp_up_2 - bond_ramp_dn_2
else
  if USG_Profile_2a = 2
    math USGbondtime2 = USGbondtime2 - burst_time_2 - bond_ramp_dn_2
  endif
endif

if PreBleed_Curr2 > 0.0
  math Bleed_Current_2 = PreBleed_Curr2
endif

calc(USG_PROFILE, usg_seg_count, usg_seg1_time, usg_seg1_end, usg_seg2_time,     usg_seg2_end, usg_seg3_time, usg_seg3_end, usg_seg4_time, usg_seg4_end,     USG_Profile_2a, USGbondtime2, bond_ramp_up_2, bond_ramp_dn_2,      burst_level_2, burst_time_2, usg_dummy0, usg_dummy0, usg_dummy0, usg_dummy0, usg_dummy0)

if stitch_mode != 3
  math scrub_total = Sec_Scrub2_Amp * Sec_Scrub_Delay_Mode    

  calc FIRST_BOND_EQU scrub_test scrub_total 0                

  math tempr11  = 1000 / 2 + 1000 + 1000 + 1000
  math scrub_usg_delay = 4000 + 4000 * scrub_test             
   
  math scrub_usg_delay = Sec_Scrub_Cycles2 - 1 * tempr11  + scrub_usg_delay
   
  math scrub_usg_delay = scrub_usg_delay * scrub_test * hifrcscrub * Force_Profiling_2 
   
  math initialForceTime = initialForceTime + scrub_force_time * Force_Profiling_2 
else

  math scrub_usg_delay = 0.0

endif

if PreBleed_Curr2 = 0.0
  math BleedLevCP = USG_Power_2 * PreBleed_2                  
  math BleedLevCC = USG_Current_2 * PreBleed_2
  math BleedLevCV = USG_Volts_2 * PreBleed_2
endif

math usgPreDelay = USG_Pre-Delay_2a + scrub_usg_delay

#End of FILE: GENERIC.Include_USGTime2.PDL

math fs_contact_detect = 0.0
math cv_mode = 0.0
math fs_force_feedback = 0.0

calc(MIN_TIP_TIMES,C/V_2,cv_mode,fs_contact_detect,fs_force_feedback,trans_time,look_delay,detect_delay,1 )

math tempr5 = -1 * 2

io(cpu2,Contact_Threshold_2a, dampTime, Damp_Gain_2 , Post_Gain_2 , 0.0, 0.0, 1.0,   0, x_scrub, y_scrub, cycles+phase, frcRmp1Slope, frcRmp1Time, Adj_Initial_Force_2, initialForceTime,   frcRmp2Slope, frcRmp2Time, Adj_Force_2, bondForceTime, frcRmp3Slope, frcRmp3Time, Seg3_Force, Seg3_ForceTime,   frcRmp4Slope, frcRmp4Time, Seg4_Force, Seg4_ForceTime, frcRmp5Slope, frcRmp5Time, Seg5_Force, Seg5_ForceTime,   frcRmp6Slope, frcRmp6Time, Minimum_Force_2 , look_delay , 0, 0.0, 0, tempr5)

io( usg_prep, Adj_USG_Power_2, Adj_USG_Current_2, Adj_USG_Volts_2,    USG_Mode_2, Bleed_Power_2, Bleed_Current_2, Bleed_Voltage_2,    usg_seg_count, usg_seg1_time, usg_seg1_end, usg_seg2_time, usg_seg2_end,    usg_seg3_time,usg_seg3_end, usg_seg4_time, usg_seg4_end,    usg_dummy0, usg_dummy0, usg_dummy0, usg_dummy0, usg_dummy0, usg_dummy0 )
    
      math tempr1 = approach_mode + stitch_mode
    
if tempr1 = 0
  if WBMS_enable
      await(WBMS_SAMPLE, no_motion_id)                           
  endif
endif

await(Z_SEEK, motion_id)                                         

if PreBleed_Curr2 = 0.0
  io(usg_on, BleedLevCP, BleedLevCC, BleedLevCV, USG_Mode_2, 3)  
else
  io(usg_on, 0, PreBleed_Curr2, 0, USG_Mode_2, 3)                
endif

event_ena(Z_CONTACT, no_motion_id)                               

event_ena(USG_PRO_COMPLETE, no_motion_id)                        
  
if stitch_mode <= 2
    
  if approach_mode = 0

    await(Z_CONTACT_ANGLE, no_motion_id)                             
    
  elseif XY_Step * Z_Step > 0.0
    await(Z_CONTACT_ANGLE, no_motion_id)                             
  endif
    
endif

await(Z_CONTACT, no_motion_id)                                       

if stitch_mode <= 1
  if Contact_Angle * Contact_Offset < 0.0
    math tempr7 = Contact_Offset * x_ratio * -1.0
    math tempr8 = Contact_Offset * y_ratio * -1.0

    calc MOTION_ID motion_id 1        
     
    move prp  X motion_id 0  1  1.0 0 XY_JAM tempr7 poly_tab_1_no_cv  FF_NORMAL 1.0 LINK
    move prp  Y motion_id 0  1  1.0 0 XY_JAM tempr8 poly_tab_1_no_cv  FF_NORMAL 1.0 GO_VEC
    await(XY_JAM, motion_id)          
  endif
  
endif

wait(usgPreDelay)                                                
                                                                 
if USG_Init_Time_2 > 0.0

  if stitch_mode = 0
    if Tail_Scrub_Mode < 2

    io(usg_on,USGinitCPlev,USGinitCClev,USGinitCVlev,USG_Mode_2, 3)  
    math tempr12 = USG_inittime2 / USG_clocks_DSP  * 1000          
    wait(tempr12)

    endif
  endif

endif

io(usg_on, 0.0, 0.0, 0.0, USG_Mode_2, 1)                         

if Tail_Scrub_Mode * tail_scrub = 2
  math usgPreDelay = usgPreDelay / 1000 / cpu2_clock_16       
  math tempr9 = Tail_ScrubTime_Offset / cpu2_clock_16  + initialForceTime - usgPreDelay

  limits tempr9 0.0 maxDelay
  math tempr9 = tempr9 * cpu2_clock_16  * 1000

  wait(tempr9)                                                 

  if Tail_Scrub_Offset != 0.0                                  
    calc AUX_MOTION_ID aux_motion_id 1                         

    if Tail_ScrubOffset_Mode = 0                               
      math tempr7 = Tail_Scrub_Offset * x_ratio
      math tempr8 = Tail_Scrub_Offset * y_ratio
      move prp  X aux_motion_id 0  1  1.0 0 XY_JAM tempr7 poly_tab_1_no_cv  FF_NORMAL 1.0         0  LINK    
      move prp  Y aux_motion_id 0  1  1.0 0 XY_JAM tempr8 poly_tab_1_no_cv  FF_NORMAL 1.0         0  GO_VEC
      await(XY_JAM, aux_motion_id)
    else
                                                               
      calc ABS_VALUE tempr8 Tail_Scrub_Offset                  
      if Tail_ScrubOffset_Mode = 1                             
        math tempr8 = tempr8 * -1.0
        move prp  Y aux_motion_id 0  1  1.0 0 Y_JAM tempr8 poly_tab_1_no_cv  FF_NORMAL 1.0           0  GO
        await(Y_JAM, aux_motion_id)
      elseif y_ratio < 0.0                                     
        math tempr8 = tempr8 * y_ratio
        move prp  Y aux_motion_id 0  1  1.0 0 Y_JAM tempr8 poly_tab_1_no_cv  FF_NORMAL 1.0           0  GO
        await(Y_JAM, aux_motion_id)
      endif
    endif  
  endif  
endif  

input prs_operation perform_lookahead lookahead_id
if perform_lookahead
  event_ena(CAPTURE_COMPLETE, lookahead_id)
  io(prs_capture, lookahead_id)
endif

math que_ahead = 1						 
  
if Stitch_Option = 0
  calc PREV_WIRE tempr6 Tail_Pull_Test
  if tempr6
    if Tail_Pull_Enable
      math que_ahead = 0						 
    endif
  endif
elseif stitch_mode > 0
  if stitch_mode < 4
    calc PREV_WIRE tempr6 Tail_Pull_Test
    if tempr6
      if Tail_Pull_Enable
        math que_ahead = 0						 
      endif
    endif
  endif
endif

if z_pos_update = 1

  update_ena(Z_POSITION,ctip2)                                   

    update(ctip2,Z_POSITION,0.0,0.0)                             

elseif stitch_mode > 0

  update_ena(Z_POSITION,ctip2)                                   

endif

calc MOTION_ID motion_id 1                      
  
if Stitch_Option = 0
   
  event_ena(TIME_BRK, motion_id, Z_END_LINK, Tail_Close_Time, TRG_CLMP_CLOS)
  
elseif stitch_mode = 0
  math que_ahead = 0                            
elseif stitch_mode >= 3
   
  event_ena(TIME_BRK, motion_id, Z_END_LINK, Tail_Close_Time, TRG_CLMP_CLOS)
endif

if fs_contact_detect > 0
  io(verifyFsDetect)
endif

if Tail_Scrub_Mode * tail_scrub = 2                              
  if Tail_Step_Offset != 0.0
    math que_ahead = 0
  endif
else
  
  if Tail_Scrub_Amp + Stitch_Option > 0                          
  
    math que_ahead = 0
  endif
endif

if que_ahead = 0
  await(USG_PRO_COMPLETE, no_motion_id)                          
    
if Stitch_Option = 0
  calc PREV_WIRE tempr6 Tail_Pull_Test
  if tempr6
    if Tail_Pull_Enable
      update_await(TAIL_PULL, tail, 120000)  						 
    endif
  endif
elseif stitch_mode > 0
  if stitch_mode < 4
    calc PREV_WIRE tempr6 Tail_Pull_Test
    if tempr6
      if Tail_Pull_Enable
        update_await(TAIL_PULL, tail, 120000)  						 
      endif
    endif
  endif
endif

  if stitch_mode = 0
    io(trigger_pt,4)                                             
  endif
  
  if perform_lookahead
    await(CAPTURE_COMPLETE, lookahead_id)
  endif
  
endif

if Tail_Scrub_Mode * tail_scrub = 2
  if Tail_Step_Offset != 0.0
    math tempr7 = Scrub_Force_Ramp_Down_2 + 4 * 1000
    wait(tempr7)                                                 
    math tail_dist_total = Tail_Step_Offset
    math tail_step_cnt = Tail_Scrub_Steps

    io(usg_on, tail_scrub_pwr, tail_scrub_curr, tail_scrub_volt, usg_mode, 3)     

    math tail_step_dist = Tail_Step_Offset / Tail_Scrub_Steps
    math tempr7 = tail_step_dist * x_ratio * -1.0
    math tempr8 = tail_step_dist * y_ratio * -1.0
    math tempr9 = 1.0 / Tail_Step_Speed - 1.0 * minXY_ATX1P  * 1000

    if tail_step_cnt = 10
      calc AUX_MOTION_ID aux_motion_id 1                         
      move prp  X aux_motion_id 0  1  1.0 0 XY_JAM tempr7 poly_tab_1_no_cv  FF_NORMAL 1.0         0  LINK                                            
      move prp  Y aux_motion_id 0  1  1.0 0 XY_JAM tempr8 poly_tab_1_no_cv  FF_NORMAL 1.0         0  GO_VEC
      await(XY_JAM, aux_motion_id)
      math tail_step_cnt = tail_step_cnt - 1
      math tail_dist_total = tail_dist_total - tail_step_dist

      wait(tempr9)
    endif

    if tail_step_cnt = 9
      calc AUX_MOTION_ID aux_motion_id 1                         
      move prp  X aux_motion_id 0  1  1.0 0 XY_JAM tempr7 poly_tab_1_no_cv  FF_NORMAL 1.0         0  LINK    
      move prp  Y aux_motion_id 0  1  1.0 0 XY_JAM tempr8 poly_tab_1_no_cv  FF_NORMAL 1.0         0  GO_VEC
      await(XY_JAM, aux_motion_id)
      math tail_step_cnt = tail_step_cnt - 1
      math tail_dist_total = tail_dist_total - tail_step_dist

      wait(tempr9)
    endif

    if tail_step_cnt = 8
      calc AUX_MOTION_ID aux_motion_id 1       
      move prp  X aux_motion_id 0  1  1.0 0 XY_JAM tempr7 poly_tab_1_no_cv  FF_NORMAL 1.0         0  LINK                          
      move prp  Y aux_motion_id 0  1  1.0 0 XY_JAM tempr8 poly_tab_1_no_cv  FF_NORMAL 1.0         0  GO_VEC
      await(XY_JAM, aux_motion_id)
      math tail_step_cnt = tail_step_cnt - 1
      math tail_dist_total = tail_dist_total - tail_step_dist

      wait(tempr9)
    endif

    if tail_step_cnt = 7
      calc AUX_MOTION_ID aux_motion_id 1       
      move prp  X aux_motion_id 0  1  1.0 0 XY_JAM tempr7 poly_tab_1_no_cv  FF_NORMAL 1.0         0  LINK                          
      move prp  Y aux_motion_id 0  1  1.0 0 XY_JAM tempr8 poly_tab_1_no_cv  FF_NORMAL 1.0         0  GO_VEC
      await(XY_JAM, aux_motion_id)
      math tail_step_cnt = tail_step_cnt - 1
      math tail_dist_total = tail_dist_total - tail_step_dist

      wait(tempr9)
    endif

    if tail_step_cnt = 6
      calc AUX_MOTION_ID aux_motion_id 1       
      move prp  X aux_motion_id 0  1  1.0 0 XY_JAM tempr7 poly_tab_1_no_cv  FF_NORMAL 1.0         0  LINK                          
      move prp  Y aux_motion_id 0  1  1.0 0 XY_JAM tempr8 poly_tab_1_no_cv  FF_NORMAL 1.0         0  GO_VEC
      await(XY_JAM, aux_motion_id)
      math tail_step_cnt = tail_step_cnt - 1
      math tail_dist_total = tail_dist_total - tail_step_dist

      wait(tempr9)
    endif

    if tail_step_cnt = 5
      calc AUX_MOTION_ID aux_motion_id 1       
      move prp  X aux_motion_id 0  1  1.0 0 XY_JAM tempr7 poly_tab_1_no_cv  FF_NORMAL 1.0         0  LINK                          
      move prp  Y aux_motion_id 0  1  1.0 0 XY_JAM tempr8 poly_tab_1_no_cv  FF_NORMAL 1.0         0  GO_VEC
      await(XY_JAM, aux_motion_id)
      math tail_step_cnt = tail_step_cnt - 1
      math tail_dist_total = tail_dist_total - tail_step_dist

      wait(tempr9)
    endif

    if tail_step_cnt = 4
      calc AUX_MOTION_ID aux_motion_id 1       
      move prp  X aux_motion_id 0  1  1.0 0 XY_JAM tempr7 poly_tab_1_no_cv  FF_NORMAL 1.0         0  LINK                          
      move prp  Y aux_motion_id 0  1  1.0 0 XY_JAM tempr8 poly_tab_1_no_cv  FF_NORMAL 1.0         0  GO_VEC
      await(XY_JAM, aux_motion_id)
      math tail_step_cnt = tail_step_cnt - 1
      math tail_dist_total = tail_dist_total - tail_step_dist

      wait(tempr9)
    endif

    if tail_step_cnt = 3
      calc AUX_MOTION_ID aux_motion_id 1       
      move prp  X aux_motion_id 0  1  1.0 0 XY_JAM tempr7 poly_tab_1_no_cv  FF_NORMAL 1.0         0  LINK                          
      move prp  Y aux_motion_id 0  1  1.0 0 XY_JAM tempr8 poly_tab_1_no_cv  FF_NORMAL 1.0         0  GO_VEC
      await(XY_JAM, aux_motion_id)
      math tail_step_cnt = tail_step_cnt - 1
      math tail_dist_total = tail_dist_total - tail_step_dist

      wait(tempr9)
    endif

    if tail_step_cnt = 2
      calc AUX_MOTION_ID aux_motion_id 1       
      move prp  X aux_motion_id 0  1  1.0 0 XY_JAM tempr7 poly_tab_1_no_cv  FF_NORMAL 1.0         0  LINK                          
      move prp  Y aux_motion_id 0  1  1.0 0 XY_JAM tempr8 poly_tab_1_no_cv  FF_NORMAL 1.0         0  GO_VEC
      await(XY_JAM, aux_motion_id)
      math tail_step_cnt = tail_step_cnt - 1
      math tail_dist_total = tail_dist_total - tail_step_dist

      wait(tempr9)
    endif

    if tail_step_cnt = 1
      math tempr7 = tail_dist_total * x_ratio * -1.0
      math tempr8 = tail_dist_total * y_ratio * -1.0
      calc AUX_MOTION_ID aux_motion_id 1       
      move prp  X aux_motion_id 0  1  1.0 0 XY_JAM tempr7 poly_tab_1_no_cv  FF_NORMAL 1.0         0  LINK                          
      move prp  Y aux_motion_id 0  1  1.0 0 XY_JAM tempr8 poly_tab_1_no_cv  FF_NORMAL 1.0         0  GO_VEC
      await(XY_JAM, aux_motion_id)
      math tail_step_cnt = 0
      math tail_dist_total = 0.0
    endif

    io(usg_off)

    if Tail_PostStep_Force > Minimum_Force_2 
      math tempr7 = Tail_PostStep_Ramp + 4 * 1000
      wait(tempr7)                                               

      io(usg_on, 0, Tail_PostStep_USG, 0, 2, 3)                  

      wait(Tail_PostStep_Time)
      io(usg_off)

      if Tail_PostStep_USG > 0.0
        math tempr7 = USG_RingDown_2 * 1000
        wait(tempr7)
      endif
    elseif tail_scrub_pwr + tail_scrub_curr + tail_scrub_volt > 0.0
      math tempr7 = USG_RingDown_2 * 1000
      wait(tempr7)
    endif

    wait(frcRmpDwnDly)                                           

  endif   

elseif Tail_Scrub_Amp * tail_scrub > 0

  if Tail_Scrub_Mode = 0
    math tempr7 = USG_RingDown_2 * 1000 + frcRmpDwnDly
    wait(tempr7)                                            

    calc AUX_MOTION_ID aux_motion_id 1                      
    move trp Z  aux_motion_id 0  1  1.0 0 Z_JAM Tail_Scrub_Ht mot_tab_1 FF_NORMAL Tail_Speed       TailXY_filter   GO
    await(Z_JAM,aux_motion_id)
  else
    math tempr7 = Scrub_Force_Ramp_Down_2 + 4 * 1000        
    wait(tempr7)                                            
  endif

  if Tail_Scrub_Offset != 0
    math tempr7 = Tail_Scrub_Offset * x_ratio
    math tempr8 = Tail_Scrub_Offset * y_ratio
    calc AUX_MOTION_ID aux_motion_id 1                      
     
    move prp  X aux_motion_id 0  1  1.0 0 XY_JAM tempr7 poly_tab_1_no_cv  FF_NORMAL 1.0       0  LINK
    move prp  Y aux_motion_id 0  1  1.0 0 XY_JAM tempr8 poly_tab_1_no_cv  FF_NORMAL 1.0       0  GO_VEC
    await(XY_JAM, aux_motion_id)
  endif

  io(usg_on, tail_scrub_pwr, tail_scrub_curr, tail_scrub_volt, usg_mode, 3)    

  calc AUX_MOTION_ID aux_motion_id 1
  event_ena(XY_JAM,aux_motion_id)
  move trs X  aux_motion_id 0  1  1.0 0 NO_EVENT tail_x_scrub table_scrub_sin Tail_Scrub_Freq     Tail_Scrub_Cycles scrub_phase_delay FF_NORMAL 1.0 0  LINK
  move trs Y  aux_motion_id 0  1  1.0 0 NO_EVENT tail_y_scrub table_scrub_sin Tail_Scrub_Freq     Tail_Scrub_Cycles 0.0   FF_NORMAL 1.0 0  GO_VEC
  await(XY_JAM,aux_motion_id)

  io(usg_off)

  if Tail_Scrub_Mode != 0
    if tail_scrub_pwr + tail_scrub_curr + tail_scrub_volt > 0.0
      math tempr7 = USG_RingDown_2 * 1000
      wait(tempr7)
    endif

    wait(frcRmpDwnDly)                                           
  
  endif
else
  math tempr7 = USG_RingDown_2 * 1000 + frcRmpDwnDly
  if que_ahead = 0						 
    wait(tempr7)
  
  endif
endif

export(efo_fired, 0, 1 )                              

calc PASS_VARS 1  que_ahead  tempr7  perform_lookahead  lookahead_id

#End of FILE: GENERIC.Include_2ndBond.PDL

##########################################################################################################
#FILE: GENERIC.Include_Stitch.PDL  VERSION: 1.25  DATE: 02/22/07  TIME: 08:10:22

if Stitch_Option = 1
   
  move prp  Z motion_id 0  1  1.0 0 Z_JAM Z_Rise_Dist poly_tab_1_no_cv  FF_NORMAL Tail_Speed     StitchZ_filter  GO
  await(Z_JAM, motion_id)

  math tempr7 = Tack_Dist * x_ratio 
  math tempr8 = Tack_Dist * y_ratio

  math x_pos = x_pos2 + tempr7
  math y_pos = y_pos2 + tempr8
 
  calc EQUALIZATION tempr13 Sec_Equ_PF x_delta y_delta bond_dist
  math Adj_USG_Power_2 = USG_Power_2 * tempr13 * S_USG_Factor_2
  math Adj_USG_Volts_2 = USG_Volts_2 * tempr13 * S_USG_Factor_2
  math Adj_USG_Current_2 = USG_Current_2 * tempr13 * S_USG_Factor_2
 
  calc EQUALIZATION tempr13 Sec_Equ_FF x_delta y_delta bond_dist
  math Adj_Force_2 = S_Force_2 * tempr13
  math Adj_Initial_Force_2 = S_Init_Force_2 * tempr13

  if Ops_Mode <= 1 
    math Adj_USG_Power_2 = Adj_USG_Power_2 * ReworkUSGRatio_2
    math Adj_USG_Volts_2 = Adj_USG_Volts_2 * ReworkUSGRatio_2
    math Adj_USG_Current_2 = Adj_USG_Current_2 * ReworkUSGRatio_2
    math Adj_Force_2 = Adj_Force_2 * ReworkForceRatio_2
  endif  

  update_await( Z_POSITION,  ctip2 )                               
  input z_pos z_pos_2                                              

if Ops_Mode = 5 
  if z_pos_2 = 800.0 
    math z_pos_2 = Reset_z 
  endif
endif

  math new_ctip2 = Z_Rise_Dist / 2.0 + z_pos_2

  math Z_C/V = S_C/V_2 / cpu2_clock_16  / zenc_res_32 
 
  math USGbondtime2 = S_USG_Time_2         
  math new_c_o = 0.0                        
  math approach_mode = 0                    
  math z_pos_update = 0                     
  math stitch_mode = 3                      
  
##########################################################################################################
#FILE: GENERIC.Include_ForceTime2.PDL  VERSION: 1.14  DATE: 01/05/07  TIME: 08:40:44

math frc_inittime = Initial_Force_Time_2  * Force_Profiling_2 
math frc_ramptime = Force_Ramp_Time_2 * Force_Profiling_2 

math usgPreDelay = USG_Pre-Delay_2a

if stitch_mode <= 1                                      
  if Contact_Angle * Contact_Offset < 0.0                
    math usgPreDelay = minXY_ATX1P  * 1000 + usgPreDelay    
  endif
  
endif
 
math DACperGram  = 100.0grams - 0.0grams / 100.0                       

math hifrc_fctr  = 0.0
math hifrc_timebase = 4.0 * 10.0                                       

math hifrc_threshold = DACperGram * hifrclimit + 0.0grams              

math hifrcflag = 0                                                     
math hifrcscrub = 1                                                    

math usgPreDelay = usgPreDelay / 1000 / cpu2_clock_16                 
math usgtime = USGbondtime2 / USG_clocks_DSP                        

math initialForceTime = frc_inittime * usgtime / cpu2_clock_16       

if Force_Profiling_2  = 1                                                   
  if Adj_Initial_Force_2 > hifrc_threshold                             
    math IBFtime = hifrc_fctr * Adj_Initial_Force_2 + hifrc_timebase / cpu2_clock_16 
    limits initialForceTime 0 IBFtime                                  
    math IBFpctTime = initialForceTime / IBFtime                       
    math hifrcflag = 1
    math hifrcscrub = 0                                                
  else
    math IBFpctTime = 0.0
  endif
else
  math Adj_Initial_Force_2 = Adj_Force_2                          
  math IBFpctTime = 0.0
endif
                                                                       
  math bondForceTime = usgtime / cpu2_clock_16  - initialForceTime + usgPreDelay
  limits bondForceTime 0 bondForceTime

if Adj_Force_2 > hifrc_threshold                                       
  math FBFtime = hifrc_fctr * Adj_Force_2 + hifrc_timebase - USG_RingDown_2 / cpu2_clock_16 
  math FBFtime = 1.0 - IBFpctTime * FBFtime                            
  limits bondForceTime 0 FBFtime                    
  math hifrcflag = 2
  math hifrcscrub = 0                                                  
endif
  
math forceSensorTime = bondForceTime                                   
  
if Stitch_Option = 0

  math tail_scrub = 1
  
elseif stitch_mode >= 3
  math tail_scrub = 1
else
  math tail_scrub = 0
endif

  if Tail_Scrub_Mode * tail_scrub = 2

    math forceTimeAdder = minXY_ATX1P  / cpu2_clock_16                
    math forceTimeAdder = forceTimeAdder - bondForceTime            

    math fdcIBFlimit = initialForceTime * cpu2_clock_16  * -1.0    
    math FDC_timeoff = Tail_ScrubTime_Offset 
    limits FDC_timeoff fdcIBFlimit 100.0
 
    if FDC_timeoff < 0.0
       
      math forceTimeAdder = FDC_timeoff / cpu2_clock_16  + forceTimeAdder
    endif

    if forceTimeAdder > 0.0                                         
 
      if hifrcflag <= 1
        math bondForceTime = bondForceTime + forceTimeAdder         
        math forceTimeAdder = forceTimeAdder * -1.0                 
        limits forceTimeAdder 0 1000
      else

        if FBFtime - bondForceTime >= forceTimeAdder
          math bondForceTime = bondForceTime + forceTimeAdder       
          math forceTimeAdder = forceTimeAdder * -1.0               
          limits forceTimeAdder 0 1000
        else

          if FDC_timeoff < 0.0
            math forceTimeAdder = FDC_timeoff / cpu2_clock_16  - forceTimeAdder    
          else
            math forceTimeAdder = forceTimeAdder * -1.0
          endif

          if forceTimeAdder < fdcIBFlimit
            math Tail_ScrubOffset_Mode  = 0                                       
          endif

        endif
      endif
    else
      math forceTimeAdder = forceTimeAdder * -1.0                   
      limits forceTimeAdder 0 1000
    endif

    math forceTimeAdder = forceTimeAdder * cpu2_clock_16           

    limits FDC_timeoff fdcIBFlimit forceTimeAdder                   
  endif

if hifrcflag > 0                                      
  math usgtime = initialForceTime + bondForceTime - usgPreDelay * cpu2_clock_16   
endif

math frcRampLimit = initialForceTime + bondForceTime
math frcRampLimit = initialForceTime / frcRampLimit
math frcRampLimit = 1.0 - frcRampLimit                                  
math bondForceTime = USG_RingDown_2 / cpu2_clock_16  + bondForceTime   

limits frc_ramptime 0.0 frcRampLimit                                  

math frcRmp2Time = frc_ramptime * usgtime / cpu2_clock_16            
if frcRmp2Time = 0.0
  math frcRmp2Slope = 0.0                                             
else
  math frcRmp2Slope = Adj_Force_2 - Adj_Initial_Force_2 / frcRmp2Time   
endif

math frcRmp3Time  = 0.0
math frcRmp3Slope = 0.0
math Seg3_Force = Adj_Force_2                                         
math Seg3_ForceTime = 0.0                                             

math Post_Gain_2 = Post_Damp_Gain_2
  
  math Post_Gain_2  = 1.0
  
math tail_scrub_pwr  = 0.0                                       
math tail_scrub_curr = 0.0
math tail_scrub_volt = 0.0
   
if Tail_Step_USG > 0.0
  math tail_scrub_curr = Tail_Step_USG                           
  math usg_mode = 2
else
  math tail_scrub_pwr  = USG_Power_2 * Tail_Scrub_USG            
  math tail_scrub_curr = USG_Current_2 * Tail_Scrub_USG
  math tail_scrub_volt = USG_Volts_2 * Tail_Scrub_USG
  math usg_mode = USG_Mode_2
endif

if Tail_Scrub_Mode * tail_scrub = 2
   
  math bondForceTime = USG_RingDown_2 / cpu2_clock_16  * -1.0 + bondForceTime
  math frcRmp3Time = Scrub_Force_Ramp_Down_2 + 4 / cpu2_clock_16        
  math frcRmp3Slope = Tail_Scrub_Force - Adj_Force_2 / frcRmp3Time       
  math Seg3_Force = Tail_Scrub_Force
  math Seg3_ForceTime = minXY_ATX1P  * Tail_Scrub_Steps                     
  math tempr8 = 1.0 / Tail_Step_Speed - 1.0 * minXY_ATX1P                   
  math Seg3_ForceTime = Tail_Scrub_Steps - 1.0 * tempr8 + Seg3_ForceTime   
   
  math Seg3_ForceTime = Tail_Scrub_Steps - 1.0 * tail_step_delay + Seg3_ForceTime / cpu2_clock_16 

elseif Tail_Scrub_Amp * tail_scrub > 0
  
  if Tail_Scrub_Phase = 0
     
    math scrub_phase = 0                                      
    math tail_x_scrub = x_ratio * Tail_Scrub_Amp * -1.0       
    math tail_y_scrub = y_ratio * Tail_Scrub_Amp              
  elseif Tail_Scrub_Phase = 1
     
    math scrub_phase = 0                                      
    math tail_x_scrub = y_ratio * Tail_Scrub_Amp              
    math tail_y_scrub = x_ratio * Tail_Scrub_Amp              
  else
     
    math scrub_phase = 90                                     
    math tail_x_scrub = Tail_Scrub_Amp                        
    math tail_y_scrub = Tail_Scrub_Amp                        
  endif

  calc(XY_SCRUB_TIME, scrub_time, scrub_phase_delay, scrub_phase,       Tail_Scrub_Amp, Tail_Scrub_Freq, Tail_Scrub_Cycles)
     
  math tempr7 = 0.0

  if Tail_Scrub_Mode * Tail_Scrub_Offset != 0
    calc(XY_MOTION_TIME, tempr7, Tail_Scrub_Offset, 1.0, 0)
    math tempr7 = tempr7 / 1000
  endif

  if Tail_Scrub_Mode = 1
     
    math bondForceTime = USG_RingDown_2 / cpu2_clock_16  * -1.0 + bondForceTime
    math frcRmp3Time = Scrub_Force_Ramp_Down_2 + 4 / cpu2_clock_16       
    math frcRmp3Slope = Tail_Scrub_Force - Adj_Force_2 / frcRmp3Time      
    math Seg3_Force = Tail_Scrub_Force
    math Seg3_ForceTime = scrub_time + tempr7 / cpu2_clock_16            
    if tail_scrub_pwr + tail_scrub_curr + tail_scrub_volt > 0.0                                                
      math Seg3_ForceTime = USG_RingDown_2 / cpu2_clock_16  + Seg3_ForceTime
    endif
  endif
endif
 
if Tail_PostStep_Force > hifrc_threshold
  math tempr7 = hifrc_timebase - Tail_PostStep_Ramp - 4 * 1000
  if Tail_PostStep_USG > 0.0
    math tempr7 = USG_RingDown_2 * 1000 * -1.0 + tempr7
  endif
  limits Tail_PostStep_Time 0.0 tempr7
endif
  
if Tail_Scrub_Mode * tail_scrub = 2
  if Tail_PostStep_Force <= Minimum_Force_2 
       
      math frcRmp4Time  = 0.0
      math frcRmp4Slope = 0.0
      math frcRmp5Time  = 0.0
      math frcRmp5Slope = 0.0

      math frcRmp6Time = Force_Ramp_Down_2  / cpu2_clock_16                
      limits frcRmp6Time 1.0 frcRmp6Time                              
      math frcRmp6Slope = Minimum_Force_2  - Tail_Scrub_Force / frcRmp6Time  
       
      math Seg4_Force = Tail_Scrub_Force
      math Seg5_Force = Tail_Scrub_Force
     
    if tail_scrub_pwr + tail_scrub_curr + tail_scrub_volt > 0.0                                            
      math Seg3_ForceTime = USG_RingDown_2 / cpu2_clock_16  + Seg3_ForceTime
    endif

    math Seg4_ForceTime = 0                                             
    math Seg5_ForceTime = 0                                             
  else
       
      math frcRmp4Time = Tail_PostStep_Ramp + 4 / cpu2_clock_16      
       
      math frcRmp4Slope = Tail_PostStep_Force - Tail_Scrub_Force / frcRmp4Time

      math frcRmp5Time  = 0.0
      math frcRmp5Slope = 0.0

      math frcRmp6Time = Force_Ramp_Down_2  / cpu2_clock_16                
      limits frcRmp6Time 1.0 frcRmp6Time                              
       
      math frcRmp6Slope = Minimum_Force_2  - Tail_PostStep_Force / frcRmp6Time
       
      math Seg4_Force = Tail_PostStep_Force
      math Seg5_Force = Tail_PostStep_Force
     
    math Seg4_ForceTime = Tail_PostStep_Time / 1000 / cpu2_clock_16 
    if Tail_PostStep_USG > 0.0
      math Seg4_ForceTime = USG_RingDown_2 / cpu2_clock_16  + Seg4_ForceTime
    endif
    math Seg5_ForceTime = 0                                           
  endif
else  
     
    math frcRmp4Time  = 0.0
    math frcRmp4Slope = 0.0
    math frcRmp5Time  = 0.0
    math frcRmp5Slope = 0.0

    math frcRmp6Time = Force_Ramp_Down_2  / cpu2_clock_16                  
    limits frcRmp6Time 1.0 frcRmp6Time                                
    if Tail_Scrub_Amp * Tail_Scrub_Mode * tail_scrub > 0
      math frcRmp6Slope = Minimum_Force_2  - Tail_Scrub_Force / frcRmp6Time  
       
      math Seg4_Force = Tail_Scrub_Force
      math Seg5_Force = Tail_Scrub_Force
    else
      math frcRmp6Slope = Minimum_Force_2  - Adj_Force_2 / frcRmp6Time       
       
      math Seg4_Force = Adj_Force_2
      math Seg5_Force = Adj_Force_2
    endif
   
  math Seg4_ForceTime = 0                                           
  math Seg5_ForceTime = 0                                           
  
endif

math frcRmpDwnDly = Force_Ramp_Down_2  * 1000 + Extra_Rmp_Dwn_2               

math bondForceTime = bondForceTime - frcRmp2Time                       
limits bondForceTime 0 bondForceTime                                   

math dampTime = usgtime / cpu2_clock_16  * Damp_Time_2  + usgPreDelay    

if stitch_mode != 3
  if Scrub_Phase_Mode2 = 0
    math scrub_phase = Sec_Scrub_Phase2 + 30 * phase_convert   
    math x_scrub = y_ratio * Sec_Scrub2_Amp * 16.667           
    math y_scrub = x_ratio * Sec_Scrub2_Amp * 16.667           
  elseif Scrub_Phase_Mode2 = 1
    math scrub_phase = 90 + 30 * phase_convert                 
    math x_scrub = Sec_Scrub2_Amp * 16.667                     
    math y_scrub = Sec_Scrub2_Amp * 16.667                     
  else
    math scrub_phase = 30 * phase_convert                      
    math x_scrub = x_ratio * Sec_Scrub2_Amp * 16.667 * -1.0    
    math y_scrub = y_ratio * Sec_Scrub2_Amp * 16.667           
  endif

  math y_scrub = y_scrub * 0.55                               
   
  math y_scrub_cycles = Sec_Scrub_Cycles2 * 256               
  math scrub_phase = scrub_phase * 65536                      
   
  math cycles+phase = Sec_Scrub_Cycles2 + y_scrub_cycles + scrub_phase * Force_Profiling_2 
  math scrub_total = Sec_Scrub2_Amp * Sec_Scrub_Delay_Mode    

  calc FIRST_BOND_EQU scrub_test scrub_total 0                
  math tempr11  = 1000 / 2 + 1000 + 1000 + 1000
  math scrub_usg_delay = 4000 + 4000 * scrub_test             
                                                              
  math scrub_usg_delay = Sec_Scrub_Cycles2 - 1 * tempr11  + scrub_usg_delay
   
  math scrub_usg_delay = scrub_usg_delay * scrub_test * hifrcscrub * Force_Profiling_2 
  math scrub_force_time = scrub_usg_delay / 1000 / cpu2_clock_16   
  math dampTime = dampTime + scrub_force_time                 
   
  math initialForceTime = initialForceTime + scrub_force_time * Force_Profiling_2 
else

  math x_scrub = 0.0                                          
  math y_scrub = 0.0
  math cycles+phase = 0.0
  math scrub_usg_delay = 0.0

endif

#End of FILE: GENERIC.Include_ForceTime2.PDL
   
  math cont_thresh_2  = Contact_Threshold_2a
  if S_Z_ContactDetectMode1 = 2 
     math fs_contact_detect = 1
  else
     math fs_contact_detect = 0
  endif
  math fs_force_feedback = 0
  calc(FORCE_SENSOR_USAGE,fs_contact_detect,fs_force_feedback,C/V_2,forceSensorTime,Force_Profiling_2,     Adj_Initial_Force_2,Force_2,Sec_Equ_FF,cont_thresh_2 ,max_fs_force)
  calc(MIN_TIP_TIMES,C/V_2,0 ,fs_contact_detect,fs_force_feedback,trans_time,look_delay,detect_delay,1 )
  math tempr3  = trans_time + look_delay + detect_delay * C/V_2 / zenc_res_32 
  math tempr3  = tempr3  + z_pos_2
  limits new_ctip2 tempr3  new_ctip2
  io(forceSensor, fs_contact_detect, FsThreshold_2, fs_force_feedback, C/V_2, 1 )
  
  io(contact_detect_mode, 0 )      
   
  calc MOTION_ID motion_id 1
  move pal  X motion_id 0  1  1.0 0 Z_SEEK x_pos poly_tab_1_no_cv  BONDSITE x_pos 0.0 0.0 0.0     0.0 FF_NORMAL LF4 LINK
  move pal  Y motion_id 0  1  1.0 0 Z_SEEK y_pos poly_tab_1_no_cv  BONDSITE y_pos 0.0 0.0 0.0     0.0 FF_NORMAL LF4 LINK
  move pal  Z motion_id 0  1  1.0 0 Z_SEEK new_ctip2 poly_tab_1_no_cv  ESTOP z_pos_2 S_C/V_2     0.0 0.0 0.0 FF_NORMAL LF4 GO_VEC

##########################################################################################################
#FILE: GENERIC.Include_2ndBond.PDL  VERSION: 1.64  DATE: 01/17/07  TIME: 14:35:38

##########################################################################################################
#FILE: GENERIC.Include_USGTime2.PDL  VERSION: 1.12  DATE: 09/12/06  TIME: 20:57:02

math frc_inittime = Initial_Force_Time_2  * Force_Profiling_2 
math frc_ramptime = Force_Ramp_Time_2 * Force_Profiling_2 

math usgPreDelay = USG_Pre-Delay_2a

if stitch_mode <= 1
  if Contact_Angle * Contact_Offset < 0.0
    math usgPreDelay = minXY_ATX1P  * 1000 + usgPreDelay                    
  endif
  
endif

math DACperGram  = 100.0grams - 0.0grams / 100.0                         

math hifrc_fctr  = 0.0
math hifrc_timebase = 4.0 * 10.0                                     
math hifrc_threshold = DACperGram * hifrclimit + 0.0grams            

math hifrcflag = 0                                                   
math hifrcscrub = 1                                                  

math usgPreDelay = usgPreDelay / 1000 / cpu2_clock_16                
math usgtime = USGbondtime2 / USG_clocks_DSP                       

math initialForceTime = frc_inittime * usgtime / cpu2_clock_16       

if Force_Profiling_2  = 1                                                  
  if Adj_Initial_Force_2 > hifrc_threshold                            
    math IBFtime = hifrc_fctr * Adj_Initial_Force_2 + hifrc_timebase / cpu2_clock_16 
    limits initialForceTime 0 IBFtime                                 
    math IBFpctTime = initialForceTime / IBFtime                      
    math hifrcflag = 1
    math hifrcscrub = 0                                               
  else
    math IBFpctTime = 0.0
  endif
else
  math IBFpctTime = 0.0
endif
 
math bondForceTime = usgtime / cpu2_clock_16  - initialForceTime + usgPreDelay
limits bondForceTime 0 bondForceTime

if Adj_Force_2 > hifrc_threshold                                      
  math FBFtime = hifrc_fctr * Adj_Force_2 + hifrc_timebase - USG_RingDown_2 / cpu2_clock_16 
  math FBFtime = 1.0 - IBFpctTime * FBFtime                           
  limits bondForceTime 0 FBFtime                    
  math hifrcflag = 2
  math hifrcscrub = 0                               
endif
  
if Stitch_Option = 0

  math tail_scrub = 1
  
elseif stitch_mode >= 3
  math tail_scrub = 1
else
  math tail_scrub = 0
endif

  if Tail_Scrub_Mode * tail_scrub = 2

    math forceTimeAdder = minXY_ATX1P  / cpu2_clock_16               
    math forceTimeAdder = forceTimeAdder - bondForceTime           

    math fdcIBFlimit = initialForceTime * cpu2_clock_16  * -1.0   
    math FDC_timeoff = Tail_ScrubTime_Offset 
    limits FDC_timeoff fdcIBFlimit 100.0
 
    if FDC_timeoff < 0.0
       
      math forceTimeAdder = FDC_timeoff / cpu2_clock_16  + forceTimeAdder
    endif

    if forceTimeAdder > 0.0                                        
 
      if hifrcflag <= 1
        math bondForceTime = bondForceTime + forceTimeAdder        
        math forceTimeAdder = forceTimeAdder * -1.0                
        limits forceTimeAdder 0 1000
      else

        if FBFtime - bondForceTime >= forceTimeAdder
          math bondForceTime = bondForceTime + forceTimeAdder      
          math forceTimeAdder = forceTimeAdder * -1.0              
          limits forceTimeAdder 0 1000
        else

          if FDC_timeoff < 0.0
            math forceTimeAdder = FDC_timeoff / cpu2_clock_16  - forceTimeAdder  
          else
            math forceTimeAdder = forceTimeAdder * -1.0
          endif

          if forceTimeAdder < fdcIBFlimit
            math Tail_ScrubOffset_Mode  = 0                                      
          endif

        endif
      endif
    else
      math forceTimeAdder = forceTimeAdder * -1.0                  
      limits forceTimeAdder 0 1000
    endif

    math forceTimeAdder = forceTimeAdder * cpu2_clock_16          

    limits FDC_timeoff fdcIBFlimit forceTimeAdder                  
  endif

if hifrcflag > 0                                      
  math usgtime = initialForceTime + bondForceTime - usgPreDelay * cpu2_clock_16   
  math USGbondtime2 = usgtime * USG_clocks_DSP                      
endif

math frcRampLimit = initialForceTime + bondForceTime
math frcRampLimit = initialForceTime / frcRampLimit
math frcRampLimit = 1.0 - frcRampLimit                                 
math bondForceTime = USG_RingDown_2 / cpu2_clock_16  + bondForceTime  

limits frc_ramptime 0.0 frcRampLimit                                   

math frcRmp2Time = frc_ramptime * usgtime / cpu2_clock_16             

math frcRmp3Time  = 0.0
math frcRmp3Slope = 0.0
math Seg3_Force = Adj_Force_2                                          
math Seg3_ForceTime = 0.0                                              
  
if Tail_Scrub_Mode * tail_scrub = 2
   
  math bondForceTime = USG_RingDown_2 / cpu2_clock_16  * -1.0 + bondForceTime
  math frcRmp3Time = Scrub_Force_Ramp_Down_2 + 4 / cpu2_clock_16      
  math frcRmp3Slope = Tail_Scrub_Force - Adj_Force_2 / frcRmp3Time     

  math Seg3_Force = Tail_Scrub_Force

  math Seg3_ForceTime = minXY_ATX1P  * Tail_Scrub_Steps                   
  math tempr8 = 1.0 / Tail_Step_Speed - 1.0 * minXY_ATX1P                 
  math Seg3_ForceTime = Tail_Scrub_Steps - 1.0 * tempr8 + Seg3_ForceTime  
   
  math Seg3_ForceTime = Tail_Scrub_Steps - 1.0 * tail_step_delay + Seg3_ForceTime / cpu2_clock_16 

elseif Tail_Scrub_Amp * tail_scrub > 0
  
  if Tail_Scrub_Phase = 0
     
    math scrub_phase = 0                                                  
    math tail_x_scrub = x_ratio * Tail_Scrub_Amp * -1.0                   
    math tail_y_scrub = y_ratio * Tail_Scrub_Amp                          
  elseif Tail_Scrub_Phase = 1
     
    math scrub_phase = 0                                                  
    math tail_x_scrub = y_ratio * Tail_Scrub_Amp                          
    math tail_y_scrub = x_ratio * Tail_Scrub_Amp                          
  else
     
    math scrub_phase = 90                                                 
    math tail_x_scrub = Tail_Scrub_Amp                                    
    math tail_y_scrub = Tail_Scrub_Amp                                    
  endif

  calc(XY_SCRUB_TIME, scrub_time, scrub_phase_delay, scrub_phase,       Tail_Scrub_Amp, Tail_Scrub_Freq, Tail_Scrub_Cycles)

  math tempr7 = 0.0

  if Tail_Scrub_Mode * Tail_Scrub_Offset != 0
    calc(XY_MOTION_TIME, tempr7, Tail_Scrub_Offset, 1.0, 0)
    math tempr7 = tempr7 / 1000
  endif

  if Tail_Scrub_Mode = 1
     
    math bondForceTime = USG_RingDown_2 / cpu2_clock_16  * -1.0 + bondForceTime
    math frcRmp3Time = Scrub_Force_Ramp_Down_2 + 4 / cpu2_clock_16       
    math frcRmp3Slope = Tail_Scrub_Force - Adj_Force_2 / frcRmp3Time      
    math Seg3_Force = Tail_Scrub_Force
    math Seg3_ForceTime = scrub_time + tempr7 / cpu2_clock_16            
    if tail_scrub_pwr + tail_scrub_curr + tail_scrub_volt > 0.0                                                
      math Seg3_ForceTime = USG_RingDown_2 / cpu2_clock_16  + Seg3_ForceTime
    endif
  endif
endif
 
if Tail_PostStep_Force > hifrc_threshold
  math tempr7 = hifrc_timebase - Tail_PostStep_Ramp - 4 * 1000
  if Tail_PostStep_USG > 0.0
    math tempr7 = USG_RingDown_2 * 1000 * -1.0 + tempr7
  endif
  limits Tail_PostStep_Time 0.0 tempr7
endif
  
if Tail_Scrub_Mode * tail_scrub = 2
  if Tail_PostStep_Force <= Minimum_Force_2 
       
      math frcRmp4Time  = 0.0
      math frcRmp4Slope = 0.0
      math frcRmp5Time  = 0.0
      math frcRmp5Slope = 0.0

      math frcRmp6Time = Force_Ramp_Down_2  / cpu2_clock_16                  
      limits frcRmp6Time 1.0 frcRmp6Time
      math frcRmp6Slope = Minimum_Force_2  - Tail_Scrub_Force / frcRmp6Time    
       
      math Seg4_Force = Tail_Scrub_Force
      math Seg5_Force = Tail_Scrub_Force
     
    if tail_scrub_pwr + tail_scrub_curr + tail_scrub_volt > 0.0                                            
      math Seg3_ForceTime = USG_RingDown_2 / cpu2_clock_16  + Seg3_ForceTime
    endif

    math Seg4_ForceTime = 0                                             
    math Seg5_ForceTime = 0                                             
  else
       
      math frcRmp4Time = Tail_PostStep_Ramp + 4 / cpu2_clock_16        
       
      math frcRmp4Slope = Tail_PostStep_Force - Tail_Scrub_Force / frcRmp4Time

      math frcRmp5Time  = 0.0
      math frcRmp5Slope = 0.0

      math frcRmp6Time = Force_Ramp_Down_2  / cpu2_clock_16                  
      limits frcRmp6Time 1.0 frcRmp6Time
       
      math frcRmp6Slope = Minimum_Force_2  - Tail_PostStep_Force / frcRmp6Time
       
      math Seg4_Force = Tail_PostStep_Force
      math Seg5_Force = Tail_PostStep_Force
     
    math Seg4_ForceTime = Tail_PostStep_Time / 1000 / cpu2_clock_16 
    if Tail_PostStep_USG > 0.0
      math Seg4_ForceTime = USG_RingDown_2 / cpu2_clock_16  + Seg4_ForceTime
    endif
    math Seg5_ForceTime = 0                                             
  endif
else  
     
    math frcRmp4Time  = 0.0
    math frcRmp4Slope = 0.0
    math frcRmp5Time  = 0.0
    math frcRmp5Slope = 0.0

    math frcRmp6Time = Force_Ramp_Down_2  / cpu2_clock_16                    
    limits frcRmp6Time 1.0 frcRmp6Time

    if Tail_Scrub_Amp * Tail_Scrub_Mode * tail_scrub > 0
      math frcRmp6Slope = Minimum_Force_2  - Tail_Scrub_Force / frcRmp6Time    
       
      math Seg4_Force = Tail_Scrub_Force
      math Seg5_Force = Tail_Scrub_Force
    else
      math frcRmp6Slope = Minimum_Force_2  - Adj_Force_2 / frcRmp6Time         
       
      math Seg4_Force = Adj_Force_2
      math Seg5_Force = Adj_Force_2
    endif
   
  math Seg4_ForceTime = 0                                               
  math Seg5_ForceTime = 0                                               
  
endif

math frcRmpDwnDly = Force_Ramp_Down_2  * 1000 + Extra_Rmp_Dwn_2                

math bondForceTime = bondForceTime - frcRmp2Time                        
limits bondForceTime 0 bondForceTime                                    
                                                                        
if USG_Init_Time_2 > 0.0

  if stitch_mode = 0
    if Tail_Scrub_Mode < 2

      math USGinitCPlev = Adj_USG_Power_2 * USG_Init_Level_2              
      math USGinitCVlev = Adj_USG_Volts_2 * USG_Init_Level_2              
      math USGinitCClev = Adj_USG_Current_2 * USG_Init_Level_2            
      math USG_inittime2 = USGbondtime2 * USG_Init_Time_2                
      math USGbondtime2 = USGbondtime2 - USG_inittime2                  
      math USG_Profile_2a = 0                                             

      math bond_ramp_up_2 = 0.0

    endif
  endif

else
  math bond_ramp_up_2 = Ramp_Up_Time_2a * USGbondtime2
endif
                                                                 
math bond_ramp_dn_2 = Ramp_Down_Time_2a * USGbondtime2
math max_burst_time = USGbondtime2 * 0.5                        
math burst_time_2 = Burst_Time_2a * USG_clocks_DSP             
limits burst_time_2 0.0 max_burst_time                           
math burst_level_2 = Burst_Level_2a * 10.0 * 10.0                

if USG_Profile_2a = 0
  math USGbondtime2 = USGbondtime2 - bond_ramp_up_2 - bond_ramp_dn_2
else
  if USG_Profile_2a = 2
    math USGbondtime2 = USGbondtime2 - burst_time_2 - bond_ramp_dn_2
  endif
endif

if PreBleed_Curr2 > 0.0
  math Bleed_Current_2 = PreBleed_Curr2
endif

calc(USG_PROFILE, usg_seg_count, usg_seg1_time, usg_seg1_end, usg_seg2_time,     usg_seg2_end, usg_seg3_time, usg_seg3_end, usg_seg4_time, usg_seg4_end,     USG_Profile_2a, USGbondtime2, bond_ramp_up_2, bond_ramp_dn_2,      burst_level_2, burst_time_2, usg_dummy0, usg_dummy0, usg_dummy0, usg_dummy0, usg_dummy0)

if stitch_mode != 3
  math scrub_total = Sec_Scrub2_Amp * Sec_Scrub_Delay_Mode    

  calc FIRST_BOND_EQU scrub_test scrub_total 0                

  math tempr11  = 1000 / 2 + 1000 + 1000 + 1000
  math scrub_usg_delay = 4000 + 4000 * scrub_test             
   
  math scrub_usg_delay = Sec_Scrub_Cycles2 - 1 * tempr11  + scrub_usg_delay
   
  math scrub_usg_delay = scrub_usg_delay * scrub_test * hifrcscrub * Force_Profiling_2 
   
  math initialForceTime = initialForceTime + scrub_force_time * Force_Profiling_2 
else

  math scrub_usg_delay = 0.0

endif

if PreBleed_Curr2 = 0.0
  math BleedLevCP = USG_Power_2 * PreBleed_2                  
  math BleedLevCC = USG_Current_2 * PreBleed_2
  math BleedLevCV = USG_Volts_2 * PreBleed_2
endif

math usgPreDelay = USG_Pre-Delay_2a + scrub_usg_delay

#End of FILE: GENERIC.Include_USGTime2.PDL

math fs_contact_detect = 0.0
math cv_mode = 0.0
math fs_force_feedback = 0.0

calc(MIN_TIP_TIMES,C/V_2,cv_mode,fs_contact_detect,fs_force_feedback,trans_time,look_delay,detect_delay,1 )

math tempr5 = -1 * 2

io(cpu2,Contact_Threshold_2a, dampTime, Damp_Gain_2 , Post_Gain_2 , 0.0, 0.0, 1.0,   0, x_scrub, y_scrub, cycles+phase, frcRmp1Slope, frcRmp1Time, Adj_Initial_Force_2, initialForceTime,   frcRmp2Slope, frcRmp2Time, Adj_Force_2, bondForceTime, frcRmp3Slope, frcRmp3Time, Seg3_Force, Seg3_ForceTime,   frcRmp4Slope, frcRmp4Time, Seg4_Force, Seg4_ForceTime, frcRmp5Slope, frcRmp5Time, Seg5_Force, Seg5_ForceTime,   frcRmp6Slope, frcRmp6Time, Minimum_Force_2 , look_delay , 0, 0.0, 0, tempr5)

io( usg_prep, Adj_USG_Power_2, Adj_USG_Current_2, Adj_USG_Volts_2,    USG_Mode_2, Bleed_Power_2, Bleed_Current_2, Bleed_Voltage_2,    usg_seg_count, usg_seg1_time, usg_seg1_end, usg_seg2_time, usg_seg2_end,    usg_seg3_time,usg_seg3_end, usg_seg4_time, usg_seg4_end,    usg_dummy0, usg_dummy0, usg_dummy0, usg_dummy0, usg_dummy0, usg_dummy0 )
    
      math tempr1 = approach_mode + stitch_mode
    
if tempr1 = 0
  if WBMS_enable
      await(WBMS_SAMPLE, no_motion_id)                           
  endif
endif

await(Z_SEEK, motion_id)                                         

if PreBleed_Curr2 = 0.0
  io(usg_on, BleedLevCP, BleedLevCC, BleedLevCV, USG_Mode_2, 3)  
else
  io(usg_on, 0, PreBleed_Curr2, 0, USG_Mode_2, 3)                
endif

event_ena(Z_CONTACT, no_motion_id)                               

event_ena(USG_PRO_COMPLETE, no_motion_id)                        
  
if stitch_mode <= 2
    
  if approach_mode = 0

    await(Z_CONTACT_ANGLE, no_motion_id)                             
    
  elseif XY_Step * Z_Step > 0.0
    await(Z_CONTACT_ANGLE, no_motion_id)                             
  endif
    
endif

await(Z_CONTACT, no_motion_id)                                       

if stitch_mode <= 1
  if Contact_Angle * Contact_Offset < 0.0
    math tempr7 = Contact_Offset * x_ratio * -1.0
    math tempr8 = Contact_Offset * y_ratio * -1.0

    calc MOTION_ID motion_id 1        
     
    move prp  X motion_id 0  1  1.0 0 XY_JAM tempr7 poly_tab_1_no_cv  FF_NORMAL 1.0 LINK
    move prp  Y motion_id 0  1  1.0 0 XY_JAM tempr8 poly_tab_1_no_cv  FF_NORMAL 1.0 GO_VEC
    await(XY_JAM, motion_id)          
  endif
  
endif

wait(usgPreDelay)                                                
                                                                 
if USG_Init_Time_2 > 0.0

  if stitch_mode = 0
    if Tail_Scrub_Mode < 2

    io(usg_on,USGinitCPlev,USGinitCClev,USGinitCVlev,USG_Mode_2, 3)  
    math tempr12 = USG_inittime2 / USG_clocks_DSP  * 1000          
    wait(tempr12)

    endif
  endif

endif

io(usg_on, 0.0, 0.0, 0.0, USG_Mode_2, 1)                         

if Tail_Scrub_Mode * tail_scrub = 2
  math usgPreDelay = usgPreDelay / 1000 / cpu2_clock_16       
  math tempr9 = Tail_ScrubTime_Offset / cpu2_clock_16  + initialForceTime - usgPreDelay

  limits tempr9 0.0 maxDelay
  math tempr9 = tempr9 * cpu2_clock_16  * 1000

  wait(tempr9)                                                 

  if Tail_Scrub_Offset != 0.0                                  
    calc AUX_MOTION_ID aux_motion_id 1                         

    if Tail_ScrubOffset_Mode = 0                               
      math tempr7 = Tail_Scrub_Offset * x_ratio
      math tempr8 = Tail_Scrub_Offset * y_ratio
      move prp  X aux_motion_id 0  1  1.0 0 XY_JAM tempr7 poly_tab_1_no_cv  FF_NORMAL 1.0         0  LINK    
      move prp  Y aux_motion_id 0  1  1.0 0 XY_JAM tempr8 poly_tab_1_no_cv  FF_NORMAL 1.0         0  GO_VEC
      await(XY_JAM, aux_motion_id)
    else
                                                               
      calc ABS_VALUE tempr8 Tail_Scrub_Offset                  
      if Tail_ScrubOffset_Mode = 1                             
        math tempr8 = tempr8 * -1.0
        move prp  Y aux_motion_id 0  1  1.0 0 Y_JAM tempr8 poly_tab_1_no_cv  FF_NORMAL 1.0           0  GO
        await(Y_JAM, aux_motion_id)
      elseif y_ratio < 0.0                                     
        math tempr8 = tempr8 * y_ratio
        move prp  Y aux_motion_id 0  1  1.0 0 Y_JAM tempr8 poly_tab_1_no_cv  FF_NORMAL 1.0           0  GO
        await(Y_JAM, aux_motion_id)
      endif
    endif  
  endif  
endif  

input prs_operation perform_lookahead lookahead_id
if perform_lookahead
  event_ena(CAPTURE_COMPLETE, lookahead_id)
  io(prs_capture, lookahead_id)
endif

math que_ahead = 1						 
  
if Stitch_Option = 0
  calc PREV_WIRE tempr6 Tail_Pull_Test
  if tempr6
    if Tail_Pull_Enable
      math que_ahead = 0						 
    endif
  endif
elseif stitch_mode > 0
  if stitch_mode < 4
    calc PREV_WIRE tempr6 Tail_Pull_Test
    if tempr6
      if Tail_Pull_Enable
        math que_ahead = 0						 
      endif
    endif
  endif
endif

if z_pos_update = 1

  update_ena(Z_POSITION,ctip2)                                   

    update(ctip2,Z_POSITION,0.0,0.0)                             

elseif stitch_mode > 0

  update_ena(Z_POSITION,ctip2)                                   

endif

calc MOTION_ID motion_id 1                      
  
if Stitch_Option = 0
   
  event_ena(TIME_BRK, motion_id, Z_END_LINK, Tail_Close_Time, TRG_CLMP_CLOS)
  
elseif stitch_mode = 0
  math que_ahead = 0                            
elseif stitch_mode >= 3
   
  event_ena(TIME_BRK, motion_id, Z_END_LINK, Tail_Close_Time, TRG_CLMP_CLOS)
endif

if fs_contact_detect > 0
  io(verifyFsDetect)
endif

if Tail_Scrub_Mode * tail_scrub = 2                              
  if Tail_Step_Offset != 0.0
    math que_ahead = 0
  endif
else
  
  if Tail_Scrub_Amp + Stitch_Option > 0                          
  
    math que_ahead = 0
  endif
endif

if que_ahead = 0
  await(USG_PRO_COMPLETE, no_motion_id)                          
    
if Stitch_Option = 0
  calc PREV_WIRE tempr6 Tail_Pull_Test
  if tempr6
    if Tail_Pull_Enable
      update_await(TAIL_PULL, tail, 120000)  						 
    endif
  endif
elseif stitch_mode > 0
  if stitch_mode < 4
    calc PREV_WIRE tempr6 Tail_Pull_Test
    if tempr6
      if Tail_Pull_Enable
        update_await(TAIL_PULL, tail, 120000)  						 
      endif
    endif
  endif
endif

  if stitch_mode = 0
    io(trigger_pt,4)                                             
  endif
  
  if perform_lookahead
    await(CAPTURE_COMPLETE, lookahead_id)
  endif
  
endif

if Tail_Scrub_Mode * tail_scrub = 2
  if Tail_Step_Offset != 0.0
    math tempr7 = Scrub_Force_Ramp_Down_2 + 4 * 1000
    wait(tempr7)                                                 
    math tail_dist_total = Tail_Step_Offset
    math tail_step_cnt = Tail_Scrub_Steps

    io(usg_on, tail_scrub_pwr, tail_scrub_curr, tail_scrub_volt, usg_mode, 3)     

    math tail_step_dist = Tail_Step_Offset / Tail_Scrub_Steps
    math tempr7 = tail_step_dist * x_ratio * -1.0
    math tempr8 = tail_step_dist * y_ratio * -1.0
    math tempr9 = 1.0 / Tail_Step_Speed - 1.0 * minXY_ATX1P  * 1000

    if tail_step_cnt = 10
      calc AUX_MOTION_ID aux_motion_id 1                         
      move prp  X aux_motion_id 0  1  1.0 0 XY_JAM tempr7 poly_tab_1_no_cv  FF_NORMAL 1.0         0  LINK                                            
      move prp  Y aux_motion_id 0  1  1.0 0 XY_JAM tempr8 poly_tab_1_no_cv  FF_NORMAL 1.0         0  GO_VEC
      await(XY_JAM, aux_motion_id)
      math tail_step_cnt = tail_step_cnt - 1
      math tail_dist_total = tail_dist_total - tail_step_dist

      wait(tempr9)
    endif

    if tail_step_cnt = 9
      calc AUX_MOTION_ID aux_motion_id 1                         
      move prp  X aux_motion_id 0  1  1.0 0 XY_JAM tempr7 poly_tab_1_no_cv  FF_NORMAL 1.0         0  LINK    
      move prp  Y aux_motion_id 0  1  1.0 0 XY_JAM tempr8 poly_tab_1_no_cv  FF_NORMAL 1.0         0  GO_VEC
      await(XY_JAM, aux_motion_id)
      math tail_step_cnt = tail_step_cnt - 1
      math tail_dist_total = tail_dist_total - tail_step_dist

      wait(tempr9)
    endif

    if tail_step_cnt = 8
      calc AUX_MOTION_ID aux_motion_id 1       
      move prp  X aux_motion_id 0  1  1.0 0 XY_JAM tempr7 poly_tab_1_no_cv  FF_NORMAL 1.0         0  LINK                          
      move prp  Y aux_motion_id 0  1  1.0 0 XY_JAM tempr8 poly_tab_1_no_cv  FF_NORMAL 1.0         0  GO_VEC
      await(XY_JAM, aux_motion_id)
      math tail_step_cnt = tail_step_cnt - 1
      math tail_dist_total = tail_dist_total - tail_step_dist

      wait(tempr9)
    endif

    if tail_step_cnt = 7
      calc AUX_MOTION_ID aux_motion_id 1       
      move prp  X aux_motion_id 0  1  1.0 0 XY_JAM tempr7 poly_tab_1_no_cv  FF_NORMAL 1.0         0  LINK                          
      move prp  Y aux_motion_id 0  1  1.0 0 XY_JAM tempr8 poly_tab_1_no_cv  FF_NORMAL 1.0         0  GO_VEC
      await(XY_JAM, aux_motion_id)
      math tail_step_cnt = tail_step_cnt - 1
      math tail_dist_total = tail_dist_total - tail_step_dist

      wait(tempr9)
    endif

    if tail_step_cnt = 6
      calc AUX_MOTION_ID aux_motion_id 1       
      move prp  X aux_motion_id 0  1  1.0 0 XY_JAM tempr7 poly_tab_1_no_cv  FF_NORMAL 1.0         0  LINK                          
      move prp  Y aux_motion_id 0  1  1.0 0 XY_JAM tempr8 poly_tab_1_no_cv  FF_NORMAL 1.0         0  GO_VEC
      await(XY_JAM, aux_motion_id)
      math tail_step_cnt = tail_step_cnt - 1
      math tail_dist_total = tail_dist_total - tail_step_dist

      wait(tempr9)
    endif

    if tail_step_cnt = 5
      calc AUX_MOTION_ID aux_motion_id 1       
      move prp  X aux_motion_id 0  1  1.0 0 XY_JAM tempr7 poly_tab_1_no_cv  FF_NORMAL 1.0         0  LINK                          
      move prp  Y aux_motion_id 0  1  1.0 0 XY_JAM tempr8 poly_tab_1_no_cv  FF_NORMAL 1.0         0  GO_VEC
      await(XY_JAM, aux_motion_id)
      math tail_step_cnt = tail_step_cnt - 1
      math tail_dist_total = tail_dist_total - tail_step_dist

      wait(tempr9)
    endif

    if tail_step_cnt = 4
      calc AUX_MOTION_ID aux_motion_id 1       
      move prp  X aux_motion_id 0  1  1.0 0 XY_JAM tempr7 poly_tab_1_no_cv  FF_NORMAL 1.0         0  LINK                          
      move prp  Y aux_motion_id 0  1  1.0 0 XY_JAM tempr8 poly_tab_1_no_cv  FF_NORMAL 1.0         0  GO_VEC
      await(XY_JAM, aux_motion_id)
      math tail_step_cnt = tail_step_cnt - 1
      math tail_dist_total = tail_dist_total - tail_step_dist

      wait(tempr9)
    endif

    if tail_step_cnt = 3
      calc AUX_MOTION_ID aux_motion_id 1       
      move prp  X aux_motion_id 0  1  1.0 0 XY_JAM tempr7 poly_tab_1_no_cv  FF_NORMAL 1.0         0  LINK                          
      move prp  Y aux_motion_id 0  1  1.0 0 XY_JAM tempr8 poly_tab_1_no_cv  FF_NORMAL 1.0         0  GO_VEC
      await(XY_JAM, aux_motion_id)
      math tail_step_cnt = tail_step_cnt - 1
      math tail_dist_total = tail_dist_total - tail_step_dist

      wait(tempr9)
    endif

    if tail_step_cnt = 2
      calc AUX_MOTION_ID aux_motion_id 1       
      move prp  X aux_motion_id 0  1  1.0 0 XY_JAM tempr7 poly_tab_1_no_cv  FF_NORMAL 1.0         0  LINK                          
      move prp  Y aux_motion_id 0  1  1.0 0 XY_JAM tempr8 poly_tab_1_no_cv  FF_NORMAL 1.0         0  GO_VEC
      await(XY_JAM, aux_motion_id)
      math tail_step_cnt = tail_step_cnt - 1
      math tail_dist_total = tail_dist_total - tail_step_dist

      wait(tempr9)
    endif

    if tail_step_cnt = 1
      math tempr7 = tail_dist_total * x_ratio * -1.0
      math tempr8 = tail_dist_total * y_ratio * -1.0
      calc AUX_MOTION_ID aux_motion_id 1       
      move prp  X aux_motion_id 0  1  1.0 0 XY_JAM tempr7 poly_tab_1_no_cv  FF_NORMAL 1.0         0  LINK                          
      move prp  Y aux_motion_id 0  1  1.0 0 XY_JAM tempr8 poly_tab_1_no_cv  FF_NORMAL 1.0         0  GO_VEC
      await(XY_JAM, aux_motion_id)
      math tail_step_cnt = 0
      math tail_dist_total = 0.0
    endif

    io(usg_off)

    if Tail_PostStep_Force > Minimum_Force_2 
      math tempr7 = Tail_PostStep_Ramp + 4 * 1000
      wait(tempr7)                                               

      io(usg_on, 0, Tail_PostStep_USG, 0, 2, 3)                  

      wait(Tail_PostStep_Time)
      io(usg_off)

      if Tail_PostStep_USG > 0.0
        math tempr7 = USG_RingDown_2 * 1000
        wait(tempr7)
      endif
    elseif tail_scrub_pwr + tail_scrub_curr + tail_scrub_volt > 0.0
      math tempr7 = USG_RingDown_2 * 1000
      wait(tempr7)
    endif

    wait(frcRmpDwnDly)                                           

  endif   

elseif Tail_Scrub_Amp * tail_scrub > 0

  if Tail_Scrub_Mode = 0
    math tempr7 = USG_RingDown_2 * 1000 + frcRmpDwnDly
    wait(tempr7)                                            

    calc AUX_MOTION_ID aux_motion_id 1                      
    move trp Z  aux_motion_id 0  1  1.0 0 Z_JAM Tail_Scrub_Ht mot_tab_1 FF_NORMAL Tail_Speed       TailXY_filter   GO
    await(Z_JAM,aux_motion_id)
  else
    math tempr7 = Scrub_Force_Ramp_Down_2 + 4 * 1000        
    wait(tempr7)                                            
  endif

  if Tail_Scrub_Offset != 0
    math tempr7 = Tail_Scrub_Offset * x_ratio
    math tempr8 = Tail_Scrub_Offset * y_ratio
    calc AUX_MOTION_ID aux_motion_id 1                      
     
    move prp  X aux_motion_id 0  1  1.0 0 XY_JAM tempr7 poly_tab_1_no_cv  FF_NORMAL 1.0       0  LINK
    move prp  Y aux_motion_id 0  1  1.0 0 XY_JAM tempr8 poly_tab_1_no_cv  FF_NORMAL 1.0       0  GO_VEC
    await(XY_JAM, aux_motion_id)
  endif

  io(usg_on, tail_scrub_pwr, tail_scrub_curr, tail_scrub_volt, usg_mode, 3)    

  calc AUX_MOTION_ID aux_motion_id 1
  event_ena(XY_JAM,aux_motion_id)
  move trs X  aux_motion_id 0  1  1.0 0 NO_EVENT tail_x_scrub table_scrub_sin Tail_Scrub_Freq     Tail_Scrub_Cycles scrub_phase_delay FF_NORMAL 1.0 0  LINK
  move trs Y  aux_motion_id 0  1  1.0 0 NO_EVENT tail_y_scrub table_scrub_sin Tail_Scrub_Freq     Tail_Scrub_Cycles 0.0   FF_NORMAL 1.0 0  GO_VEC
  await(XY_JAM,aux_motion_id)

  io(usg_off)

  if Tail_Scrub_Mode != 0
    if tail_scrub_pwr + tail_scrub_curr + tail_scrub_volt > 0.0
      math tempr7 = USG_RingDown_2 * 1000
      wait(tempr7)
    endif

    wait(frcRmpDwnDly)                                           
  
  endif
else
  math tempr7 = USG_RingDown_2 * 1000 + frcRmpDwnDly
  if que_ahead = 0						 
    wait(tempr7)
  
  endif
endif

export(efo_fired, 0, 1 )                              

calc PASS_VARS 1  que_ahead  tempr7  perform_lookahead  lookahead_id

#End of FILE: GENERIC.Include_2ndBond.PDL

endif  

#End of FILE: GENERIC.Include_Stitch.PDL

end
